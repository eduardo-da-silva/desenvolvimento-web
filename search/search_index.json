{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Informa\u00e7\u00f5es iniciais","text":"<p>Essas s\u00e3o notas de aula para o uso nas disciplinas de desenvolvimento web dos professores Eduardo da Silva e Kennedy Ara\u00fajo.</p> <p>Esse material ainda est\u00e1 em constru\u00e7\u00e3o e o seu conte\u00fado \u00e9 melhor absorvido durante as atividades realizadas em sala de aula.</p>"},{"location":"#trilha-do-curso","title":"Trilha do Curso","text":"<p>Esse curso \u00e9 parte de uma trilha de aprendizado. Siga os links abaixo para acessar os outros cursos da trilha:</p> <ul> <li>Programa\u00e7\u00e3o I (Prof. F\u00e1bio Longo de Moura)</li> <li>L\u00f3gica de Programa\u00e7\u00e3o usando JavaScript</li> <li>Desenvolvimento Web II (Prof. Eduardo da Silva e Prof. Kennedy Ara\u00fajo)</li> <li>Desenvolvimento front-end com VueJS</li> <li>Desenvolvimento Web III (Prof. Marco Andr\u00e9 Lopes Mendes)</li> <li>Desenvolvimento back-end com Django e DRF.</li> <li>Desenvolvimento Dispositivos m\u00f3veis III (Prof. Eduardo da Silva)</li> <li>Desenvolvimento para dispositivos m\u00f3veis com Vue + Vite + PWA.</li> </ul> <p>Bons estudos!</p>"},{"location":"#configurando-o-ambiente","title":"Configurando o ambiente","text":""},{"location":"#instalacao-da-versao-lts-do-nodejs","title":"Instala\u00e7\u00e3o da vers\u00e3o LTS do NodeJS","text":"<p>Recomendo a utiliza\u00e7\u00e3o do <code>nvm</code>, que permite a utiliza\u00e7\u00e3o de vers\u00f5es diferentes do NodeJS. O nvm \u00e9 gerenciador de vers\u00f5es do NodeJs, desenvolvido para ser instalado utilizando a conta de um usu\u00e1rio final.</p> <p>Para instalar ou atualizar o o <code>nvm</code>, execute o comando abaixo:</p> <pre><code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh | bash\n</code></pre> <p>Ap\u00f3s a instala\u00e7\u00e3o, \u00e9 necess\u00e1rio atualizar as vari\u00e1veis de ambiente do seu terminal. Para tal, sugiro fechar o terminal e abrir novamente. Em seguida, voc\u00ea pode instalar a vers\u00e3o LTS do NodeJS:</p> <pre><code>nvm install --lts\n</code></pre> Para quem utiliza o zsh <p>Caso voc\u00ea esteja utilizando o ambiente <code>zsh</code>, \u00e9 necess\u00e1rio editar o arquivo <code>~/.zshrc</code> e adicione as seguintes linhas:</p> <pre><code>export NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] &amp;&amp; \\. \"$NVM_DIR/nvm.sh\"\n[ -s \"$NVM_DIR/bash_completion\" ] &amp;&amp; \\. \"$NVM_DIR/bash_completion\"\n</code></pre>"},{"location":"#configuracao-das-variaveis-de-ambiente-do-git","title":"Configura\u00e7\u00e3o das vari\u00e1veis de ambiente do GIT","text":"<p>Considerando que o <code>git</code> j\u00e1 esteja instalado em seu ambiente, sugiro configurar as vari\u00e1veis de ambiente com as informa\u00e7\u00f5es do usu\u00e1rio e email para registros nos commits do reposit\u00f3rio. Para isso, execute os seguintes comandos:</p> <pre><code>git config --global user.name \"Nome do usu\u00e1rio\"\ngit config --global user.email \"email@dominio.com\"\n</code></pre> <p>Ambiente no Microsoft Windows</p> <p>Foi criada uma playlist no Youtube. Existem algumas dicas boas quanto \u00e0 instala\u00e7\u00e3o e permiss\u00e3o de acesso.</p> <p>Um comando quase sempre necess\u00e1rio no Windows, para ser executado no Power Shell, \u00e9:</p> <pre><code>Set-ExecutionPolicy Unrestricted -Scope CurrentUser\n</code></pre>"},{"location":"#extensoes-recomendadas-do-visual-studio-code","title":"Extens\u00f5es recomendadas do Visual Studio Code","text":"<p>Eu sugiro que voc\u00ea instale as seguintes extens\u00f5es para o Visual Studio Code:</p> <ul> <li>Volar</li> <li>ESLint</li> <li>Prettier</li> <li>Portuguese (Brazil) Language Pack</li> <li>vscode-icons</li> </ul> <p>Voc\u00ea pode instalar outras extens\u00f5es e fazer configura\u00e7\u00f5es adicionais, conforme a sua prefer\u00eancia.</p>"},{"location":"axios/","title":"Uso do Axios","text":""},{"location":"axios/#comunicacao-com-apis-usando-axios","title":"Comunica\u00e7\u00e3o com APIs usando Axios","text":"<p>Em um projeto Vue.js, \u00e9 comum a necessidade de comunica\u00e7\u00e3o com APIs para buscar ou enviar dados. Para facilitar essa comunica\u00e7\u00e3o, uma das bibliotecas mais populares \u00e9 o <code>axios</code>. O <code>axios</code> \u00e9 um cliente HTTP baseado em Promises que funciona tanto no navegador quanto no Node.js, permitindo realizar requisi\u00e7\u00f5es HTTP de forma simples e eficiente.</p> <p>Outras alternativas populares para comunica\u00e7\u00e3o com APIs incluem o <code>fetch</code>, que \u00e9 uma API nativa do JavaScript para fazer requisi\u00e7\u00f5es HTTP, e o <code>Vue Resource</code>, que \u00e9 uma biblioteca espec\u00edfica para Vue.js, embora seja menos utilizada atualmente em compara\u00e7\u00e3o com o <code>axios</code>.</p> <p>Nas nossas aulas, focaremos no uso do <code>axios</code> devido \u00e0 sua simplicidade, flexibilidade e ampla ado\u00e7\u00e3o na comunidade JavaScript.</p> <p>Tamb\u00e9m desenvolveremos um projeto pr\u00e1tico consultando uma API p\u00fablica do TMDB (The Movie Database) para buscar informa\u00e7\u00f5es sobre filmes, o que nos permitir\u00e1 aplicar os conceitos aprendidos de forma concreta.</p> <p>Nos nossos projetos, instalaremos o axios usando o <code>npm</code>, como segue:</p> <pre><code>npm install axios\n</code></pre> <p>Outras formas de instala\u00e7\u00e3o podem ser encontradas na documenta\u00e7\u00e3o da biblioteca.</p>"},{"location":"axios/#importando-o-axios-em-um-arquivo-js-ou-vue","title":"Importando o axios em um arquivo .js ou .vue","text":"<p>A forma mais comum para importar o <code>axios</code> \u00e9:</p> <pre><code>import axios from 'axios';\n</code></pre> <p>Com isso, o <code>axios</code> estar\u00e1 dispon\u00edvel para ser utilizado no arquivo em quest\u00e3o.</p> <p>Outro detalhe importante \u00e9 que faremos todas as nossas chamadas usando <code>async/await</code>, j\u00e1 que o <code>axios</code> implementa uma biblioteca baseada em promessas, ou seja, ass\u00edncrona. \u00c9 muito comum achar exemplos usando os m\u00e9todos <code>then</code> e <code>catch</code> do <code>Promise</code>, mas nos nossos exemplos faremos uso, sempre que poss\u00edvel, das chamadas <code>async/await</code></p>"},{"location":"axios/#breve-introducao-aos-verbos-rest","title":"Breve introdu\u00e7\u00e3o aos verbos REST","text":"<p>De forma resumida, os verbos HTTP s\u00e3o os m\u00e9todos de requisi\u00e7\u00e3o utilizados para acessar os endpoints de uma API REST. Abaixo, est\u00e1 uma descri\u00e7\u00e3o simples (n\u00e3o completa) dos principais verbos dispon\u00edveis.</p> M\u00e9todo HTTP Descri\u00e7\u00e3o GET Busca um recurso POST Cria um recurso PUT Atualiza um recurso PATCH Atualiza parcialmente um recurso <p>Com base nisso, podemos considerar um exemplo com a manipula\u00e7\u00e3o (armazenado em mem\u00f3ria, arquivo ou banco de dados) de um recurso chamado <code>categorias</code>. No nosso exemplo, Vamos considerar que ele j\u00e1 est\u00e1 sendo fornecido por um servidor REST.</p> <p>Nesse caso, ter\u00edamos os seguintes endpoints:</p> Endpoint M\u00e9todo Descri\u00e7\u00e3o /categorias GET Retorna a lista de categorias /categorias POST Insere uma nova categoria /categorias/{id} GET Retorna a categoria com id = /categorias/{id} PUT Substitui os dados da categoria com com id = /categorias/{id} PATCH Altera itens dos dados da categoria com id = /categorias/{id} DELETE Remove a categoria com id = <p>Os exemplo a seguir s\u00e3o fict\u00edcios e n\u00e3o consideram um servidor REST real. Em aulas posteriores vamos consultar um servidor REST real.</p>"},{"location":"axios/#o-metodo-get","title":"O m\u00e9todo GET","text":"<p>O m\u00e9todo GET \u00e9 usado para buscar uma representa\u00e7\u00e3o de um ou mais recursos. Em caso de sucesso, retorna uma representa\u00e7\u00e3o em JSON e um c\u00f3digo de resposta HTTP de 200 (OK). Em caso de erro, ele geralmente retorna um 404 (NOT FOUND) ou 400 (BAD REQUEST).</p> <p>Vamos considerar, nesse exemplo, que o servidor REST tenha uma entrada de dados com os seguintes dados:</p> <pre><code>\"categorias\": [\n    {\"id\": 1, \"descricao\": \"Carros\"},\n    {\"id\": 2, \"descricao\": \"Motos\"},\n    {\"id\": 3, \"descricao\": \"Caminh\u00f5es\"},\n]\n</code></pre>"},{"location":"axios/#buscando-todas-as-categorias","title":"Buscando todas as categorias","text":"<p>Caso desej\u00e1ssemos buscar todas as categorias em um servidor, poder\u00edamos ter uma fun\u00e7\u00e3o implementada da seguinte forma:</p> <pre><code>async function buscarTodasAsCategorias() {\n  try {\n    const resposta = await axios.get(\n      'http://ip_e_porta_do_servidor/categorias',\n    );\n    return resposta.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n</code></pre> <p>No exemplo acima, a fun\u00e7\u00e3o <code>buscarTodasAsCategorias</code> busca todas as categorias no servidor e retornaria ao solicitante os dados. No caso do nosso exemplo, seria retornado pela fun\u00e7\u00e3o:</p> <pre><code>[\n  { \"id\": 1, \"descricao\": \"Carros\" },\n  { \"id\": 2, \"descricao\": \"Motos\" },\n  { \"id\": 3, \"descricao\": \"Caminh\u00f5es\" }\n]\n</code></pre> <p>Note que \u00e9 poss\u00edvel enviar op\u00e7\u00f5es no m\u00e9todo GET, como filtros, pagina\u00e7\u00e3o, ordena\u00e7\u00e3o, etc., que podem ou n\u00e3o estar implementados pelo servidor REST. Da\u00ed a import\u00e2ncia de uma boa documenta\u00e7\u00e3o da API disponibilizada.</p>"},{"location":"axios/#buscando-apenas-uma-categoria-pelo-id","title":"Buscando apenas uma categoria pelo <code>id</code>","text":"<p>Caso desej\u00e1ssemos buscar apenas uma categoria pelo seu <code>id</code>, poder\u00edamos ter uma fun\u00e7\u00e3o implementada da seguinte forma:</p> <pre><code>async function buscarCategoria(id) {\n  try {\n    const resposta = await axios.get(\n      `http://ip_e_porta_do_servidor/categorias/${id}`,\n    );\n    return resposta.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n</code></pre> <p>No exemplo acima, a fun\u00e7\u00e3o <code>buscarCategoria</code> faz o filtro pelo <code>id</code> e retorna ao solicitante a categoria solicitada ou um erro com status 404 (n\u00e3o encontrada). No caso do nosso exemplo, se o solicitante chamasse a fun\u00e7\u00e3o com o par\u00e2metro id=2 <code>buscarCategoria(2)</code>, o seguinte resultado seria retornado pela fun\u00e7\u00e3o:</p> <pre><code>{ \"id\": 2, \"descricao\": \"Motos\" }\n</code></pre>"},{"location":"axios/#o-metodo-post","title":"O m\u00e9todo POST","text":"<p>Usamos o POST para adicionar um novo recurso. Nesse caso, adicionaremos uma nova categoria. O exemplo a seguir mostra a implementa\u00e7\u00e3o de uma nova categoria, que recebe um objeto <code>`nova_categoria</code> como par\u00e2metro, que pode ter o seguinte formato:</p> <pre><code>{\n  \"descricao\": \"Nova categoria\"\n}\n</code></pre> <p>Neste caso, objeto <code>nova_categoria</code> deve conter os atributos do recurso <code>categoria</code>, como <code>descricao</code> no nosso exemplo. Outros atributos poderiam ser adicionados, caso o recurso tenha mais atributos.</p> <pre><code>async function adicionarCategoria(nova_categoria) {\n  try {\n    const resposta = await axios.post(\n      'http://ip_e_porta_do_servidor/categorias/',\n      { nova_categoria },\n    );\n    return resposta.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n</code></pre> <p>Caso o objeto <code>nova_categoria</code> n\u00e3o seja v\u00e1lido, o servidor retornar\u00e1 um erro com status 400 (BAD REQUEST). Note tamb\u00e9m que, como o exemplo do m\u00e9todo GET, em caso de sucesso, \u00e9 retornado o atributo <code>data</code> do objeto <code>resposta</code> que cont\u00e9m a representa\u00e7\u00e3o do recurso adicionado. No caso do nosso exemplo, seria retornado pela fun\u00e7\u00e3o:</p> <pre><code>{ \"id\": 4, \"descricao\": \"Nova categoria\" }\n</code></pre>"},{"location":"axios/#os-metodos-put-e-patch","title":"Os m\u00e9todos PUT e PATCH","text":"<p>Os m\u00e9todos PUT e PATCH s\u00e3o similares. Ambos s\u00e3o utilizados para a atualiza\u00e7\u00e3o de um recurso. No exemplo a seguir, vamos atualizar a categoria com id = 2. Contudo, em geral, usamos o m\u00e9todo PUT para substituir todo o objeto, enquanto o m\u00e9todo PATCH \u00e9 utilizado para atualizar apenas alguns atributos. Contudo, o uso dos dois \u00e9 similar e a diferen\u00e7a acontece principalmente na forma que \u00e9 implementado no servidor REST. Em alguns caso, o servidor REST pode retornar um erro com status 400 (BAD REQUEST) caso n\u00e3o sejam informados todos os atributos num m\u00e9todo PUT.</p> <p>No nosso exemplo, modificaremos a descri\u00e7\u00e3o de uma nova categoria. Definiremos um objeto com os valores modificados. No nosso exemplo, a vari\u00e1vel <code>categoria</code> ter\u00e1 o seguinte conte\u00fado:</p> <pre><code>{\n  \"id\": 2,\n  \"descricao\": \"Motocicleta\"\n}\n</code></pre> <p>Neste caso, objeto <code>categoria</code> deve conter os atributos do recurso <code>categoria</code>, como <code>descricao</code>. Como no m\u00e9todo GET, outros atributos poderiam ser adicionados, caso o recurso tenha mais atributos.</p> <pre><code>async function alteraCategoria(categoria) {\n    try {\n        const resposta = await axios.put(`http://ip_e_porta_do_servidor/categorias/${categoria.id}/`, {categoria})\n        return resposta.data\n    } catch(error) {\n        console.log(error)\n    }\n</code></pre> <p>Caso o objeto <code>categoria</code> n\u00e3o seja v\u00e1lido, o servidor retornar\u00e1 um erro com status 400 (BAD REQUEST). Note tamb\u00e9m que, como o exemplo do m\u00e9todo GET, em caso de sucesso, \u00e9 retornado o atributo <code>data</code> do objeto <code>resposta</code> que cont\u00e9m a representa\u00e7\u00e3o do recurso adicionado. No caso do nosso exemplo, seria retornado pela fun\u00e7\u00e3o:</p> <pre><code>{ \"id\": 2, \"descricao\": \"Motocicleta\" }\n</code></pre> <p>O uso do m\u00e9todo PUT seria similar, mas caso o recurso tivesse mais atributos, seria necess\u00e1rio informar todos os valores, sen\u00e3o eles seriam exclu\u00eddos.</p>"},{"location":"axios/#o-metodo-delete","title":"O m\u00e9todo DELETE","text":"<p>Por fim, o m\u00e9todo DELETE \u00e9 utilizado para excluir um recurso. No exemplo a seguir, vamos excluir a categoria com id = 2.</p> <pre><code>async function excluirCategoria(id) {\n  try {\n    const resposta = await axios.delete(\n      `http://ip_e_porta_do_servidor/categorias/${id}`,\n    );\n    return resposta.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n</code></pre> <p>Neste caso, o servidor retornar\u00e1 um erro com status 404 (n\u00e3o encontrada) caso o recurso n\u00e3o exista, ou com status 204 (no content) caso a exclus\u00e3o seja realizada com sucesso.</p>"},{"location":"axios/exemplos-de-uso/","title":"Exemplos de uso","text":""},{"location":"axios/exemplos-de-uso/#importando-o-axios-em-um-arquivo-js-ou-vue","title":"Importando o axios em um arquivo .js ou .vue","text":"<p>A forma mais comum para importar o <code>axios</code> \u00e9:</p> <pre><code>import axios from 'axios';\n</code></pre> <p>Com isso, o <code>axios</code> estar\u00e1 dispon\u00edvel para ser utilizado no arquivo em quest\u00e3o.</p> <p>Outro detalhe importante \u00e9 que faremos todas as nossas chamadas usando <code>async/await</code>, j\u00e1 que o <code>axios</code> implementa uma biblioteca baseada em promessas, ou seja, ass\u00edncrona. \u00c9 muito comum achar exemplos usando os m\u00e9todos <code>then</code> e <code>catch</code> do <code>Promise</code>, mas nos nossos exemplos faremos uso, sempre que poss\u00edvel, das chamadas <code>async/await</code></p>"},{"location":"axios/exemplos-de-uso/#breve-introducao-aos-verbos-rest","title":"Breve introdu\u00e7\u00e3o aos verbos REST","text":"<p>De forma resumida, os verbos HTTP s\u00e3o os m\u00e9todos de requisi\u00e7\u00e3o utilizados para acessar os endpoints de uma API REST. Abaixo, est\u00e1 uma descri\u00e7\u00e3o simples (n\u00e3o completa) dos principais verbos dispon\u00edveis.</p> M\u00e9todo HTTP Descri\u00e7\u00e3o GET Busca um recurso POST Cria um recurso PUT Atualiza um recurso PATCH Atualiza parcialmente um recurso <p>Com base nisso, podemos considerar um exemplo com a manipula\u00e7\u00e3o (armazenado em mem\u00f3ria, arquivo ou banco de dados) de um recurso chamado <code>categorias</code>. No nosso exemplo, Vamos considerar que ele j\u00e1 est\u00e1 sendo fornecido por um servidor REST.</p> <p>Nesse caso, ter\u00edamos os seguintes endpoints:</p> Endpoint M\u00e9todo Descri\u00e7\u00e3o /categorias GET Retorna a lista de categorias /categorias POST Insere uma nova categoria /categorias/{id} GET Retorna a categoria com id = /categorias/{id} PUT Substitui os dados da categoria com com id = /categorias/{id} PATCH Altera itens dos dados da categoria com id = /categorias/{id} DELETE Remove a categoria com id = <p>Os exemplo a seguir s\u00e3o fict\u00edcios e n\u00e3o consideram um servidor REST real. Em aulas posteriores vamos consultar um servidor REST real.</p>"},{"location":"axios/exemplos-de-uso/#o-metodo-get","title":"O m\u00e9todo GET","text":"<p>O m\u00e9todo GET \u00e9 usado para buscar uma representa\u00e7\u00e3o de um ou mais recursos. Em caso de sucesso, retorna uma representa\u00e7\u00e3o em JSON e um c\u00f3digo de resposta HTTP de 200 (OK). Em caso de erro, ele geralmente retorna um 404 (NOT FOUND) ou 400 (BAD REQUEST).</p> <p>Vamos considerar, nesse exemplo, que o servidor REST tenha uma entrada de dados com os seguintes dados:</p> <pre><code>\"categorias\": [\n    {\"id\": 1, \"descricao\": \"Carros\"},\n    {\"id\": 2, \"descricao\": \"Motos\"},\n    {\"id\": 3, \"descricao\": \"Caminh\u00f5es\"},\n]\n</code></pre>"},{"location":"axios/exemplos-de-uso/#buscando-todas-as-categorias","title":"Buscando todas as categorias","text":"<p>Caso desej\u00e1ssemos buscar todas as categorias em um servidor, poder\u00edamos ter uma fun\u00e7\u00e3o implementada da seguinte forma:</p> <pre><code>async function buscarTodasAsCategorias() {\n  try {\n    const resposta = await axios.get(\n      'http://ip_e_porta_do_servidor/categorias',\n    );\n    return resposta.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n</code></pre> <p>No exemplo acima, a fun\u00e7\u00e3o <code>buscarTodasAsCategorias</code> busca todas as categorias no servidor e retornaria ao solicitante os dados. No caso do nosso exemplo, seria retornado pela fun\u00e7\u00e3o:</p> <pre><code>[\n  { \"id\": 1, \"descricao\": \"Carros\" },\n  { \"id\": 2, \"descricao\": \"Motos\" },\n  { \"id\": 3, \"descricao\": \"Caminh\u00f5es\" }\n]\n</code></pre> <p>Note que \u00e9 poss\u00edvel enviar op\u00e7\u00f5es no m\u00e9todo GET, como filtros, pagina\u00e7\u00e3o, ordena\u00e7\u00e3o, etc., que podem ou n\u00e3o estar implementados pelo servidor REST. Da\u00ed a import\u00e2ncia de uma boa documenta\u00e7\u00e3o da API disponibilizada.</p>"},{"location":"axios/exemplos-de-uso/#buscando-apenas-uma-categoria-pelo-id","title":"Buscando apenas uma categoria pelo <code>id</code>","text":"<p>Caso desej\u00e1ssemos buscar apenas uma categoria pelo seu <code>id</code>, poder\u00edamos ter uma fun\u00e7\u00e3o implementada da seguinte forma:</p> <pre><code>async function buscarCategoria(id) {\n  try {\n    const resposta = await axios.get(\n      `http://ip_e_porta_do_servidor/categorias/${id}`,\n    );\n    return resposta.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n</code></pre> <p>No exemplo acima, a fun\u00e7\u00e3o <code>buscarCategoria</code> faz o filtro pelo <code>id</code> e retorna ao solicitante a categoria solicitada ou um erro com status 404 (n\u00e3o encontrada). No caso do nosso exemplo, se o solicitante chamasse a fun\u00e7\u00e3o com o par\u00e2metro id=2 <code>buscarCategoria(2)</code>, o seguinte resultado seria retornado pela fun\u00e7\u00e3o:</p> <pre><code>{ \"id\": 2, \"descricao\": \"Motos\" }\n</code></pre>"},{"location":"axios/exemplos-de-uso/#o-metodo-post","title":"O m\u00e9todo POST","text":"<p>Usamos o POST para adicionar um novo recurso. Nesse caso, adicionaremos uma nova categoria. O exemplo a seguir mostra a implementa\u00e7\u00e3o de uma nova categoria, que recebe um objeto <code>`nova_categoria</code> como par\u00e2metro, que pode ter o seguinte formato:</p> <pre><code>{\n  \"descricao\": \"Nova categoria\"\n}\n</code></pre> <p>Neste caso, objeto <code>nova_categoria</code> deve conter os atributos do recurso <code>categoria</code>, como <code>descricao</code> no nosso exemplo. Outros atributos poderiam ser adicionados, caso o recurso tenha mais atributos.</p> <pre><code>async function adicionarCategoria(nova_categoria) {\n  try {\n    const resposta = await axios.post(\n      'http://ip_e_porta_do_servidor/categorias/',\n      { nova_categoria },\n    );\n    return resposta.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n</code></pre> <p>Caso o objeto <code>nova_categoria</code> n\u00e3o seja v\u00e1lido, o servidor retornar\u00e1 um erro com status 400 (BAD REQUEST). Note tamb\u00e9m que, como o exemplo do m\u00e9todo GET, em caso de sucesso, \u00e9 retornado o atributo <code>data</code> do objeto <code>resposta</code> que cont\u00e9m a representa\u00e7\u00e3o do recurso adicionado. No caso do nosso exemplo, seria retornado pela fun\u00e7\u00e3o:</p> <pre><code>{ \"id\": 4, \"descricao\": \"Nova categoria\" }\n</code></pre>"},{"location":"axios/exemplos-de-uso/#os-metodos-put-e-patch","title":"Os m\u00e9todos PUT e PATCH","text":"<p>Os m\u00e9todos PUT e PATCH s\u00e3o similares. Ambos s\u00e3o utilizados para a atualiza\u00e7\u00e3o de um recurso. No exemplo a seguir, vamos atualizar a categoria com id = 2. Contudo, em geral, usamos o m\u00e9todo PUT para substituir todo o objeto, enquanto o m\u00e9todo PATCH \u00e9 utilizado para atualizar apenas alguns atributos. Contudo, o uso dos dois \u00e9 similar e a diferen\u00e7a acontece principalmente na forma que \u00e9 implementado no servidor REST. Em alguns caso, o servidor REST pode retornar um erro com status 400 (BAD REQUEST) caso n\u00e3o sejam informados todos os atributos num m\u00e9todo PUT.</p> <p>No nosso exemplo, modificaremos a descri\u00e7\u00e3o de uma nova categoria. Definiremos um objeto com os valores modificados. No nosso exemplo, a vari\u00e1vel <code>categoria</code> ter\u00e1 o seguinte conte\u00fado:</p> <pre><code>{\n  \"id\": 2,\n  \"descricao\": \"Motocicleta\"\n}\n</code></pre> <p>Neste caso, objeto <code>categoria</code> deve conter os atributos do recurso <code>categoria</code>, como <code>descricao</code>. Como no m\u00e9todo GET, outros atributos poderiam ser adicionados, caso o recurso tenha mais atributos.</p> <pre><code>async function alteraCategoria(categoria) {\n    try {\n        const resposta = await axios.put(`http://ip_e_porta_do_servidor/categorias/${categoria.id}/`, {categoria})\n        return resposta.data\n    } catch(error) {\n        console.log(error)\n    }\n</code></pre> <p>Caso o objeto <code>categoria</code> n\u00e3o seja v\u00e1lido, o servidor retornar\u00e1 um erro com status 400 (BAD REQUEST). Note tamb\u00e9m que, como o exemplo do m\u00e9todo GET, em caso de sucesso, \u00e9 retornado o atributo <code>data</code> do objeto <code>resposta</code> que cont\u00e9m a representa\u00e7\u00e3o do recurso adicionado. No caso do nosso exemplo, seria retornado pela fun\u00e7\u00e3o:</p> <pre><code>{ \"id\": 2, \"descricao\": \"Motocicleta\" }\n</code></pre> <p>O uso do m\u00e9todo PUT seria similar, mas caso o recurso tivesse mais atributos, seria necess\u00e1rio informar todos os valores, sen\u00e3o eles seriam exclu\u00eddos.</p>"},{"location":"axios/exemplos-de-uso/#o-metodo-delete","title":"O m\u00e9todo DELETE","text":"<p>Por fim, o m\u00e9todo DELETE \u00e9 utilizado para excluir um recurso. No exemplo a seguir, vamos excluir a categoria com id = 2.</p> <pre><code>async function excluirCategoria(id) {\n  try {\n    const resposta = await axios.delete(\n      `http://ip_e_porta_do_servidor/categorias/${id}`,\n    );\n    return resposta.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n</code></pre> <p>Neste caso, o servidor retornar\u00e1 um erro com status 404 (n\u00e3o encontrada) caso o recurso n\u00e3o exista, ou com status 204 (no content) caso a exclus\u00e3o seja realizada com sucesso.</p>"},{"location":"componentes/","title":"Componentes","text":""},{"location":"componentes/#conceitos","title":"Conceitos","text":"<p>Os componentes s\u00e3o inst\u00e2ncias reutiliz\u00e1veis de VueJS que podem ser criadas e utilizadas em qualquer parte da aplica\u00e7\u00e3o. Eles s\u00e3o compostos por um template, que define a estrutura do componente, e por uma inst\u00e2ncia Vue, que define o comportamento do componente. Os componentes s\u00e3o uma das principais caracter\u00edsticas do VueJS e s\u00e3o muito \u00fateis para organizar e reutilizar o c\u00f3digo de uma aplica\u00e7\u00e3o. Ainda, com o uso de componentes, \u00e9 poss\u00edvel dividir a interface de usu\u00e1rio em partes menores e independentes, o que facilita a manuten\u00e7\u00e3o e a evolu\u00e7\u00e3o da aplica\u00e7\u00e3o.</p> <p>No VueJS, em geral, usamos o conceito de SFC (Single File Component) para criar componentes. Um SFC \u00e9 um arquivo que cont\u00e9m o template, a l\u00f3gica e o estilo de um componente em um \u00fanico lugar, como j\u00e1 temos visto em aulas anteriores.</p> <p>Durante esta aula, vamos estruturar o projeto da livraria com o uso de componentes, criando componentes para as diversas partes da aplica\u00e7\u00e3o, como o cabe\u00e7alho, o rodap\u00e9 e a lista de livros.</p> <p>Alguns conceitos de reutiliza\u00e7\u00e3o de componentes far\u00e3o mais sentido quando estudarmos o conceitos de rotas, com o Vue Router. Isso porque a reutiliza\u00e7\u00e3o de componentes \u00e9 muito \u00fatil quando se trabalha com rotas din\u00e2micas e a cria\u00e7\u00e3o de p\u00e1ginas com elementos comuns.</p>"},{"location":"componentes/#criacao-de-um-componente-simples","title":"Cria\u00e7\u00e3o de um componente simples","text":"<p>Para criar um componente, basta criar um arquivo com a extens\u00e3o <code>.vue</code> e definir o template, a l\u00f3gica e o estilo do componente. O VueJS j\u00e1 vem com uma estrutura b\u00e1sica de um SFC, que pode ser utilizada como base para criar novos componentes. De certa forma, o conceito b\u00e1sico de um componente j\u00e1 foi amplamente utilizado no arquivo <code>App.vue</code>, que \u00e9 o ponto de entrada da aplica\u00e7\u00e3o. O arquivo <code>App.vue</code> \u00e9 um SFC que cont\u00e9m o template, a l\u00f3gica e o estilo da aplica\u00e7\u00e3o. A partir dele, podemos criar novos componentes e utiliz\u00e1-los na aplica\u00e7\u00e3o.</p>"},{"location":"componentes/#componente-de-rodape","title":"Componente de rodap\u00e9","text":"<p>Vamos primeiro criar um component para o rodap\u00e9 da aplica\u00e7\u00e3o. Da forma que est\u00e1, o rodap\u00e9 da aplica\u00e7\u00e3o \u00e9 apenas um texto fixo. Vamos criar um componente para o rodap\u00e9 e utiliz\u00e1-lo na aplica\u00e7\u00e3o. Para isso, vamos criar um arquivo chamado <code>FooterComponent.vue</code> na pasta <code>src/components</code>. O conte\u00fado do arquivo <code>FooterComponent.vue</code> ser\u00e1 o seguinte:</p> ./src/components/FooterComponent.vue<pre><code>&lt;template&gt;\n  &lt;footer&gt;\n    &lt;nav&gt;\n      &lt;section class=\"upper-footer\"&gt;\n        &lt;div&gt;\n          &lt;p class=\"footer-title\"&gt;\n            &lt;a href=\"#\"&gt; IFbooks &lt;/a&gt;\n          &lt;/p&gt;\n          &lt;ul&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-facebook\" /&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-instagram\" /&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-twitter\" /&gt;&lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/div&gt;\n        &lt;div&gt;\n          &lt;p class=\"contact-text\"&gt;Contato&lt;/p&gt;\n          &lt;p&gt;&lt;span class=\"mdi mdi-phone\" /&gt; +55 47 99999-9999&lt;/p&gt;\n          &lt;p&gt;&lt;span class=\"mdi mdi-clock\" /&gt; 8h \u00e0s 23h - Seg a Sex&lt;/p&gt;\n          &lt;p&gt;&lt;span class=\"mdi mdi-email\" /&gt; contato@ifbooks.com.br&lt;/p&gt;\n          &lt;div class=\"payment-methods\"&gt;\n            &lt;span class=\"mdi mdi-visa\" /&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/section&gt;\n      &lt;section class=\"lower-footer\"&gt;\n        &lt;p&gt;&amp;copy; Alguns direitos reservados. IFBooks. 2025&lt;/p&gt;\n      &lt;/section&gt;\n    &lt;/nav&gt;\n  &lt;/footer&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nfooter {\n  background-color: #27ae60;\n  padding: 2vh 8vw;\n  color: #fff;\n\n  .upper-footer {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-bottom: 100px;\n    border-bottom: 2px solid #fff;\n\n    &amp; div {\n      display: flex;\n      flex-direction: column;\n      gap: 10px;\n\n      &amp; .footer-title {\n        font-size: 1.2rem;\n        font-weight: 700;\n\n        &amp; a {\n          text-decoration: none;\n          color: #fff;\n        }\n      }\n\n      &amp; .contact-text {\n        font-size: 1.1rem;\n        font-weight: 700;\n      }\n    }\n  }\n\n  .lower-footer {\n    display: flex;\n    justify-content: center;\n    padding-top: 20px;\n    font-size: 0.8rem;\n  }\n\n  ul {\n    display: flex;\n    padding: 0;\n    gap: 20px;\n\n    li {\n      list-style: none;\n      font-size: 1.2rem;\n      color: #fff;\n    }\n  }\n}\n&lt;/style&gt;\n</code></pre> <p>Note que esses dois blocos de c\u00f3digo foram copiados do arquivo <code>App.vue</code>, que \u00e9 o ponto de entrada da aplica\u00e7\u00e3o.</p> <p>Agora, vamos importar o componente <code>FooterComponent</code> no arquivo <code>App.vue</code> e utiliz\u00e1-lo no template. Para isso, vamos adicionar o seguinte c\u00f3digo ao arquivo <code>App.vue</code>:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue';\n\nimport FooterComponent from './components/FooterComponent.vue';\n...\n&lt;/script&gt;\n</code></pre> <p>Tamb\u00e9m ser\u00e1 necess\u00e1rio editar o bloco de template do arquivo <code>App.vue</code> para incluir o componente <code>FooterComponent</code>. Para isso, vamos substituir o c\u00f3digo do rodap\u00e9 pelo seguinte:</p> ./src/App.vue<pre><code>  &lt;/main&gt;\n  &lt;footer-component /&gt;\n&lt;/template&gt;\n</code></pre> <p>A vers\u00e3o completa do arquivo <code>App.vue</code> est\u00e1 no bloco abaixo.</p>  Vers\u00e3o completa <p>Note que, al\u00e9m das linhas destacadas, foi retirado o c\u00f3digo da tag <code>&lt;footer&gt;</code> do arquivo <code>App.vue</code>. Tamb\u00e9m, foi removida a parte correspondente no bloco de <code>&lt;style&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from './components/FooterComponent.vue';\n\nconst showCart = ref(false)\nconst cart = ref({\n    items: [],\n    total: 0,\n})\n\nconst books = [\n    {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n    },\n    {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n    },\n    {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n    },\n    {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n    },\n    {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n    },\n    {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n    },\n]\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;h1&gt;\n        &lt;a href=\"#\"&gt;\n          IFbooks\n          &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n        &lt;/a&gt;\n      &lt;/h1&gt;\n      &lt;div class=\"search-wrapper\"&gt;\n        &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n      &lt;/div&gt;\n      &lt;ul&gt;\n        &lt;li&gt;Termos&lt;/li&gt;\n        &lt;li&gt;Equipe&lt;/li&gt;\n        &lt;li&gt;Envio&lt;/li&gt;\n        &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;ul class=\"icons\"&gt;\n        &lt;li @click=\"showCart = !showCart\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n  &lt;main v-if=\"showCart\"&gt;\n    &lt;section class=\"cart\"&gt;\n      &lt;h2&gt;Carrinho&lt;/h2&gt;\n      &lt;table&gt;\n        &lt;thead&gt;\n          &lt;tr&gt;\n            &lt;th&gt;T\u00edtulo&lt;/th&gt;\n            &lt;th&gt;Quantidade&lt;/th&gt;\n            &lt;th&gt;Subtotal&lt;/th&gt;\n          &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n          &lt;tr v-for=\"book in cart.items\" :key=\"book.id\"&gt;\n            &lt;td class=\"cart-item\"&gt;\n              &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n              &lt;div class=\"cart-item-info\"&gt;\n                &lt;p class=\"cart-item-title\"&gt;{{ book.title }}&lt;/p&gt;\n                &lt;p class=\"cart-item-author\"&gt;{{ book.author }}&lt;/p&gt;\n                &lt;p class=\"cart-item-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n              &lt;div class=\"cart-item-quantity\"&gt;\n                &lt;button class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-minus\" /&gt;\n                &lt;/button&gt;\n                {{ book.quantity }}\n                &lt;button class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-plus\" /&gt;\n                &lt;/button&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td class=\"cart-item-subtotal\"&gt;R$ {{ book.price * book.quantity }}&lt;/td&gt;\n          &lt;/tr&gt;\n        &lt;/tbody&gt;\n      &lt;/table&gt;\n      &lt;button @click=\"showCart = false\" class=\"outlined\"&gt;Voltar para loja&lt;/button&gt;\n      &lt;div class=\"cart-summary\"&gt;\n        &lt;div class=\"cupom\"&gt;\n          &lt;input type=\"text\" placeholder=\"C\u00f3digo do cupom\" /&gt;\n          &lt;button&gt;Inserir cupom&lt;/button&gt;\n        &lt;/div&gt;\n        &lt;div class=\"summary\"&gt;\n          &lt;h2&gt;Total da Compra&lt;/h2&gt;\n          &lt;div class=\"summary-items\"&gt;\n            &lt;span&gt;Produtos&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt; &lt;span&gt;Frete&lt;/span&gt;\n            &lt;span&gt; Gr\u00e1tis&lt;/span&gt; &lt;span&gt;Total&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n          &lt;/div&gt;\n          &lt;button&gt;Ir para pagamento&lt;/button&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;main v-else&gt;\n    &lt;section class=\"hero\"&gt;\n      &lt;div class=\"hero-content\"&gt;\n        &lt;h3 class=\"outlined\"&gt;Livro destaque&lt;/h3&gt;\n        &lt;h2&gt;Noc Ognia&lt;/h2&gt;\n        &lt;p&gt;\n          Noc ognia \u00e9 um romance de Erich-Emmanuel Schmitt, que narra a hist\u00f3ria de um homem que\n          vive em um mundo onde as pessoas n\u00e3o podem mais sonhar. O livro \u00e9 uma reflex\u00e3o sobre a\n          import\u00e2ncia dos sonhos e da imagina\u00e7\u00e3o na vida humana. Erich-Emmanuel Schmitt \u00e9 um autor\n          franc\u00eas conhecido por suas obras que exploram temas filos\u00f3ficos e existenciais. Ele \u00e9 um\n          dos autores mais traduzidos da Fran\u00e7a e suas obras t\u00eam sido amplamente elogiadas pela\n          cr\u00edtica.\n        &lt;/p&gt;\n        &lt;button&gt;Acessar p\u00e1gina do livro&lt;/button&gt;\n      &lt;/div&gt;\n      &lt;div class=\"hero-image\"&gt;\n        &lt;img src=\"/hero.png\" alt=\"Hero Image\" /&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n    &lt;section class=\"featured\"&gt;\n      &lt;div&gt;\n        &lt;span class=\"mdi mdi-truck\"&gt;&lt;/span&gt;\n        &lt;h2&gt;Frete gr\u00e1tis para SC&lt;/h2&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;span class=\"mdi mdi-star\"&gt;&lt;/span&gt;\n        &lt;h2&gt;Livros recomendados&lt;/h2&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;span class=\"mdi mdi-book-open-page-variant\"&gt;&lt;/span&gt;\n        &lt;h2&gt;Mais vendidos&lt;/h2&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n    &lt;section class=\"books\"&gt;\n      &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n        &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n        &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n        &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n        &lt;span class=\"price-and-like\"&gt;\n          &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n          &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n        &lt;/span&gt;\n        &lt;button&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n      &lt;/article&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;footer-component /&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h1 {\n    font-size: 1.3rem;\n    color: #000;\n\n    &amp; a {\n      text-decoration: none;\n      color: #000;\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .logo-title {\n      border-left: 1px solid #27ae6099;\n      font-size: 0.8rem;\n      margin-left: 10px;\n      padding-left: 10px;\n      color: #27ae6099;\n      width: 100px;\n      line-height: 1rem;\n    }\n  }\n\n  &amp; input {\n    width: 400px;\n    height: 40px;\n    border-radius: 5px;\n    font-size: 1rem;\n    border: 0;\n    background-color: #f1f1f1;\n    padding: 5px;\n  }\n\n  &amp; ul {\n    display: flex;\n  }\n\n  &amp; ul li {\n    list-style: none;\n    margin: 0 10px;\n    font-size: 1rem;\n  }\n\n  &amp; .icons li {\n    color: #27ae60;\n    font-size: 1.3rem;\n  }\n\n  &amp; .search-wrapper {\n    position: relative;\n  }\n\n  &amp; .search-wrapper::before {\n    content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n    font-family: 'Material Design Icons';\n    font-size: 1.2rem;\n    position: absolute;\n    right: 0.75rem;\n    top: 50%;\n    transform: translateY(-50%);\n    pointer-events: none;\n  }\n\n  &amp; .search {\n    padding-right: 2rem;\n  }\n}\n\n.hero {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5vh 9vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    color: #382c2c;\n    font-size: 3rem;\n    font-weight: 700;\n  }\n\n  &amp; .hero-content {\n    width: 50%;\n    padding-right: 20px;\n    font-weight: 400;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 20px;\n\n    &amp; h3.outlined {\n      background-color: transparent;\n      color: #27ae60;\n      border: 2px solid #27ae60;\n      padding: 15px 20px;\n      border-radius: 5px;\n      font-size: 1rem;\n    }\n\n    &amp; button {\n      margin-top: 20px;\n    }\n\n    p {\n      width: 70%;\n    }\n  }\n\n  &amp; .hero-image {\n    width: 50%;\n    text-align: right;\n    padding-right: 4vw;\n\n    &amp; img {\n      max-width: 100%;\n      height: auto;\n    }\n  }\n}\n\n.featured {\n  display: flex;\n  padding: 3vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; div {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    justify-content: center;\n    gap: 10px;\n\n    &amp; span {\n      font-size: 2rem;\n    }\n\n    &amp; h2 {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n  }\n\n  &amp; article:nth-child(2) {\n    border-left: 1px solid #27ae6099;\n    border-right: 1px solid #27ae6099;\n  }\n}\n\n.books {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  padding: 5vh 8vw;\n\n  &amp; .book {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: calc(100% / 4 - 42px);\n    margin: 20px;\n\n    &amp; h2 {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n\n    &amp; .book-author {\n      font-size: 1rem;\n    }\n\n    &amp; .book-price {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; .price-and-like {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      &amp; .mdi-heart-outline {\n        font-size: 1.3rem;\n        color: #27ae60;\n      }\n    }\n  }\n}\n\n.cart {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 5vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    font-size: 2rem;\n    font-weight: 700;\n    color: #27ae60;\n  }\n\n  &amp; table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 40px 0;\n\n    &amp; th,\n    td {\n      padding: 10px;\n      text-align: left;\n    }\n\n    &amp; th {\n      border-bottom: 2px solid #27ae6099;\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; td {\n      border-bottom: 1px solid rgb(128, 128, 128);\n      font-size: 1rem;\n    }\n\n    &amp; .cart-item-quantity {\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .cart-item-subtotal {\n      font-size: 1.1rem;\n      font-weight: 700;\n    }\n\n    &amp; .cart-item {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      &amp; img {\n        width: 80px;\n        height: auto;\n      }\n\n      &amp; .cart-item-info {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n\n        &amp; .cart-item-title {\n          font-size: 1.2rem;\n          font-weight: 700;\n        }\n        &amp; .cart-item-author {\n          font-size: 1rem;\n        }\n        &amp; .cart-item-price {\n          font-size: 1.1rem;\n          font-weight: 600;\n        }\n      }\n    }\n  }\n\n  &amp; .cart-summary {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n\n    &amp; .cupom {\n      display: flex;\n      align-items: center;\n      margin-top: 80px;\n      gap: 10px;\n\n      &amp; input {\n        width: 350px;\n        height: 50px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 2px solid rgb(128, 128, 128);\n        padding: 5px;\n      }\n    }\n\n    &amp; .summary {\n      border: 1px solid rgb(128, 128, 128);\n      padding: 1vw;\n\n      &amp; h2 {\n        font-size: 1.2rem;\n        font-weight: 700;\n        color: black;\n      }\n\n      &amp; .summary-items {\n        display: grid;\n        grid-template-columns: 3fr 1fr;\n\n        &amp; span {\n          padding: 10px 0;\n          border-bottom: 1px solid rgb(128, 128, 128);\n        }\n      }\n\n      &amp; button {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n\nbutton {\n  background-color: #27ae60;\n  color: #fff;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 5px;\n  font-size: 1rem;\n  cursor: pointer;\n  gap: 20px;\n  display: flex;\n  justify-content: center;\n\n  &amp;.outlined {\n    background-color: transparent;\n    color: #27ae60;\n    border: 2px solid #27ae60;\n  }\n\n  &amp;.plain {\n    background-color: transparent;\n    color: black;\n    border: none;\n    cursor: pointer;\n  }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"componentes/#replicando-em-outros-componentes","title":"Replicando em outros componentes","text":"<p>Com as mesmas caracter\u00edsticas do componente do rodap\u00e9, temos duas outras partes da aplica\u00e7\u00e3o que podem ser transformadas em componentes: o hero banner e a se\u00e7\u00e3o de destaque. Vamos criar esses dois componentes e replicar a estrutura do componente do rodap\u00e9.</p>"},{"location":"componentes/#componente-do-hero-banner","title":"Componente do hero banner","text":"<p>Primeiro, vamos criar o componente do hero banner. Para isso, crie o arquivo <code>HeroBanner.vue</code> na pasta <code>src/components</code> e adicione o seguinte c\u00f3digo:</p> ./src/components/HeroBanner.vue<pre><code>&lt;template&gt;\n  &lt;section class=\"hero\"&gt;\n    &lt;div class=\"hero-content\"&gt;\n      &lt;h3 class=\"outlined\"&gt;Livro destaque&lt;/h3&gt;\n      &lt;h2&gt;Noc Ognia&lt;/h2&gt;\n      &lt;p&gt;\n        Noc ognia \u00e9 um romance de Erich-Emmanuel Schmitt, que narra a hist\u00f3ria\n        de um homem que vive em um mundo onde as pessoas n\u00e3o podem mais sonhar.\n        O livro \u00e9 uma reflex\u00e3o sobre a import\u00e2ncia dos sonhos e da imagina\u00e7\u00e3o na\n        vida humana. Erich-Emmanuel Schmitt \u00e9 um autor franc\u00eas conhecido por\n        suas obras que exploram temas filos\u00f3ficos e existenciais. Ele \u00e9 um dos\n        autores mais traduzidos da Fran\u00e7a e suas obras t\u00eam sido amplamente\n        elogiadas pela cr\u00edtica.\n      &lt;/p&gt;\n      &lt;button&gt;Acessar p\u00e1gina do livro&lt;/button&gt;\n    &lt;/div&gt;\n    &lt;div class=\"hero-image\"&gt;\n      &lt;img src=\"/hero.png\" alt=\"Hero Image\" /&gt;\n    &lt;/div&gt;\n  &lt;/section&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.hero {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5vh 9vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    color: #382c2c;\n    font-size: 3rem;\n    font-weight: 700;\n  }\n\n  &amp; .hero-content {\n    width: 50%;\n    padding-right: 20px;\n    font-weight: 400;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 20px;\n\n    &amp; h3.outlined {\n      background-color: transparent;\n      color: #27ae60;\n      border: 2px solid #27ae60;\n      padding: 15px 20px;\n      border-radius: 5px;\n      font-size: 1rem;\n    }\n\n    &amp; button {\n      margin-top: 20px;\n    }\n\n    p {\n      width: 70%;\n    }\n  }\n\n  &amp; .hero-image {\n    width: 50%;\n    text-align: right;\n    padding-right: 4vw;\n\n    &amp; img {\n      max-width: 100%;\n      height: auto;\n    }\n  }\n}\n&lt;/style&gt;\n</code></pre> <p>Note que tamb\u00e9m esse c\u00f3digo foi copiado do arquivo <code>App.vue</code>.</p>"},{"location":"componentes/#componente-de-destaque","title":"Componente de destaque","text":"<p>O mesmo, agora, faremos com a se\u00e7\u00e3o de destaque. Para isso, crie o arquivo <code>FeaturedComponent.vue</code> na pasta <code>src/components</code> e adicione o seguinte c\u00f3digo:</p> ./src/components/FeaturedComponent.vue<pre><code>&lt;template&gt;\n  &lt;section class=\"featured\"&gt;\n    &lt;div&gt;\n      &lt;span class=\"mdi mdi-truck\"&gt;&lt;/span&gt;\n      &lt;h2&gt;Frete gr\u00e1tis para SC&lt;/h2&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n      &lt;span class=\"mdi mdi-star\"&gt;&lt;/span&gt;\n      &lt;h2&gt;Livros recomendados&lt;/h2&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n      &lt;span class=\"mdi mdi-book-open-page-variant\"&gt;&lt;/span&gt;\n      &lt;h2&gt;Mais vendidos&lt;/h2&gt;\n    &lt;/div&gt;\n  &lt;/section&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.featured {\n  display: flex;\n  padding: 3vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; div {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    justify-content: center;\n    gap: 10px;\n\n    &amp; span {\n      font-size: 2rem;\n    }\n\n    &amp; h2 {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n  }\n\n  &amp; article:nth-child(2) {\n    border-left: 1px solid #27ae6099;\n    border-right: 1px solid #27ae6099;\n  }\n}\n&lt;/style&gt;\n</code></pre> <p>Novamente, o c\u00f3digo acima foi copiado do arquivo <code>App.vue</code>.</p>"},{"location":"componentes/#aplicacao-dos-componentes","title":"Aplica\u00e7\u00e3o dos componentes","text":"<p>Agora, vamos importar os componentes no arquivo <code>App.vue</code> e us\u00e1-los. Para isso, abra o arquivo <code>src/App.vue</code> e adicione o seguinte c\u00f3digo:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport HeroBanner from '@/components/HeroBanner.vue'\nimport FeaturedComponent from '@/components/FeaturedComponent.vue'\n...\n&lt;/script&gt;\n</code></pre> <p>Tamb\u00e9m, ser\u00e1 preciso alterar o bloco de <code>&lt;template&gt;</code> para substituir o c\u00f3digo do hero banner e da se\u00e7\u00e3o de destaque pelos componentes que acabamos de criar. O c\u00f3digo do arquivo <code>src/App.vue</code> ficar\u00e1 assim:</p> ./src/App.vue<pre><code>  &lt;/main&gt;\n  &lt;main v-else&gt;\n    &lt;hero-banner /&gt;\n    &lt;featured-component /&gt;\n    &lt;section class=\"books\"&gt;\n</code></pre> <p>A vers\u00e3o completa do arquivo <code>App.vue</code> est\u00e1 no bloco abaixo.</p>  Vers\u00e3o completa <p>Note que, al\u00e9m das linhas destacadas, foi retirado o c\u00f3digo das tags <code>&lt;section&gt;</code> relativas ao hero e featured do arquivo <code>App.vue</code>. Tamb\u00e9m, foi removida a parte correspondente no bloco de <code>&lt;style&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport HeroBanner from '@/components/HeroBanner.vue'\nimport FeaturedComponent from '@/components/FeaturedComponent.vue'\n\nconst showCart = ref(false)\nconst cart = ref({\n    items: [],\n    total: 0,\n})\n\nconst books = [\n    {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n    },\n    {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n    },\n    {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n    },\n    {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n    },\n    {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n    },\n    {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n    },\n]\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;h1&gt;\n        &lt;a href=\"#\"&gt;\n          IFbooks\n          &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n        &lt;/a&gt;\n      &lt;/h1&gt;\n      &lt;div class=\"search-wrapper\"&gt;\n        &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n      &lt;/div&gt;\n      &lt;ul&gt;\n        &lt;li&gt;Termos&lt;/li&gt;\n        &lt;li&gt;Equipe&lt;/li&gt;\n        &lt;li&gt;Envio&lt;/li&gt;\n        &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;ul class=\"icons\"&gt;\n        &lt;li @click=\"showCart = !showCart\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n  &lt;main v-if=\"showCart\"&gt;\n    &lt;section class=\"cart\"&gt;\n      &lt;h2&gt;Carrinho&lt;/h2&gt;\n      &lt;table&gt;\n        &lt;thead&gt;\n          &lt;tr&gt;\n            &lt;th&gt;T\u00edtulo&lt;/th&gt;\n            &lt;th&gt;Quantidade&lt;/th&gt;\n            &lt;th&gt;Subtotal&lt;/th&gt;\n          &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n          &lt;tr v-for=\"book in cart.items\" :key=\"book.id\"&gt;\n            &lt;td class=\"cart-item\"&gt;\n              &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n              &lt;div class=\"cart-item-info\"&gt;\n                &lt;p class=\"cart-item-title\"&gt;{{ book.title }}&lt;/p&gt;\n                &lt;p class=\"cart-item-author\"&gt;{{ book.author }}&lt;/p&gt;\n                &lt;p class=\"cart-item-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n              &lt;div class=\"cart-item-quantity\"&gt;\n                &lt;button class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-minus\" /&gt;\n                &lt;/button&gt;\n                {{ book.quantity }}\n                &lt;button class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-plus\" /&gt;\n                &lt;/button&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td class=\"cart-item-subtotal\"&gt;R$ {{ book.price * book.quantity }}&lt;/td&gt;\n          &lt;/tr&gt;\n        &lt;/tbody&gt;\n      &lt;/table&gt;\n      &lt;button @click=\"showCart = false\" class=\"outlined\"&gt;Voltar para loja&lt;/button&gt;\n      &lt;div class=\"cart-summary\"&gt;\n        &lt;div class=\"cupom\"&gt;\n          &lt;input type=\"text\" placeholder=\"C\u00f3digo do cupom\" /&gt;\n          &lt;button&gt;Inserir cupom&lt;/button&gt;\n        &lt;/div&gt;\n        &lt;div class=\"summary\"&gt;\n          &lt;h2&gt;Total da Compra&lt;/h2&gt;\n          &lt;div class=\"summary-items\"&gt;\n            &lt;span&gt;Produtos&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt; &lt;span&gt;Frete&lt;/span&gt;\n            &lt;span&gt; Gr\u00e1tis&lt;/span&gt; &lt;span&gt;Total&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n          &lt;/div&gt;\n          &lt;button&gt;Ir para pagamento&lt;/button&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;main v-else&gt;\n    &lt;hero-banner /&gt;\n    &lt;featured-component /&gt;\n    &lt;section class=\"books\"&gt;\n      &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n        &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n        &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n        &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n        &lt;span class=\"price-and-like\"&gt;\n          &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n          &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n        &lt;/span&gt;\n        &lt;button&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n      &lt;/article&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;footer-component /&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h1 {\n    font-size: 1.3rem;\n    color: #000;\n\n    &amp; a {\n      text-decoration: none;\n      color: #000;\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .logo-title {\n      border-left: 1px solid #27ae6099;\n      font-size: 0.8rem;\n      margin-left: 10px;\n      padding-left: 10px;\n      color: #27ae6099;\n      width: 100px;\n      line-height: 1rem;\n    }\n  }\n\n  &amp; input {\n    width: 400px;\n    height: 40px;\n    border-radius: 5px;\n    font-size: 1rem;\n    border: 0;\n    background-color: #f1f1f1;\n    padding: 5px;\n  }\n\n  &amp; ul {\n    display: flex;\n  }\n\n  &amp; ul li {\n    list-style: none;\n    margin: 0 10px;\n    font-size: 1rem;\n  }\n\n  &amp; .icons li {\n    color: #27ae60;\n    font-size: 1.3rem;\n  }\n\n  &amp; .search-wrapper {\n    position: relative;\n  }\n\n  &amp; .search-wrapper::before {\n    content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n    font-family: 'Material Design Icons';\n    font-size: 1.2rem;\n    position: absolute;\n    right: 0.75rem;\n    top: 50%;\n    transform: translateY(-50%);\n    pointer-events: none;\n  }\n\n  &amp; .search {\n    padding-right: 2rem;\n  }\n}\n\n.books {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  padding: 5vh 8vw;\n\n  &amp; .book {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: calc(100% / 4 - 42px);\n    margin: 20px;\n\n    &amp; h2 {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n\n    &amp; .book-author {\n      font-size: 1rem;\n    }\n\n    &amp; .book-price {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; .price-and-like {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      &amp; .mdi-heart-outline {\n        font-size: 1.3rem;\n        color: #27ae60;\n      }\n    }\n  }\n}\n\n.cart {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 5vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    font-size: 2rem;\n    font-weight: 700;\n    color: #27ae60;\n  }\n\n  &amp; table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 40px 0;\n\n    &amp; th,\n    td {\n      padding: 10px;\n      text-align: left;\n    }\n\n    &amp; th {\n      border-bottom: 2px solid #27ae6099;\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; td {\n      border-bottom: 1px solid rgb(128, 128, 128);\n      font-size: 1rem;\n    }\n\n    &amp; .cart-item-quantity {\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .cart-item-subtotal {\n      font-size: 1.1rem;\n      font-weight: 700;\n    }\n\n    &amp; .cart-item {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      &amp; img {\n        width: 80px;\n        height: auto;\n      }\n\n      &amp; .cart-item-info {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n\n        &amp; .cart-item-title {\n          font-size: 1.2rem;\n          font-weight: 700;\n        }\n        &amp; .cart-item-author {\n          font-size: 1rem;\n        }\n        &amp; .cart-item-price {\n          font-size: 1.1rem;\n          font-weight: 600;\n        }\n      }\n    }\n  }\n\n  &amp; .cart-summary {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n\n    &amp; .cupom {\n      display: flex;\n      align-items: center;\n      margin-top: 80px;\n      gap: 10px;\n\n      &amp; input {\n        width: 350px;\n        height: 50px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 2px solid rgb(128, 128, 128);\n        padding: 5px;\n      }\n    }\n\n    &amp; .summary {\n      border: 1px solid rgb(128, 128, 128);\n      padding: 1vw;\n\n      &amp; h2 {\n        font-size: 1.2rem;\n        font-weight: 700;\n        color: black;\n      }\n\n      &amp; .summary-items {\n        display: grid;\n        grid-template-columns: 3fr 1fr;\n\n        &amp; span {\n          padding: 10px 0;\n          border-bottom: 1px solid rgb(128, 128, 128);\n        }\n      }\n\n      &amp; button {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n\nbutton {\n  background-color: #27ae60;\n  color: #fff;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 5px;\n  font-size: 1rem;\n  cursor: pointer;\n  gap: 20px;\n  display: flex;\n  justify-content: center;\n\n  &amp;.outlined {\n    background-color: transparent;\n    color: #27ae60;\n    border: 2px solid #27ae60;\n  }\n\n  &amp;.plain {\n    background-color: transparent;\n    color: black;\n    border: none;\n    cursor: pointer;\n  }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"componentes/#as-configuracoes-de-css","title":"As configura\u00e7\u00f5es de CSS","text":"<p>Note que, com essas altera\u00e7\u00f5es, o estilo CSS dos bot\u00f5es n\u00e3o foram colocados nos novos componentes, por isso a visualiza\u00e7\u00e3o pode estar diferente. Para resolver isso, vamos colocar todos os estilos CSS dos bot\u00f5es no arquivo <code>src/assets/main.css</code> (pode remover do arquivo <code>src/App.vue</code>). Para isso, abra o arquivo <code>src/assets/main.css</code> e deixe o c\u00f3digo como abaixo:</p> ./src/assets/main.css<pre><code>@import './base.css';\n\nhtml {\n  font-size: clamp(1rem, 1.5vw, 1.2rem);\n  line-height: 1.5;\n}\n\nbutton {\n  background-color: #27ae60;\n  color: #fff;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 5px;\n  font-size: 1rem;\n  cursor: pointer;\n  gap: 20px;\n  display: flex;\n  justify-content: center;\n  &amp;.outlined {\n    background-color: transparent;\n    color: #27ae60;\n    border: 2px solid #27ae60;\n  }\n  &amp;.plain {\n    background-color: transparent;\n    color: black;\n    border: none;\n    cursor: pointer;\n  }\n}\n</code></pre>"},{"location":"componentes/#manipulando-eventos","title":"Manipulando eventos","text":"<p>A manipula\u00e7\u00e3o de eventos \u00e9 uma parte importante da programa\u00e7\u00e3o de interfaces de usu\u00e1rio. No Vue.js, os componentes filhos podem emitir eventos que s\u00e3o capturados pelos componentes pais. Para isso, \u00e9 necess\u00e1rio utilizar a diretiva v-on no componente pai e o m\u00e9todo $emit no componente filho.</p> <p>Vamos fazer um exemplo na cria\u00e7\u00e3o do componente de cabe\u00e7alho. O cabe\u00e7alho da aplica\u00e7\u00e3o ter\u00e1 um \u00edcone (<code>mdi-cart</code>) que, quando clicado, ir\u00e1 emitir um evento para o componente pai, que permitir\u00e1 alternar entre a exibi\u00e7\u00e3o e oculta\u00e7\u00e3o do carrinho de compras.</p>"},{"location":"componentes/#componente-de-cabecalho","title":"Componente de cabe\u00e7alho","text":"<p>Primeiramente, vamos criar o componente de cabe\u00e7alho. Para isso, crie um novo arquivo chamado <code>HeaderComponent.vue</code> na pasta <code>src/components</code>. O conte\u00fado do arquivo deve ser o seguinte:</p> ./src/components/HeaderComponent.vue<pre><code>&lt;script setup&gt;\ndefineEmits(['click-cart']);\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;h1&gt;\n        &lt;a href=\"#\"&gt;\n          IFbooks\n          &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n        &lt;/a&gt;\n      &lt;/h1&gt;\n      &lt;div class=\"search-wrapper\"&gt;\n        &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n      &lt;/div&gt;\n      &lt;ul&gt;\n        &lt;li&gt;Termos&lt;/li&gt;\n        &lt;li&gt;Equipe&lt;/li&gt;\n        &lt;li&gt;Envio&lt;/li&gt;\n        &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;ul class=\"icons\"&gt;\n        &lt;li @click=\"$emit('click-cart')\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h1 {\n    font-size: 1.3rem;\n    color: #000;\n\n    &amp; a {\n      text-decoration: none;\n      color: #000;\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .logo-title {\n      border-left: 1px solid #27ae6099;\n      font-size: 0.8rem;\n      margin-left: 10px;\n      padding-left: 10px;\n      color: #27ae6099;\n      width: 100px;\n      line-height: 1rem;\n    }\n  }\n\n  &amp; input {\n    width: 400px;\n    height: 40px;\n    border-radius: 5px;\n    font-size: 1rem;\n    border: 0;\n    background-color: #f1f1f1;\n    padding: 5px;\n  }\n\n  &amp; ul {\n    display: flex;\n  }\n\n  &amp; ul li {\n    list-style: none;\n    margin: 0 10px;\n    font-size: 1rem;\n  }\n\n  &amp; .icons li {\n    color: #27ae60;\n    font-size: 1.3rem;\n  }\n\n  &amp; .search-wrapper {\n    position: relative;\n  }\n\n  &amp; .search-wrapper::before {\n    content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n    font-family: 'Material Design Icons';\n    font-size: 1.2rem;\n    position: absolute;\n    right: 0.75rem;\n    top: 50%;\n    transform: translateY(-50%);\n    pointer-events: none;\n  }\n\n  &amp; .search {\n    padding-right: 2rem;\n  }\n}\n&lt;/style&gt;\n</code></pre> <p>Note que, como nos casos anteriores, os blocos template e style foram praticamente copiados integralmente do arquivo <code>App.vue</code>. O que muda \u00e9 que definimos um bloco <code>script</code>, onde declaramos o evento <code>click-cart</code> que ser\u00e1 emitido quando o \u00edcone do carrinho for clicado. Tamb\u00e9m, no bloco <code>template</code>, alteramos a linha 24 para adicionar o evento <code>click</code> no \u00edcone do carrinho, que ir\u00e1 emitir o evento <code>click-cart</code> para o componente pai.</p> <p>Agora, precisamos importar o componente <code>HeaderComponent</code> no arquivo <code>App.vue</code> e adicionar o evento <code>click-cart</code> no cabe\u00e7alho. Para isso, abra o arquivo <code>src/App.vue</code> e fa\u00e7a as seguintes altera\u00e7\u00f5es:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport HeroBanner from '@/components/HeroBanner.vue'\nimport FeaturedComponent from '@/components/FeaturedComponent.vue'\nimport HeaderComponent from '@/components/HeaderComponent.vue'\n...\n&lt;/script&gt;\n</code></pre> <p>Tamb\u00e9m, precisamos editar o bloco <code>template</code> do arquivo <code>App.vue</code> para adicionar o evento <code>click-cart</code> no cabe\u00e7alho. Para isso, altere a linha 12 do arquivo <code>App.vue</code> para:</p> ./src/App.vue<pre><code>&lt;template&gt;\n  &lt;header-component @click-cart=\"showCart = !showCart\" /&gt;\n  &lt;main v-if=\"showCart\"&gt;\n  ...\n&lt;/template&gt;\n</code></pre> <p>A vers\u00e3o completa do arquivo <code>App.vue</code> est\u00e1 no bloco abaixo.</p>  Vers\u00e3o completa <p>Note que, al\u00e9m das linhas destacadas, foi retirado o c\u00f3digo das tags <code>&lt;section&gt;</code> relativas ao hero e featured do arquivo <code>App.vue</code>. Tamb\u00e9m, foi removida a parte correspondente no bloco de <code>&lt;style&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport HeroBanner from '@/components/HeroBanner.vue'\nimport FeaturedComponent from '@/components/FeaturedComponent.vue'\nimport HeaderComponent from '@/components/HeaderComponent.vue'\n\nconst showCart = ref(false)\nconst cart = ref({\n    items: [],\n    total: 0,\n})\n\nconst books = [\n    {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n    },\n    {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n    },\n    {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n    },\n    {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n    },\n    {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n    },\n    {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n    },\n]\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header-component @click-cart=\"showCart = !showCart\" /&gt;\n  &lt;main v-if=\"showCart\"&gt;\n    &lt;section class=\"cart\"&gt;\n      &lt;h2&gt;Carrinho&lt;/h2&gt;\n      &lt;table&gt;\n        &lt;thead&gt;\n          &lt;tr&gt;\n            &lt;th&gt;T\u00edtulo&lt;/th&gt;\n            &lt;th&gt;Quantidade&lt;/th&gt;\n            &lt;th&gt;Subtotal&lt;/th&gt;\n          &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n          &lt;tr v-for=\"book in cart.items\" :key=\"book.id\"&gt;\n            &lt;td class=\"cart-item\"&gt;\n              &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n              &lt;div class=\"cart-item-info\"&gt;\n                &lt;p class=\"cart-item-title\"&gt;{{ book.title }}&lt;/p&gt;\n                &lt;p class=\"cart-item-author\"&gt;{{ book.author }}&lt;/p&gt;\n                &lt;p class=\"cart-item-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n              &lt;div class=\"cart-item-quantity\"&gt;\n                &lt;button class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-minus\" /&gt;\n                &lt;/button&gt;\n                {{ book.quantity }}\n                &lt;button class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-plus\" /&gt;\n                &lt;/button&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td class=\"cart-item-subtotal\"&gt;R$ {{ book.price * book.quantity }}&lt;/td&gt;\n          &lt;/tr&gt;\n        &lt;/tbody&gt;\n      &lt;/table&gt;\n      &lt;button @click=\"showCart = false\" class=\"outlined\"&gt;Voltar para loja&lt;/button&gt;\n      &lt;div class=\"cart-summary\"&gt;\n        &lt;div class=\"cupom\"&gt;\n          &lt;input type=\"text\" placeholder=\"C\u00f3digo do cupom\" /&gt;\n          &lt;button&gt;Inserir cupom&lt;/button&gt;\n        &lt;/div&gt;\n        &lt;div class=\"summary\"&gt;\n          &lt;h2&gt;Total da Compra&lt;/h2&gt;\n          &lt;div class=\"summary-items\"&gt;\n            &lt;span&gt;Produtos&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt; &lt;span&gt;Frete&lt;/span&gt;\n            &lt;span&gt; Gr\u00e1tis&lt;/span&gt; &lt;span&gt;Total&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n          &lt;/div&gt;\n          &lt;button&gt;Ir para pagamento&lt;/button&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;main v-else&gt;\n    &lt;hero-banner /&gt;\n    &lt;featured-component /&gt;\n    &lt;section class=\"books\"&gt;\n      &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n        &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n        &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n        &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n        &lt;span class=\"price-and-like\"&gt;\n          &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n          &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n        &lt;/span&gt;\n        &lt;button&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n      &lt;/article&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;footer-component /&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.books {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  padding: 5vh 8vw;\n\n  &amp; .book {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: calc(100% / 4 - 42px);\n    margin: 20px;\n\n    &amp; h2 {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n\n    &amp; .book-author {\n      font-size: 1rem;\n    }\n\n    &amp; .book-price {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; .price-and-like {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      &amp; .mdi-heart-outline {\n        font-size: 1.3rem;\n        color: #27ae60;\n      }\n    }\n  }\n}\n\n.cart {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 5vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    font-size: 2rem;\n    font-weight: 700;\n    color: #27ae60;\n  }\n\n  &amp; table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 40px 0;\n\n    &amp; th,\n    td {\n      padding: 10px;\n      text-align: left;\n    }\n\n    &amp; th {\n      border-bottom: 2px solid #27ae6099;\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; td {\n      border-bottom: 1px solid rgb(128, 128, 128);\n      font-size: 1rem;\n    }\n\n    &amp; .cart-item-quantity {\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .cart-item-subtotal {\n      font-size: 1.1rem;\n      font-weight: 700;\n    }\n\n    &amp; .cart-item {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      &amp; img {\n        width: 80px;\n        height: auto;\n      }\n\n      &amp; .cart-item-info {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n\n        &amp; .cart-item-title {\n          font-size: 1.2rem;\n          font-weight: 700;\n        }\n        &amp; .cart-item-author {\n          font-size: 1rem;\n        }\n        &amp; .cart-item-price {\n          font-size: 1.1rem;\n          font-weight: 600;\n        }\n      }\n    }\n  }\n\n  &amp; .cart-summary {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n\n    &amp; .cupom {\n      display: flex;\n      align-items: center;\n      margin-top: 80px;\n      gap: 10px;\n\n      &amp; input {\n        width: 350px;\n        height: 50px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 2px solid rgb(128, 128, 128);\n        padding: 5px;\n      }\n    }\n\n    &amp; .summary {\n      border: 1px solid rgb(128, 128, 128);\n      padding: 1vw;\n\n      &amp; h2 {\n        font-size: 1.2rem;\n        font-weight: 700;\n        color: black;\n      }\n\n      &amp; .summary-items {\n        display: grid;\n        grid-template-columns: 3fr 1fr;\n\n        &amp; span {\n          padding: 10px 0;\n          border-bottom: 1px solid rgb(128, 128, 128);\n        }\n      }\n\n      &amp; button {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"componentes/#propriedades-de-um-componente","title":"Propriedades de um componente","text":"<p>Ao criar um componente, \u00e9 poss\u00edvel passar propriedades para ele. As propriedades s\u00e3o valores que podem ser utilizados pelo componente para alterar seu comportamento ou sua apar\u00eancia. As propriedades s\u00e3o passadas para o componente como atributos HTML e s\u00e3o acessadas pelo componente como vari\u00e1veis JavaScript.</p> <p>Para isso, como no caso dos eventos, elas precisam ser declaradas no componente. Para declarar uma propriedade, usamos a fun\u00e7\u00e3o <code>defineProps</code> do VueJS, que deve ser chamada dentro do bloco <code>&lt;script setup&gt;</code>, que \u00e9 o bloco onde declaramos as vari\u00e1veis e fun\u00e7\u00f5es do componente.</p>"},{"location":"componentes/#componente-do-carrinho","title":"Componente do carrinho","text":"<p>Para exemplificar o uso de propriedades, vamos criar um componente que representa o carrinho de compras. Esse componente vai receber a propriedade: <code>cart</code> que \u00e9 um objeto que cont\u00e9m um array com os itens do carrinho e o total do carrinho. O componente vai exibir a lista de itens do carrinho e o total do carrinho. O componente vai ser usado na p\u00e1gina principal da livraria, onde vamos exibir o carrinho de compras.</p> <p>Para isso, vamos criar o componente <code>CartComponent.vue</code> dentro da pasta <code>src/components</code>. O arquivo deve ficar assim:</p> ./src/components/CartComponent.vue<pre><code>&lt;script setup&gt;\ndefineProps(['cart']);\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;section class=\"cart\"&gt;\n    &lt;h2&gt;Carrinho&lt;/h2&gt;\n    &lt;table&gt;\n      &lt;thead&gt;\n        &lt;tr&gt;\n          &lt;th&gt;T\u00edtulo&lt;/th&gt;\n          &lt;th&gt;Quantidade&lt;/th&gt;\n          &lt;th&gt;Subtotal&lt;/th&gt;\n        &lt;/tr&gt;\n      &lt;/thead&gt;\n      &lt;tbody&gt;\n        &lt;tr v-for=\"book in cart.items\" :key=\"book.id\"&gt;\n          &lt;td class=\"cart-item\"&gt;\n            &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n            &lt;div class=\"cart-item-info\"&gt;\n              &lt;p class=\"cart-item-title\"&gt;{{ book.title }}&lt;/p&gt;\n              &lt;p class=\"cart-item-author\"&gt;{{ book.author }}&lt;/p&gt;\n              &lt;p class=\"cart-item-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n            &lt;/div&gt;\n          &lt;/td&gt;\n          &lt;td&gt;\n            &lt;div class=\"cart-item-quantity\"&gt;\n              &lt;button class=\"plain\"&gt;\n                &lt;span class=\"mdi mdi-minus\" /&gt;\n              &lt;/button&gt;\n              {{ book.quantity }}\n              &lt;button class=\"plain\"&gt;\n                &lt;span class=\"mdi mdi-plus\" /&gt;\n              &lt;/button&gt;\n            &lt;/div&gt;\n          &lt;/td&gt;\n          &lt;td class=\"cart-item-subtotal\"&gt;\n            R$ {{ book.price * book.quantity }}\n          &lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/tbody&gt;\n    &lt;/table&gt;\n    &lt;button class=\"outlined\"&gt;Voltar para loja&lt;/button&gt;\n    &lt;div class=\"cart-summary\"&gt;\n      &lt;div class=\"cupom\"&gt;\n        &lt;input type=\"text\" placeholder=\"C\u00f3digo do cupom\" /&gt;\n        &lt;button&gt;Inserir cupom&lt;/button&gt;\n      &lt;/div&gt;\n      &lt;div class=\"summary\"&gt;\n        &lt;h2&gt;Total da Compra&lt;/h2&gt;\n        &lt;div class=\"summary-items\"&gt;\n          &lt;span&gt;Produtos&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n          &lt;span&gt;Frete&lt;/span&gt; &lt;span&gt; Gr\u00e1tis&lt;/span&gt; &lt;span&gt;Total&lt;/span&gt;\n          &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;button&gt;Ir para pagamento&lt;/button&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/section&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.cart {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 5vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    font-size: 2rem;\n    font-weight: 700;\n    color: #27ae60;\n  }\n\n  &amp; table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 40px 0;\n\n    &amp; th,\n    td {\n      padding: 10px;\n      text-align: left;\n    }\n\n    &amp; th {\n      border-bottom: 2px solid #27ae6099;\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; td {\n      border-bottom: 1px solid rgb(128, 128, 128);\n      font-size: 1rem;\n    }\n\n    &amp; .cart-item-quantity {\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .cart-item-subtotal {\n      font-size: 1.1rem;\n      font-weight: 700;\n    }\n\n    &amp; .cart-item {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      &amp; img {\n        width: 80px;\n        height: auto;\n      }\n\n      &amp; .cart-item-info {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n\n        &amp; .cart-item-title {\n          font-size: 1.2rem;\n          font-weight: 700;\n        }\n        &amp; .cart-item-author {\n          font-size: 1rem;\n        }\n        &amp; .cart-item-price {\n          font-size: 1.1rem;\n          font-weight: 600;\n        }\n      }\n    }\n  }\n\n  &amp; .cart-summary {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n\n    &amp; .cupom {\n      display: flex;\n      align-items: center;\n      margin-top: 80px;\n      gap: 10px;\n\n      &amp; input {\n        width: 350px;\n        height: 50px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 2px solid rgb(128, 128, 128);\n        padding: 5px;\n      }\n    }\n\n    &amp; .summary {\n      border: 1px solid rgb(128, 128, 128);\n      padding: 1vw;\n\n      &amp; h2 {\n        font-size: 1.2rem;\n        font-weight: 700;\n        color: black;\n      }\n\n      &amp; .summary-items {\n        display: grid;\n        grid-template-columns: 3fr 1fr;\n\n        &amp; span {\n          padding: 10px 0;\n          border-bottom: 1px solid rgb(128, 128, 128);\n        }\n      }\n\n      &amp; button {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n&lt;/style&gt;\n</code></pre> <p>Agora, temos que importar e usar o componente <code>CartComponent</code> no arquivo <code>src/App.vue</code>. Para isso, abra o arquivo <code>src/App.vue</code> e adicione o seguinte c\u00f3digo:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport HeroBanner from '@/components/HeroBanner.vue'\nimport FeaturedComponent from '@/components/FeaturedComponent.vue'\nimport HeaderComponent from '@/components/HeaderComponent.vue'\nimport CartComponent from '@/components/CartComponent.vue'\n...\n&lt;/script&gt;\n</code></pre> <p>Tamb\u00e9m, adicione o componente <code>CartComponent</code> no template do arquivo <code>src/App.vue</code>, como no c\u00f3digo abaixo:</p> ./src/App.vue<pre><code>&lt;main v-if=\"showCart\"&gt; \n  &lt;cart-component :cart=\"cart\"/&gt;\n&lt;/main&gt;\n</code></pre> <p>Note que que na linha 79 o <code>CardComponent</code> foi adicionado dentro do bloco <code>&lt;main&gt;</code> que exibe o carrinho de compras. O componente <code>CartComponent</code> recebe a propriedade <code>cart</code>, que \u00e9 um objeto que cont\u00e9m os itens do carrinho e o total do carrinho. Veja que o valor da propriedade <code>cart</code> foi enviado via diretiva <code>v-bind</code>, que \u00e9 a forma de passar propriedades para um componente no VueJS. A diretiva <code>v-bind</code>, neste caso, foi abreviada para <code>:</code>. Assim, o valor da propriedade <code>cart</code> \u00e9 o objeto <code>cart</code> que foi declarado no bloco <code>&lt;script setup&gt;</code>.</p> <p>A vers\u00e3o completa do arquivo <code>App.vue</code> est\u00e1 no bloco abaixo.</p>  Vers\u00e3o completa <p>Note que, al\u00e9m das linhas destacadas, foi retirado o c\u00f3digo das tags <code>&lt;section&gt;</code> relativas ao hero e featured do arquivo <code>App.vue</code>. Tamb\u00e9m, foi removida a parte correspondente no bloco de <code>&lt;style&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport HeroBanner from '@/components/HeroBanner.vue'\nimport FeaturedComponent from '@/components/FeaturedComponent.vue'\nimport HeaderComponent from '@/components/HeaderComponent.vue'\nimport CartComponent from '@/components/CartComponent.vue'\n\nconst showCart = ref(false)\nconst cart = ref({\n    items: [],\n    total: 0,\n})\n\nconst books = [\n    {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n    },\n    {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n    },\n    {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n    },\n    {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n    },\n    {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n    },\n    {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n    },\n]\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header-component @click-cart=\"showCart = !showCart\" /&gt;\n  &lt;main v-if=\"showCart\"&gt;\n    &lt;cart-component :cart=\"cart\"/&gt;\n  &lt;/main&gt;\n  &lt;main v-else&gt;\n    &lt;hero-banner /&gt;\n    &lt;featured-component /&gt;\n    &lt;section class=\"books\"&gt;\n      &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n        &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n        &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n        &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n        &lt;span class=\"price-and-like\"&gt;\n          &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n          &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n        &lt;/span&gt;\n        &lt;button&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n      &lt;/article&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;footer-component /&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.books {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  padding: 5vh 8vw;\n\n  &amp; .book {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: calc(100% / 4 - 42px);\n    margin: 20px;\n\n    &amp; h2 {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n\n    &amp; .book-author {\n      font-size: 1rem;\n    }\n\n    &amp; .book-price {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; .price-and-like {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      &amp; .mdi-heart-outline {\n        font-size: 1.3rem;\n        color: #27ae60;\n      }\n    }\n  }\n}\n\nbutton {\n  background-color: #27ae60;\n  color: #fff;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 5px;\n  font-size: 1rem;\n  cursor: pointer;\n  gap: 20px;\n  display: flex;\n  justify-content: center;\n\n  &amp;.outlined {\n    background-color: transparent;\n    color: #27ae60;\n    border: 2px solid #27ae60;\n  }\n\n  &amp;.plain {\n    background-color: transparent;\n    color: black;\n    border: none;\n    cursor: pointer;\n  }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"componentes/#melhorias-no-componente-carrinho","title":"Melhorias no componente carrinho","text":"<p>Agora que temos o componente <code>CartComponent</code> funcionando, podemos fazer algumas melhorias nele. Vamos adicionar a funcionalidade de adicionar e remover itens do carrinho, e tamb\u00e9m habilitar o bot\u00e3o de \"Voltar para a loja\". Para isso, vamos criar tr\u00eas eventos no componente <code>CartComponent</code>:</p> <ul> <li><code>increment-book</code>: evento que \u00e9 emitido quando o usu\u00e1rio clica no bot\u00e3o de adicionar item ao carrinho. Esse evento deve passar o item que foi adicionado ao carrinho.</li> <li><code>decrement-book</code>: evento que \u00e9 emitido quando o usu\u00e1rio clica no bot\u00e3o de remover item do carrinho. Esse evento deve passar o item que foi removido do carrinho.</li> <li><code>hide-cart</code>: evento que \u00e9 emitido quando o usu\u00e1rio clica no bot\u00e3o de \"Voltar para a loja\". Esse evento n\u00e3o deve passar nenhum dado.</li> </ul> <p>Para isso, vamos editar o componente <code>CartComponent.vue</code> e adicionar os eventos. O arquivo deve ficar assim:</p> ./src/components/CartComponent.vue<pre><code>&lt;script setup&gt;\ndefineProps(['cart']);\ndefineEmits(['hide-cart', 'increment-book', 'decrement-book']);\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;section class=\"cart\"&gt;\n    &lt;h2&gt;Carrinho&lt;/h2&gt;\n    &lt;table&gt;\n      &lt;thead&gt;\n        &lt;tr&gt;\n          &lt;th&gt;T\u00edtulo&lt;/th&gt;\n          &lt;th&gt;Quantidade&lt;/th&gt;\n          &lt;th&gt;Subtotal&lt;/th&gt;\n        &lt;/tr&gt;\n      &lt;/thead&gt;\n      &lt;tbody&gt;\n        &lt;tr v-for=\"book in cart.items\" :key=\"book.id\"&gt;\n          &lt;td class=\"cart-item\"&gt;\n            &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n            &lt;div class=\"cart-item-info\"&gt;\n              &lt;p class=\"cart-item-title\"&gt;{{ book.title }}&lt;/p&gt;\n              &lt;p class=\"cart-item-author\"&gt;{{ book.author }}&lt;/p&gt;\n              &lt;p class=\"cart-item-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n            &lt;/div&gt;\n          &lt;/td&gt;\n          &lt;td&gt;\n            &lt;div class=\"cart-item-quantity\"&gt;\n              &lt;button @click=\"decrementBookToCart(book)\" class=\"plain\"&gt;\n                &lt;span class=\"mdi mdi-minus\" /&gt;\n              &lt;/button&gt;\n              {{ book.quantity }}\n              &lt;button @click=\"$emit('increment-book', book)\" class=\"plain\"&gt;\n                &lt;span class=\"mdi mdi-plus\" /&gt;\n              &lt;/button&gt;\n            &lt;/div&gt;\n          &lt;/td&gt;\n          &lt;td class=\"cart-item-subtotal\"&gt;\n            R$ {{ book.price * book.quantity }}\n          &lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/tbody&gt;\n    &lt;/table&gt;\n    &lt;button @click=\"$emit('hide-cart')\" class=\"outlined\"&gt;\n      Voltar para loja\n    &lt;/button&gt;\n    &lt;div class=\"cart-summary\"&gt;\n      &lt;div class=\"cupom\"&gt;\n        &lt;input type=\"text\" placeholder=\"C\u00f3digo do cupom\" /&gt;\n        &lt;button&gt;Inserir cupom&lt;/button&gt;\n      &lt;/div&gt;\n      &lt;div class=\"summary\"&gt;\n        &lt;h2&gt;Total da Compra&lt;/h2&gt;\n        &lt;div class=\"summary-items\"&gt;\n          &lt;span&gt;Produtos&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n          &lt;span&gt;Frete&lt;/span&gt; &lt;span&gt; Gr\u00e1tis&lt;/span&gt; &lt;span&gt;Total&lt;/span&gt;\n          &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;button&gt;Ir para pagamento&lt;/button&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/section&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.cart {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 5vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    font-size: 2rem;\n    font-weight: 700;\n    color: #27ae60;\n  }\n\n  &amp; table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 40px 0;\n\n    &amp; th,\n    td {\n      padding: 10px;\n      text-align: left;\n    }\n\n    &amp; th {\n      border-bottom: 2px solid #27ae6099;\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; td {\n      border-bottom: 1px solid rgb(128, 128, 128);\n      font-size: 1rem;\n    }\n\n    &amp; .cart-item-quantity {\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .cart-item-subtotal {\n      font-size: 1.1rem;\n      font-weight: 700;\n    }\n\n    &amp; .cart-item {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      &amp; img {\n        width: 80px;\n        height: auto;\n      }\n\n      &amp; .cart-item-info {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n\n        &amp; .cart-item-title {\n          font-size: 1.2rem;\n          font-weight: 700;\n        }\n        &amp; .cart-item-author {\n          font-size: 1rem;\n        }\n        &amp; .cart-item-price {\n          font-size: 1.1rem;\n          font-weight: 600;\n        }\n      }\n    }\n  }\n\n  &amp; .cart-summary {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n\n    &amp; .cupom {\n      display: flex;\n      align-items: center;\n      margin-top: 80px;\n      gap: 10px;\n\n      &amp; input {\n        width: 350px;\n        height: 50px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 2px solid rgb(128, 128, 128);\n        padding: 5px;\n      }\n    }\n\n    &amp; .summary {\n      border: 1px solid rgb(128, 128, 128);\n      padding: 1vw;\n\n      &amp; h2 {\n        font-size: 1.2rem;\n        font-weight: 700;\n        color: black;\n      }\n\n      &amp; .summary-items {\n        display: grid;\n        grid-template-columns: 3fr 1fr;\n\n        &amp; span {\n          padding: 10px 0;\n          border-bottom: 1px solid rgb(128, 128, 128);\n        }\n      }\n\n      &amp; button {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n&lt;/style&gt;\n</code></pre> <p>Com isso, como j\u00e1 vimos anteriormente, o componente <code>CartComponent</code> emite os eventos <code>increment-book</code>, <code>decrement-book</code> e <code>hide-cart</code>. O evento <code>increment-book</code> \u00e9 emitido quando o usu\u00e1rio clica no bot\u00e3o de adicionar item ao carrinho. O evento <code>decrement-book</code> \u00e9 emitido quando o usu\u00e1rio clica no bot\u00e3o de remover item do carrinho. O evento <code>hide-cart</code> \u00e9 emitido quando o usu\u00e1rio clica no bot\u00e3o de \"Voltar para a loja\". Esses eventos s\u00e3o usados para atualizar o estado do carrinho na aplica\u00e7\u00e3o.</p> <p>Contudo, note que os eventos <code>increment-book</code> e <code>decrement-book</code> recebem tamb\u00e9m o item que foi adicionado ou removido do carrinho. Tal par\u00e2metro \u00e9 passado para o evento, e pode ser acessado no componente pai. Assim, podemos usar esses eventos para atualizar o estado do carrinho na aplica\u00e7\u00e3o.</p> <p>Agora, vamos editar o arquivo <code>src/App.vue</code> e adicionar os m\u00e9todos que v\u00e3o lidar com os eventos emitidos pelo componente <code>CartComponent</code>. O arquivo deve ficar assim:</p> ./src/App.vue<pre><code>&lt;main v-if=\"showCart\"&gt; \n  &lt;cart-component \n    :cart=\"cart\"\n    @hide-cart=\"showCart = false\"\n    @increment-book=\"incrementBookToCart\"\n    @decrement-book=\"decrementBookToCart\"\n  /&gt;\n&lt;/main&gt;\n</code></pre> <p>A vers\u00e3o completa do arquivo <code>App.vue</code> est\u00e1 no bloco abaixo.</p>  Vers\u00e3o completa ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport HeroBanner from '@/components/HeroBanner.vue'\nimport FeaturedComponent from '@/components/FeaturedComponent.vue'\nimport HeaderComponent from '@/components/HeaderComponent.vue'\nimport CartComponent from '@/components/CartComponent.vue'\n\nconst showCart = ref(false)\nconst cart = ref({\n    items: [],\n    total: 0,\n})\n\nconst books = [\n    {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n    },\n    {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n    },\n    {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n    },\n    {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n    },\n    {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n    },\n    {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n    },\n]\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header-component @click-cart=\"showCart = !showCart\" /&gt;\n  &lt;main v-if=\"showCart\"&gt;\n    &lt;cart-component\n      :cart=\"cart\"\n      @hide-cart=\"showCart = false\"\n      @increment-book=\"incrementBookToCart\"\n      @decrement-book=\"decrementBookToCart\"\n    /&gt;\n  &lt;/main&gt;\n  &lt;main v-else&gt;\n    &lt;hero-banner /&gt;\n    &lt;featured-component /&gt;\n    &lt;section class=\"books\"&gt;\n      &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n        &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n        &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n        &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n        &lt;span class=\"price-and-like\"&gt;\n          &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n          &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n        &lt;/span&gt;\n        &lt;button&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n      &lt;/article&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;footer-component /&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.books {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  padding: 5vh 8vw;\n\n  &amp; .book {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: calc(100% / 4 - 42px);\n    margin: 20px;\n\n    &amp; h2 {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n\n    &amp; .book-author {\n      font-size: 1rem;\n    }\n\n    &amp; .book-price {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; .price-and-like {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      &amp; .mdi-heart-outline {\n        font-size: 1.3rem;\n        color: #27ae60;\n      }\n    }\n  }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"componentes/#fixando-propriedades-e-eventos","title":"Fixando propriedades e eventos","text":"<p>J\u00e1 usamos o conceito de propriedades (props) e eventos (emits) em aulas anteriores, e tamb\u00e9m j\u00e1 o usamos em conjunto. Vamos agora, fazer a cria\u00e7\u00e3o de mais um componente que precise de props e emits, para fixar o conceito.</p> <p>No caso anterior, enviamos via props um objeto com os dados do carrinho de compras. Agora, vamos criar um componente que recebe um array de objetos, com as informa\u00e7\u00f5es dos livros, e exibe esses livros em uma lista. O componente tamb\u00e9m deve emitir um evento quando o usu\u00e1rio clicar no bot\u00e3o de adicionar ao carrinho. O evento deve enviar o objeto do livro que foi adicionado ao carrinho.</p>"},{"location":"componentes/#componente-de-listagem-de-livros","title":"Componente de Listagem de Livros","text":"<p>Vamos criar um componente chamado <code>BooksListing.vue</code> que ser\u00e1 respons\u00e1vel por exibir a lista de livros. Esse componente deve receber um array de objetos com as informa\u00e7\u00f5es dos livros e exibir esses livros em uma lista. O componente tamb\u00e9m deve emitir um evento quando o usu\u00e1rio clicar no bot\u00e3o de adicionar ao carrinho.</p> <p>Inicialmente, o componente deve ser criado na pasta <code>src/components</code>, com o seguinte conte\u00fado:</p> ./src/components/BooksListing.vue<pre><code>&lt;script setup&gt;\ndefineEmits(['add-to-cart']);\ndefineProps(['books']);\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;section class=\"books\"&gt;\n    &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n      &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n      &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n      &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n      &lt;span class=\"price-and-like\"&gt;\n        &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n        &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n      &lt;/span&gt;\n      &lt;button @click=\"$emit('add-to-cart', book)\"&gt;\n        &lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar\n      &lt;/button&gt;\n    &lt;/article&gt;\n  &lt;/section&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.books {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  padding: 5vh 8vw;\n\n  &amp; .book {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: calc(100% / 4 - 42px);\n    margin: 20px;\n\n    &amp; h2 {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n\n    &amp; .book-author {\n      font-size: 1rem;\n    }\n\n    &amp; .book-price {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; .price-and-like {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      &amp; .mdi-heart-outline {\n        font-size: 1.3rem;\n        color: #27ae60;\n      }\n    }\n  }\n}\n&lt;/style&gt;\n</code></pre> <p>Note que j\u00e1 declaramos as props e os emits do componente. As props s\u00e3o <code>books</code>, que \u00e9 um array de objetos com as informa\u00e7\u00f5es dos livros, e o evento <code>add-to-cart</code>, que \u00e9 emitido quando o usu\u00e1rio clica no bot\u00e3o de adicionar ao carrinho. O evento deve enviar o objeto do livro que foi adicionado ao carrinho (linha 16).</p> <p>Vamos agora alterar o arquivo <code>src/App.vue</code> para usar o novo componente. Para isso, abra o arquivo <code>src/App.vue</code> e adicione o seguinte conte\u00fado no bloco de script:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport HeroBanner from '@/components/HeroBanner.vue'\nimport FeaturedComponent from '@/components/FeaturedComponent.vue'\nimport HeaderComponent from '@/components/HeaderComponent.vue'\nimport CartComponent from '@/components/CartComponent.vue'\nimport BooksListing from '@/components/BooksListing.vue'\n...\n&lt;/script&gt;\n</code></pre> <p>Tamb\u00e9m, vamos adicionar o componente <code>BooksListing</code> no template do arquivo <code>src/App.vue</code>, e passar as props e os emits para o componente. O arquivo deve ficar assim:</p> ./src/App.vue<pre><code>&lt;main v-else&gt;\n  &lt;hero-banner /&gt;\n  &lt;featured-component /&gt;\n  &lt;books-listing :books=\"books\" @add-to-cart=\"addToCart\" /&gt;\n&lt;/main&gt;\n</code></pre> <p>A vers\u00e3o completa do arquivo <code>App.vue</code> est\u00e1 no bloco abaixo.</p>  Vers\u00e3o completa ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport HeroBanner from '@/components/HeroBanner.vue'\nimport FeaturedComponent from '@/components/FeaturedComponent.vue'\nimport HeaderComponent from '@/components/HeaderComponent.vue'\nimport CartComponent from '@/components/CartComponent.vue'\nimport BooksListing from '@/components/BooksListing.vue'\n\nconst showCart = ref(false)\nconst cart = ref({\n    items: [],\n    total: 0,\n})\n\nconst books = [\n    {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n    },\n    {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n    },\n    {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n    },\n    {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n    },\n    {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n    },\n    {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n    },\n]\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header-component @click-cart=\"showCart = !showCart\" /&gt;\n  &lt;main v-if=\"showCart\"&gt;\n    &lt;cart-component\n      :cart=\"cart\"\n      @hide-cart=\"showCart = false\"\n      @increment-book=\"incrementBookToCart\"\n      @decrement-book=\"decrementBookToCart\"\n    /&gt;\n  &lt;/main&gt;\n  &lt;main v-else&gt;\n    &lt;hero-banner /&gt;\n    &lt;featured-component /&gt;\n    &lt;books-listing :books=\"books\" @add-to-cart=\"addToCart\" /&gt;\n  &lt;/main&gt;\n  &lt;footer-component /&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n&lt;/style&gt;\n</code></pre>"},{"location":"componentes/criando-componentes-simples/","title":"Criando componentes simples","text":""},{"location":"componentes/criando-componentes-simples/#criacao-de-um-componente-simples","title":"Cria\u00e7\u00e3o de um componente simples","text":"<p>Para criar um componente, basta criar um arquivo com a extens\u00e3o <code>.vue</code> e definir o template, a l\u00f3gica e o estilo do componente. O VueJS j\u00e1 vem com uma estrutura b\u00e1sica de um SFC, que pode ser utilizada como base para criar novos componentes. De certa forma, o conceito b\u00e1sico de um componente j\u00e1 foi amplamente utilizado no arquivo <code>App.vue</code>, que \u00e9 o ponto de entrada da aplica\u00e7\u00e3o. O arquivo <code>App.vue</code> \u00e9 um SFC que cont\u00e9m o template, a l\u00f3gica e o estilo da aplica\u00e7\u00e3o. A partir dele, podemos criar novos componentes e utiliz\u00e1-los na aplica\u00e7\u00e3o.</p>"},{"location":"componentes/criando-componentes-simples/#componente-de-rodape","title":"Componente de rodap\u00e9","text":"<p>Vamos primeiro criar um component para o rodap\u00e9 da aplica\u00e7\u00e3o. Da forma que est\u00e1, o rodap\u00e9 da aplica\u00e7\u00e3o \u00e9 apenas um texto fixo. Vamos criar um componente para o rodap\u00e9 e utiliz\u00e1-lo na aplica\u00e7\u00e3o. Para isso, vamos criar um arquivo chamado <code>FooterComponent.vue</code> na pasta <code>src/components</code>. O conte\u00fado do arquivo <code>FooterComponent.vue</code> ser\u00e1 o seguinte:</p> ./src/components/FooterComponent.vue<pre><code>&lt;template&gt;\n  &lt;footer&gt;\n    &lt;nav&gt;\n      &lt;section class=\"upper-footer\"&gt;\n        &lt;div&gt;\n          &lt;p class=\"footer-title\"&gt;\n            &lt;a href=\"#\"&gt; IFbooks &lt;/a&gt;\n          &lt;/p&gt;\n          &lt;ul&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-facebook\" /&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-instagram\" /&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-twitter\" /&gt;&lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/div&gt;\n        &lt;div&gt;\n          &lt;p class=\"contact-text\"&gt;Contato&lt;/p&gt;\n          &lt;p&gt;&lt;span class=\"mdi mdi-phone\" /&gt; +55 47 99999-9999&lt;/p&gt;\n          &lt;p&gt;&lt;span class=\"mdi mdi-clock\" /&gt; 8h \u00e0s 23h - Seg a Sex&lt;/p&gt;\n          &lt;p&gt;&lt;span class=\"mdi mdi-email\" /&gt; contato@ifbooks.com.br&lt;/p&gt;\n          &lt;div class=\"payment-methods\"&gt;\n            &lt;span class=\"mdi mdi-visa\" /&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/section&gt;\n      &lt;section class=\"lower-footer\"&gt;\n        &lt;p&gt;&amp;copy; Alguns direitos reservados. IFBooks. 2025&lt;/p&gt;\n      &lt;/section&gt;\n    &lt;/nav&gt;\n  &lt;/footer&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nfooter {\n  background-color: #27ae60;\n  padding: 2vh 8vw;\n  color: #fff;\n\n  .upper-footer {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-bottom: 100px;\n    border-bottom: 2px solid #fff;\n\n    &amp; div {\n      display: flex;\n      flex-direction: column;\n      gap: 10px;\n\n      &amp; .footer-title {\n        font-size: 1.2rem;\n        font-weight: 700;\n\n        &amp; a {\n          text-decoration: none;\n          color: #fff;\n        }\n      }\n\n      &amp; .contact-text {\n        font-size: 1.1rem;\n        font-weight: 700;\n      }\n    }\n  }\n\n  .lower-footer {\n    display: flex;\n    justify-content: center;\n    padding-top: 20px;\n    font-size: 0.8rem;\n  }\n\n  ul {\n    display: flex;\n    padding: 0;\n    gap: 20px;\n\n    li {\n      list-style: none;\n      font-size: 1.2rem;\n      color: #fff;\n    }\n  }\n}\n&lt;/style&gt;\n</code></pre> <p>Note que esses dois blocos de c\u00f3digo foram copiados do arquivo <code>App.vue</code>, que \u00e9 o ponto de entrada da aplica\u00e7\u00e3o.</p> <p>Agora, vamos importar o componente <code>FooterComponent</code> no arquivo <code>App.vue</code> e utiliz\u00e1-lo no template. Para isso, vamos adicionar o seguinte c\u00f3digo ao arquivo <code>App.vue</code>:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue';\n\nimport FooterComponent from './components/FooterComponent.vue';\n...\n&lt;/script&gt;\n</code></pre> <p>Tamb\u00e9m ser\u00e1 necess\u00e1rio editar o bloco de template do arquivo <code>App.vue</code> para incluir o componente <code>FooterComponent</code>. Para isso, vamos substituir o c\u00f3digo do rodap\u00e9 pelo seguinte:</p> ./src/App.vue<pre><code>  &lt;/main&gt;\n  &lt;footer-component /&gt;\n&lt;/template&gt;\n</code></pre> <p>A vers\u00e3o completa do arquivo <code>App.vue</code> est\u00e1 no bloco abaixo.</p>  Vers\u00e3o completa <p>Note que, al\u00e9m das linhas destacadas, foi retirado o c\u00f3digo da tag <code>&lt;footer&gt;</code> do arquivo <code>App.vue</code>. Tamb\u00e9m, foi removida a parte correspondente no bloco de <code>&lt;style&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from './components/FooterComponent.vue';\n\nconst showCart = ref(false)\nconst cart = ref({\n    items: [],\n    total: 0,\n})\n\nconst books = [\n    {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n    },\n    {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n    },\n    {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n    },\n    {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n    },\n    {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n    },\n    {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n    },\n]\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;h1&gt;\n        &lt;a href=\"#\"&gt;\n          IFbooks\n          &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n        &lt;/a&gt;\n      &lt;/h1&gt;\n      &lt;div class=\"search-wrapper\"&gt;\n        &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n      &lt;/div&gt;\n      &lt;ul&gt;\n        &lt;li&gt;Termos&lt;/li&gt;\n        &lt;li&gt;Equipe&lt;/li&gt;\n        &lt;li&gt;Envio&lt;/li&gt;\n        &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;ul class=\"icons\"&gt;\n        &lt;li @click=\"showCart = !showCart\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n  &lt;main v-if=\"showCart\"&gt;\n    &lt;section class=\"cart\"&gt;\n      &lt;h2&gt;Carrinho&lt;/h2&gt;\n      &lt;table&gt;\n        &lt;thead&gt;\n          &lt;tr&gt;\n            &lt;th&gt;T\u00edtulo&lt;/th&gt;\n            &lt;th&gt;Quantidade&lt;/th&gt;\n            &lt;th&gt;Subtotal&lt;/th&gt;\n          &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n          &lt;tr v-for=\"book in cart.items\" :key=\"book.id\"&gt;\n            &lt;td class=\"cart-item\"&gt;\n              &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n              &lt;div class=\"cart-item-info\"&gt;\n                &lt;p class=\"cart-item-title\"&gt;{{ book.title }}&lt;/p&gt;\n                &lt;p class=\"cart-item-author\"&gt;{{ book.author }}&lt;/p&gt;\n                &lt;p class=\"cart-item-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n              &lt;div class=\"cart-item-quantity\"&gt;\n                &lt;button class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-minus\" /&gt;\n                &lt;/button&gt;\n                {{ book.quantity }}\n                &lt;button class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-plus\" /&gt;\n                &lt;/button&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td class=\"cart-item-subtotal\"&gt;R$ {{ book.price * book.quantity }}&lt;/td&gt;\n          &lt;/tr&gt;\n        &lt;/tbody&gt;\n      &lt;/table&gt;\n      &lt;button @click=\"showCart = false\" class=\"outlined\"&gt;Voltar para loja&lt;/button&gt;\n      &lt;div class=\"cart-summary\"&gt;\n        &lt;div class=\"cupom\"&gt;\n          &lt;input type=\"text\" placeholder=\"C\u00f3digo do cupom\" /&gt;\n          &lt;button&gt;Inserir cupom&lt;/button&gt;\n        &lt;/div&gt;\n        &lt;div class=\"summary\"&gt;\n          &lt;h2&gt;Total da Compra&lt;/h2&gt;\n          &lt;div class=\"summary-items\"&gt;\n            &lt;span&gt;Produtos&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt; &lt;span&gt;Frete&lt;/span&gt;\n            &lt;span&gt; Gr\u00e1tis&lt;/span&gt; &lt;span&gt;Total&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n          &lt;/div&gt;\n          &lt;button&gt;Ir para pagamento&lt;/button&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;main v-else&gt;\n    &lt;section class=\"hero\"&gt;\n      &lt;div class=\"hero-content\"&gt;\n        &lt;h3 class=\"outlined\"&gt;Livro destaque&lt;/h3&gt;\n        &lt;h2&gt;Noc Ognia&lt;/h2&gt;\n        &lt;p&gt;\n          Noc ognia \u00e9 um romance de Erich-Emmanuel Schmitt, que narra a hist\u00f3ria de um homem que\n          vive em um mundo onde as pessoas n\u00e3o podem mais sonhar. O livro \u00e9 uma reflex\u00e3o sobre a\n          import\u00e2ncia dos sonhos e da imagina\u00e7\u00e3o na vida humana. Erich-Emmanuel Schmitt \u00e9 um autor\n          franc\u00eas conhecido por suas obras que exploram temas filos\u00f3ficos e existenciais. Ele \u00e9 um\n          dos autores mais traduzidos da Fran\u00e7a e suas obras t\u00eam sido amplamente elogiadas pela\n          cr\u00edtica.\n        &lt;/p&gt;\n        &lt;button&gt;Acessar p\u00e1gina do livro&lt;/button&gt;\n      &lt;/div&gt;\n      &lt;div class=\"hero-image\"&gt;\n        &lt;img src=\"/hero.png\" alt=\"Hero Image\" /&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n    &lt;section class=\"featured\"&gt;\n      &lt;div&gt;\n        &lt;span class=\"mdi mdi-truck\"&gt;&lt;/span&gt;\n        &lt;h2&gt;Frete gr\u00e1tis para SC&lt;/h2&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;span class=\"mdi mdi-star\"&gt;&lt;/span&gt;\n        &lt;h2&gt;Livros recomendados&lt;/h2&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;span class=\"mdi mdi-book-open-page-variant\"&gt;&lt;/span&gt;\n        &lt;h2&gt;Mais vendidos&lt;/h2&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n    &lt;section class=\"books\"&gt;\n      &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n        &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n        &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n        &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n        &lt;span class=\"price-and-like\"&gt;\n          &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n          &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n        &lt;/span&gt;\n        &lt;button&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n      &lt;/article&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;footer-component /&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h1 {\n    font-size: 1.3rem;\n    color: #000;\n\n    &amp; a {\n      text-decoration: none;\n      color: #000;\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .logo-title {\n      border-left: 1px solid #27ae6099;\n      font-size: 0.8rem;\n      margin-left: 10px;\n      padding-left: 10px;\n      color: #27ae6099;\n      width: 100px;\n      line-height: 1rem;\n    }\n  }\n\n  &amp; input {\n    width: 400px;\n    height: 40px;\n    border-radius: 5px;\n    font-size: 1rem;\n    border: 0;\n    background-color: #f1f1f1;\n    padding: 5px;\n  }\n\n  &amp; ul {\n    display: flex;\n  }\n\n  &amp; ul li {\n    list-style: none;\n    margin: 0 10px;\n    font-size: 1rem;\n  }\n\n  &amp; .icons li {\n    color: #27ae60;\n    font-size: 1.3rem;\n  }\n\n  &amp; .search-wrapper {\n    position: relative;\n  }\n\n  &amp; .search-wrapper::before {\n    content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n    font-family: 'Material Design Icons';\n    font-size: 1.2rem;\n    position: absolute;\n    right: 0.75rem;\n    top: 50%;\n    transform: translateY(-50%);\n    pointer-events: none;\n  }\n\n  &amp; .search {\n    padding-right: 2rem;\n  }\n}\n\n.hero {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5vh 9vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    color: #382c2c;\n    font-size: 3rem;\n    font-weight: 700;\n  }\n\n  &amp; .hero-content {\n    width: 50%;\n    padding-right: 20px;\n    font-weight: 400;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 20px;\n\n    &amp; h3.outlined {\n      background-color: transparent;\n      color: #27ae60;\n      border: 2px solid #27ae60;\n      padding: 15px 20px;\n      border-radius: 5px;\n      font-size: 1rem;\n    }\n\n    &amp; button {\n      margin-top: 20px;\n    }\n\n    p {\n      width: 70%;\n    }\n  }\n\n  &amp; .hero-image {\n    width: 50%;\n    text-align: right;\n    padding-right: 4vw;\n\n    &amp; img {\n      max-width: 100%;\n      height: auto;\n    }\n  }\n}\n\n.featured {\n  display: flex;\n  padding: 3vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; div {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    justify-content: center;\n    gap: 10px;\n\n    &amp; span {\n      font-size: 2rem;\n    }\n\n    &amp; h2 {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n  }\n\n  &amp; article:nth-child(2) {\n    border-left: 1px solid #27ae6099;\n    border-right: 1px solid #27ae6099;\n  }\n}\n\n.books {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  padding: 5vh 8vw;\n\n  &amp; .book {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: calc(100% / 4 - 42px);\n    margin: 20px;\n\n    &amp; h2 {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n\n    &amp; .book-author {\n      font-size: 1rem;\n    }\n\n    &amp; .book-price {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; .price-and-like {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      &amp; .mdi-heart-outline {\n        font-size: 1.3rem;\n        color: #27ae60;\n      }\n    }\n  }\n}\n\n.cart {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 5vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    font-size: 2rem;\n    font-weight: 700;\n    color: #27ae60;\n  }\n\n  &amp; table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 40px 0;\n\n    &amp; th,\n    td {\n      padding: 10px;\n      text-align: left;\n    }\n\n    &amp; th {\n      border-bottom: 2px solid #27ae6099;\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; td {\n      border-bottom: 1px solid rgb(128, 128, 128);\n      font-size: 1rem;\n    }\n\n    &amp; .cart-item-quantity {\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .cart-item-subtotal {\n      font-size: 1.1rem;\n      font-weight: 700;\n    }\n\n    &amp; .cart-item {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      &amp; img {\n        width: 80px;\n        height: auto;\n      }\n\n      &amp; .cart-item-info {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n\n        &amp; .cart-item-title {\n          font-size: 1.2rem;\n          font-weight: 700;\n        }\n        &amp; .cart-item-author {\n          font-size: 1rem;\n        }\n        &amp; .cart-item-price {\n          font-size: 1.1rem;\n          font-weight: 600;\n        }\n      }\n    }\n  }\n\n  &amp; .cart-summary {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n\n    &amp; .cupom {\n      display: flex;\n      align-items: center;\n      margin-top: 80px;\n      gap: 10px;\n\n      &amp; input {\n        width: 350px;\n        height: 50px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 2px solid rgb(128, 128, 128);\n        padding: 5px;\n      }\n    }\n\n    &amp; .summary {\n      border: 1px solid rgb(128, 128, 128);\n      padding: 1vw;\n\n      &amp; h2 {\n        font-size: 1.2rem;\n        font-weight: 700;\n        color: black;\n      }\n\n      &amp; .summary-items {\n        display: grid;\n        grid-template-columns: 3fr 1fr;\n\n        &amp; span {\n          padding: 10px 0;\n          border-bottom: 1px solid rgb(128, 128, 128);\n        }\n      }\n\n      &amp; button {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n\nbutton {\n  background-color: #27ae60;\n  color: #fff;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 5px;\n  font-size: 1rem;\n  cursor: pointer;\n  gap: 20px;\n  display: flex;\n  justify-content: center;\n\n  &amp;.outlined {\n    background-color: transparent;\n    color: #27ae60;\n    border: 2px solid #27ae60;\n  }\n\n  &amp;.plain {\n    background-color: transparent;\n    color: black;\n    border: none;\n    cursor: pointer;\n  }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"componentes/fixando-props-emits/","title":"Fixando props emits","text":""},{"location":"componentes/fixando-props-emits/#fixando-propriedades-e-eventos","title":"Fixando propriedades e eventos","text":"<p>J\u00e1 usamos o conceito de propriedades (props) e eventos (emits) em aulas anteriores, e tamb\u00e9m j\u00e1 o usamos em conjunto. Vamos agora, fazer a cria\u00e7\u00e3o de mais um componente que precise de props e emits, para fixar o conceito.</p> <p>No caso anterior, enviamos via props um objeto com os dados do carrinho de compras. Agora, vamos criar um componente que recebe um array de objetos, com as informa\u00e7\u00f5es dos livros, e exibe esses livros em uma lista. O componente tamb\u00e9m deve emitir um evento quando o usu\u00e1rio clicar no bot\u00e3o de adicionar ao carrinho. O evento deve enviar o objeto do livro que foi adicionado ao carrinho.</p>"},{"location":"componentes/fixando-props-emits/#componente-de-listagem-de-livros","title":"Componente de Listagem de Livros","text":"<p>Vamos criar um componente chamado <code>BooksListing.vue</code> que ser\u00e1 respons\u00e1vel por exibir a lista de livros. Esse componente deve receber um array de objetos com as informa\u00e7\u00f5es dos livros e exibir esses livros em uma lista. O componente tamb\u00e9m deve emitir um evento quando o usu\u00e1rio clicar no bot\u00e3o de adicionar ao carrinho.</p> <p>Inicialmente, o componente deve ser criado na pasta <code>src/components</code>, com o seguinte conte\u00fado:</p> ./src/components/BooksListing.vue<pre><code>&lt;script setup&gt;\ndefineEmits(['add-to-cart']);\ndefineProps(['books']);\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;section class=\"books\"&gt;\n    &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n      &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n      &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n      &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n      &lt;span class=\"price-and-like\"&gt;\n        &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n        &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n      &lt;/span&gt;\n      &lt;button @click=\"$emit('add-to-cart', book)\"&gt;\n        &lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar\n      &lt;/button&gt;\n    &lt;/article&gt;\n  &lt;/section&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.books {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  padding: 5vh 8vw;\n\n  &amp; .book {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: calc(100% / 4 - 42px);\n    margin: 20px;\n\n    &amp; h2 {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n\n    &amp; .book-author {\n      font-size: 1rem;\n    }\n\n    &amp; .book-price {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; .price-and-like {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      &amp; .mdi-heart-outline {\n        font-size: 1.3rem;\n        color: #27ae60;\n      }\n    }\n  }\n}\n&lt;/style&gt;\n</code></pre> <p>Note que j\u00e1 declaramos as props e os emits do componente. As props s\u00e3o <code>books</code>, que \u00e9 um array de objetos com as informa\u00e7\u00f5es dos livros, e o evento <code>add-to-cart</code>, que \u00e9 emitido quando o usu\u00e1rio clica no bot\u00e3o de adicionar ao carrinho. O evento deve enviar o objeto do livro que foi adicionado ao carrinho (linha 16).</p> <p>Vamos agora alterar o arquivo <code>src/App.vue</code> para usar o novo componente. Para isso, abra o arquivo <code>src/App.vue</code> e adicione o seguinte conte\u00fado no bloco de script:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport HeroBanner from '@/components/HeroBanner.vue'\nimport FeaturedComponent from '@/components/FeaturedComponent.vue'\nimport HeaderComponent from '@/components/HeaderComponent.vue'\nimport CartComponent from '@/components/CartComponent.vue'\nimport BooksListing from '@/components/BooksListing.vue'\n...\n&lt;/script&gt;\n</code></pre> <p>Tamb\u00e9m, vamos adicionar o componente <code>BooksListing</code> no template do arquivo <code>src/App.vue</code>, e passar as props e os emits para o componente. O arquivo deve ficar assim:</p> ./src/App.vue<pre><code>&lt;main v-else&gt;\n  &lt;hero-banner /&gt;\n  &lt;featured-component /&gt;\n  &lt;books-listing :books=\"books\" @add-to-cart=\"addToCart\" /&gt;\n&lt;/main&gt;\n</code></pre> <p>A vers\u00e3o completa do arquivo <code>App.vue</code> est\u00e1 no bloco abaixo.</p>  Vers\u00e3o completa ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport HeroBanner from '@/components/HeroBanner.vue'\nimport FeaturedComponent from '@/components/FeaturedComponent.vue'\nimport HeaderComponent from '@/components/HeaderComponent.vue'\nimport CartComponent from '@/components/CartComponent.vue'\nimport BooksListing from '@/components/BooksListing.vue'\n\nconst showCart = ref(false)\nconst cart = ref({\n    items: [],\n    total: 0,\n})\n\nconst books = [\n    {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n    },\n    {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n    },\n    {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n    },\n    {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n    },\n    {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n    },\n    {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n    },\n]\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header-component @click-cart=\"showCart = !showCart\" /&gt;\n  &lt;main v-if=\"showCart\"&gt;\n    &lt;cart-component\n      :cart=\"cart\"\n      @hide-cart=\"showCart = false\"\n      @increment-book=\"incrementBookToCart\"\n      @decrement-book=\"decrementBookToCart\"\n    /&gt;\n  &lt;/main&gt;\n  &lt;main v-else&gt;\n    &lt;hero-banner /&gt;\n    &lt;featured-component /&gt;\n    &lt;books-listing :books=\"books\" @add-to-cart=\"addToCart\" /&gt;\n  &lt;/main&gt;\n  &lt;footer-component /&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n&lt;/style&gt;\n</code></pre>"},{"location":"componentes/manipulando-eventos/","title":"Manipulando eventos","text":""},{"location":"componentes/manipulando-eventos/#manipulando-eventos","title":"Manipulando eventos","text":"<p>A manipula\u00e7\u00e3o de eventos \u00e9 uma parte importante da programa\u00e7\u00e3o de interfaces de usu\u00e1rio. No Vue.js, os componentes filhos podem emitir eventos que s\u00e3o capturados pelos componentes pais. Para isso, \u00e9 necess\u00e1rio utilizar a diretiva v-on no componente pai e o m\u00e9todo $emit no componente filho.</p> <p>Vamos fazer um exemplo na cria\u00e7\u00e3o do componente de cabe\u00e7alho. O cabe\u00e7alho da aplica\u00e7\u00e3o ter\u00e1 um \u00edcone (<code>mdi-cart</code>) que, quando clicado, ir\u00e1 emitir um evento para o componente pai, que permitir\u00e1 alternar entre a exibi\u00e7\u00e3o e oculta\u00e7\u00e3o do carrinho de compras.</p>"},{"location":"componentes/manipulando-eventos/#componente-de-cabecalho","title":"Componente de cabe\u00e7alho","text":"<p>Primeiramente, vamos criar o componente de cabe\u00e7alho. Para isso, crie um novo arquivo chamado <code>HeaderComponent.vue</code> na pasta <code>src/components</code>. O conte\u00fado do arquivo deve ser o seguinte:</p> ./src/components/HeaderComponent.vue<pre><code>&lt;script setup&gt;\ndefineEmits(['click-cart']);\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;h1&gt;\n        &lt;a href=\"#\"&gt;\n          IFbooks\n          &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n        &lt;/a&gt;\n      &lt;/h1&gt;\n      &lt;div class=\"search-wrapper\"&gt;\n        &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n      &lt;/div&gt;\n      &lt;ul&gt;\n        &lt;li&gt;Termos&lt;/li&gt;\n        &lt;li&gt;Equipe&lt;/li&gt;\n        &lt;li&gt;Envio&lt;/li&gt;\n        &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;ul class=\"icons\"&gt;\n        &lt;li @click=\"$emit('click-cart')\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h1 {\n    font-size: 1.3rem;\n    color: #000;\n\n    &amp; a {\n      text-decoration: none;\n      color: #000;\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .logo-title {\n      border-left: 1px solid #27ae6099;\n      font-size: 0.8rem;\n      margin-left: 10px;\n      padding-left: 10px;\n      color: #27ae6099;\n      width: 100px;\n      line-height: 1rem;\n    }\n  }\n\n  &amp; input {\n    width: 400px;\n    height: 40px;\n    border-radius: 5px;\n    font-size: 1rem;\n    border: 0;\n    background-color: #f1f1f1;\n    padding: 5px;\n  }\n\n  &amp; ul {\n    display: flex;\n  }\n\n  &amp; ul li {\n    list-style: none;\n    margin: 0 10px;\n    font-size: 1rem;\n  }\n\n  &amp; .icons li {\n    color: #27ae60;\n    font-size: 1.3rem;\n  }\n\n  &amp; .search-wrapper {\n    position: relative;\n  }\n\n  &amp; .search-wrapper::before {\n    content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n    font-family: 'Material Design Icons';\n    font-size: 1.2rem;\n    position: absolute;\n    right: 0.75rem;\n    top: 50%;\n    transform: translateY(-50%);\n    pointer-events: none;\n  }\n\n  &amp; .search {\n    padding-right: 2rem;\n  }\n}\n&lt;/style&gt;\n</code></pre> <p>Note que, como nos casos anteriores, os blocos template e style foram praticamente copiados integralmente do arquivo <code>App.vue</code>. O que muda \u00e9 que definimos um bloco <code>script</code>, onde declaramos o evento <code>click-cart</code> que ser\u00e1 emitido quando o \u00edcone do carrinho for clicado. Tamb\u00e9m, no bloco <code>template</code>, alteramos a linha 24 para adicionar o evento <code>click</code> no \u00edcone do carrinho, que ir\u00e1 emitir o evento <code>click-cart</code> para o componente pai.</p> <p>Agora, precisamos importar o componente <code>HeaderComponent</code> no arquivo <code>App.vue</code> e adicionar o evento <code>click-cart</code> no cabe\u00e7alho. Para isso, abra o arquivo <code>src/App.vue</code> e fa\u00e7a as seguintes altera\u00e7\u00f5es:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport HeroBanner from '@/components/HeroBanner.vue'\nimport FeaturedComponent from '@/components/FeaturedComponent.vue'\nimport HeaderComponent from '@/components/HeaderComponent.vue'\n...\n&lt;/script&gt;\n</code></pre> <p>Tamb\u00e9m, precisamos editar o bloco <code>template</code> do arquivo <code>App.vue</code> para adicionar o evento <code>click-cart</code> no cabe\u00e7alho. Para isso, altere a linha 12 do arquivo <code>App.vue</code> para:</p> ./src/App.vue<pre><code>&lt;template&gt;\n  &lt;header-component @click-cart=\"showCart = !showCart\" /&gt;\n  &lt;main v-if=\"showCart\"&gt;\n  ...\n&lt;/template&gt;\n</code></pre> <p>A vers\u00e3o completa do arquivo <code>App.vue</code> est\u00e1 no bloco abaixo.</p>  Vers\u00e3o completa <p>Note que, al\u00e9m das linhas destacadas, foi retirado o c\u00f3digo das tags <code>&lt;section&gt;</code> relativas ao hero e featured do arquivo <code>App.vue</code>. Tamb\u00e9m, foi removida a parte correspondente no bloco de <code>&lt;style&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport HeroBanner from '@/components/HeroBanner.vue'\nimport FeaturedComponent from '@/components/FeaturedComponent.vue'\nimport HeaderComponent from '@/components/HeaderComponent.vue'\n\nconst showCart = ref(false)\nconst cart = ref({\n    items: [],\n    total: 0,\n})\n\nconst books = [\n    {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n    },\n    {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n    },\n    {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n    },\n    {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n    },\n    {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n    },\n    {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n    },\n]\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header-component @click-cart=\"showCart = !showCart\" /&gt;\n  &lt;main v-if=\"showCart\"&gt;\n    &lt;section class=\"cart\"&gt;\n      &lt;h2&gt;Carrinho&lt;/h2&gt;\n      &lt;table&gt;\n        &lt;thead&gt;\n          &lt;tr&gt;\n            &lt;th&gt;T\u00edtulo&lt;/th&gt;\n            &lt;th&gt;Quantidade&lt;/th&gt;\n            &lt;th&gt;Subtotal&lt;/th&gt;\n          &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n          &lt;tr v-for=\"book in cart.items\" :key=\"book.id\"&gt;\n            &lt;td class=\"cart-item\"&gt;\n              &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n              &lt;div class=\"cart-item-info\"&gt;\n                &lt;p class=\"cart-item-title\"&gt;{{ book.title }}&lt;/p&gt;\n                &lt;p class=\"cart-item-author\"&gt;{{ book.author }}&lt;/p&gt;\n                &lt;p class=\"cart-item-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n              &lt;div class=\"cart-item-quantity\"&gt;\n                &lt;button class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-minus\" /&gt;\n                &lt;/button&gt;\n                {{ book.quantity }}\n                &lt;button class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-plus\" /&gt;\n                &lt;/button&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td class=\"cart-item-subtotal\"&gt;R$ {{ book.price * book.quantity }}&lt;/td&gt;\n          &lt;/tr&gt;\n        &lt;/tbody&gt;\n      &lt;/table&gt;\n      &lt;button @click=\"showCart = false\" class=\"outlined\"&gt;Voltar para loja&lt;/button&gt;\n      &lt;div class=\"cart-summary\"&gt;\n        &lt;div class=\"cupom\"&gt;\n          &lt;input type=\"text\" placeholder=\"C\u00f3digo do cupom\" /&gt;\n          &lt;button&gt;Inserir cupom&lt;/button&gt;\n        &lt;/div&gt;\n        &lt;div class=\"summary\"&gt;\n          &lt;h2&gt;Total da Compra&lt;/h2&gt;\n          &lt;div class=\"summary-items\"&gt;\n            &lt;span&gt;Produtos&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt; &lt;span&gt;Frete&lt;/span&gt;\n            &lt;span&gt; Gr\u00e1tis&lt;/span&gt; &lt;span&gt;Total&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n          &lt;/div&gt;\n          &lt;button&gt;Ir para pagamento&lt;/button&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;main v-else&gt;\n    &lt;hero-banner /&gt;\n    &lt;featured-component /&gt;\n    &lt;section class=\"books\"&gt;\n      &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n        &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n        &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n        &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n        &lt;span class=\"price-and-like\"&gt;\n          &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n          &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n        &lt;/span&gt;\n        &lt;button&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n      &lt;/article&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;footer-component /&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.books {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  padding: 5vh 8vw;\n\n  &amp; .book {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: calc(100% / 4 - 42px);\n    margin: 20px;\n\n    &amp; h2 {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n\n    &amp; .book-author {\n      font-size: 1rem;\n    }\n\n    &amp; .book-price {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; .price-and-like {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      &amp; .mdi-heart-outline {\n        font-size: 1.3rem;\n        color: #27ae60;\n      }\n    }\n  }\n}\n\n.cart {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 5vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    font-size: 2rem;\n    font-weight: 700;\n    color: #27ae60;\n  }\n\n  &amp; table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 40px 0;\n\n    &amp; th,\n    td {\n      padding: 10px;\n      text-align: left;\n    }\n\n    &amp; th {\n      border-bottom: 2px solid #27ae6099;\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; td {\n      border-bottom: 1px solid rgb(128, 128, 128);\n      font-size: 1rem;\n    }\n\n    &amp; .cart-item-quantity {\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .cart-item-subtotal {\n      font-size: 1.1rem;\n      font-weight: 700;\n    }\n\n    &amp; .cart-item {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      &amp; img {\n        width: 80px;\n        height: auto;\n      }\n\n      &amp; .cart-item-info {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n\n        &amp; .cart-item-title {\n          font-size: 1.2rem;\n          font-weight: 700;\n        }\n        &amp; .cart-item-author {\n          font-size: 1rem;\n        }\n        &amp; .cart-item-price {\n          font-size: 1.1rem;\n          font-weight: 600;\n        }\n      }\n    }\n  }\n\n  &amp; .cart-summary {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n\n    &amp; .cupom {\n      display: flex;\n      align-items: center;\n      margin-top: 80px;\n      gap: 10px;\n\n      &amp; input {\n        width: 350px;\n        height: 50px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 2px solid rgb(128, 128, 128);\n        padding: 5px;\n      }\n    }\n\n    &amp; .summary {\n      border: 1px solid rgb(128, 128, 128);\n      padding: 1vw;\n\n      &amp; h2 {\n        font-size: 1.2rem;\n        font-weight: 700;\n        color: black;\n      }\n\n      &amp; .summary-items {\n        display: grid;\n        grid-template-columns: 3fr 1fr;\n\n        &amp; span {\n          padding: 10px 0;\n          border-bottom: 1px solid rgb(128, 128, 128);\n        }\n      }\n\n      &amp; button {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"componentes/propriedades/","title":"Propriedades","text":""},{"location":"componentes/propriedades/#propriedades-de-um-componente","title":"Propriedades de um componente","text":"<p>Ao criar um componente, \u00e9 poss\u00edvel passar propriedades para ele. As propriedades s\u00e3o valores que podem ser utilizados pelo componente para alterar seu comportamento ou sua apar\u00eancia. As propriedades s\u00e3o passadas para o componente como atributos HTML e s\u00e3o acessadas pelo componente como vari\u00e1veis JavaScript.</p> <p>Para isso, como no caso dos eventos, elas precisam ser declaradas no componente. Para declarar uma propriedade, usamos a fun\u00e7\u00e3o <code>defineProps</code> do VueJS, que deve ser chamada dentro do bloco <code>&lt;script setup&gt;</code>, que \u00e9 o bloco onde declaramos as vari\u00e1veis e fun\u00e7\u00f5es do componente.</p>"},{"location":"componentes/propriedades/#componente-do-carrinho","title":"Componente do carrinho","text":"<p>Para exemplificar o uso de propriedades, vamos criar um componente que representa o carrinho de compras. Esse componente vai receber a propriedade: <code>cart</code> que \u00e9 um objeto que cont\u00e9m um array com os itens do carrinho e o total do carrinho. O componente vai exibir a lista de itens do carrinho e o total do carrinho. O componente vai ser usado na p\u00e1gina principal da livraria, onde vamos exibir o carrinho de compras.</p> <p>Para isso, vamos criar o componente <code>CartComponent.vue</code> dentro da pasta <code>src/components</code>. O arquivo deve ficar assim:</p> ./src/components/CartComponent.vue<pre><code>&lt;script setup&gt;\ndefineProps(['cart']);\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;section class=\"cart\"&gt;\n    &lt;h2&gt;Carrinho&lt;/h2&gt;\n    &lt;table&gt;\n      &lt;thead&gt;\n        &lt;tr&gt;\n          &lt;th&gt;T\u00edtulo&lt;/th&gt;\n          &lt;th&gt;Quantidade&lt;/th&gt;\n          &lt;th&gt;Subtotal&lt;/th&gt;\n        &lt;/tr&gt;\n      &lt;/thead&gt;\n      &lt;tbody&gt;\n        &lt;tr v-for=\"book in cart.items\" :key=\"book.id\"&gt;\n          &lt;td class=\"cart-item\"&gt;\n            &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n            &lt;div class=\"cart-item-info\"&gt;\n              &lt;p class=\"cart-item-title\"&gt;{{ book.title }}&lt;/p&gt;\n              &lt;p class=\"cart-item-author\"&gt;{{ book.author }}&lt;/p&gt;\n              &lt;p class=\"cart-item-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n            &lt;/div&gt;\n          &lt;/td&gt;\n          &lt;td&gt;\n            &lt;div class=\"cart-item-quantity\"&gt;\n              &lt;button class=\"plain\"&gt;\n                &lt;span class=\"mdi mdi-minus\" /&gt;\n              &lt;/button&gt;\n              {{ book.quantity }}\n              &lt;button class=\"plain\"&gt;\n                &lt;span class=\"mdi mdi-plus\" /&gt;\n              &lt;/button&gt;\n            &lt;/div&gt;\n          &lt;/td&gt;\n          &lt;td class=\"cart-item-subtotal\"&gt;\n            R$ {{ book.price * book.quantity }}\n          &lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/tbody&gt;\n    &lt;/table&gt;\n    &lt;button class=\"outlined\"&gt;Voltar para loja&lt;/button&gt;\n    &lt;div class=\"cart-summary\"&gt;\n      &lt;div class=\"cupom\"&gt;\n        &lt;input type=\"text\" placeholder=\"C\u00f3digo do cupom\" /&gt;\n        &lt;button&gt;Inserir cupom&lt;/button&gt;\n      &lt;/div&gt;\n      &lt;div class=\"summary\"&gt;\n        &lt;h2&gt;Total da Compra&lt;/h2&gt;\n        &lt;div class=\"summary-items\"&gt;\n          &lt;span&gt;Produtos&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n          &lt;span&gt;Frete&lt;/span&gt; &lt;span&gt; Gr\u00e1tis&lt;/span&gt; &lt;span&gt;Total&lt;/span&gt;\n          &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;button&gt;Ir para pagamento&lt;/button&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/section&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.cart {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 5vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    font-size: 2rem;\n    font-weight: 700;\n    color: #27ae60;\n  }\n\n  &amp; table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 40px 0;\n\n    &amp; th,\n    td {\n      padding: 10px;\n      text-align: left;\n    }\n\n    &amp; th {\n      border-bottom: 2px solid #27ae6099;\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; td {\n      border-bottom: 1px solid rgb(128, 128, 128);\n      font-size: 1rem;\n    }\n\n    &amp; .cart-item-quantity {\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .cart-item-subtotal {\n      font-size: 1.1rem;\n      font-weight: 700;\n    }\n\n    &amp; .cart-item {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      &amp; img {\n        width: 80px;\n        height: auto;\n      }\n\n      &amp; .cart-item-info {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n\n        &amp; .cart-item-title {\n          font-size: 1.2rem;\n          font-weight: 700;\n        }\n        &amp; .cart-item-author {\n          font-size: 1rem;\n        }\n        &amp; .cart-item-price {\n          font-size: 1.1rem;\n          font-weight: 600;\n        }\n      }\n    }\n  }\n\n  &amp; .cart-summary {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n\n    &amp; .cupom {\n      display: flex;\n      align-items: center;\n      margin-top: 80px;\n      gap: 10px;\n\n      &amp; input {\n        width: 350px;\n        height: 50px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 2px solid rgb(128, 128, 128);\n        padding: 5px;\n      }\n    }\n\n    &amp; .summary {\n      border: 1px solid rgb(128, 128, 128);\n      padding: 1vw;\n\n      &amp; h2 {\n        font-size: 1.2rem;\n        font-weight: 700;\n        color: black;\n      }\n\n      &amp; .summary-items {\n        display: grid;\n        grid-template-columns: 3fr 1fr;\n\n        &amp; span {\n          padding: 10px 0;\n          border-bottom: 1px solid rgb(128, 128, 128);\n        }\n      }\n\n      &amp; button {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n&lt;/style&gt;\n</code></pre> <p>Agora, temos que importar e usar o componente <code>CartComponent</code> no arquivo <code>src/App.vue</code>. Para isso, abra o arquivo <code>src/App.vue</code> e adicione o seguinte c\u00f3digo:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport HeroBanner from '@/components/HeroBanner.vue'\nimport FeaturedComponent from '@/components/FeaturedComponent.vue'\nimport HeaderComponent from '@/components/HeaderComponent.vue'\nimport CartComponent from '@/components/CartComponent.vue'\n...\n&lt;/script&gt;\n</code></pre> <p>Tamb\u00e9m, adicione o componente <code>CartComponent</code> no template do arquivo <code>src/App.vue</code>, como no c\u00f3digo abaixo:</p> ./src/App.vue<pre><code>&lt;main v-if=\"showCart\"&gt; \n  &lt;cart-component :cart=\"cart\"/&gt;\n&lt;/main&gt;\n</code></pre> <p>Note que que na linha 79 o <code>CardComponent</code> foi adicionado dentro do bloco <code>&lt;main&gt;</code> que exibe o carrinho de compras. O componente <code>CartComponent</code> recebe a propriedade <code>cart</code>, que \u00e9 um objeto que cont\u00e9m os itens do carrinho e o total do carrinho. Veja que o valor da propriedade <code>cart</code> foi enviado via diretiva <code>v-bind</code>, que \u00e9 a forma de passar propriedades para um componente no VueJS. A diretiva <code>v-bind</code>, neste caso, foi abreviada para <code>:</code>. Assim, o valor da propriedade <code>cart</code> \u00e9 o objeto <code>cart</code> que foi declarado no bloco <code>&lt;script setup&gt;</code>.</p> <p>A vers\u00e3o completa do arquivo <code>App.vue</code> est\u00e1 no bloco abaixo.</p>  Vers\u00e3o completa <p>Note que, al\u00e9m das linhas destacadas, foi retirado o c\u00f3digo das tags <code>&lt;section&gt;</code> relativas ao hero e featured do arquivo <code>App.vue</code>. Tamb\u00e9m, foi removida a parte correspondente no bloco de <code>&lt;style&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport HeroBanner from '@/components/HeroBanner.vue'\nimport FeaturedComponent from '@/components/FeaturedComponent.vue'\nimport HeaderComponent from '@/components/HeaderComponent.vue'\nimport CartComponent from '@/components/CartComponent.vue'\n\nconst showCart = ref(false)\nconst cart = ref({\n    items: [],\n    total: 0,\n})\n\nconst books = [\n    {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n    },\n    {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n    },\n    {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n    },\n    {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n    },\n    {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n    },\n    {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n    },\n]\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header-component @click-cart=\"showCart = !showCart\" /&gt;\n  &lt;main v-if=\"showCart\"&gt;\n    &lt;cart-component :cart=\"cart\"/&gt;\n  &lt;/main&gt;\n  &lt;main v-else&gt;\n    &lt;hero-banner /&gt;\n    &lt;featured-component /&gt;\n    &lt;section class=\"books\"&gt;\n      &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n        &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n        &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n        &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n        &lt;span class=\"price-and-like\"&gt;\n          &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n          &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n        &lt;/span&gt;\n        &lt;button&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n      &lt;/article&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;footer-component /&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.books {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  padding: 5vh 8vw;\n\n  &amp; .book {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: calc(100% / 4 - 42px);\n    margin: 20px;\n\n    &amp; h2 {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n\n    &amp; .book-author {\n      font-size: 1rem;\n    }\n\n    &amp; .book-price {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; .price-and-like {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      &amp; .mdi-heart-outline {\n        font-size: 1.3rem;\n        color: #27ae60;\n      }\n    }\n  }\n}\n\nbutton {\n  background-color: #27ae60;\n  color: #fff;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 5px;\n  font-size: 1rem;\n  cursor: pointer;\n  gap: 20px;\n  display: flex;\n  justify-content: center;\n\n  &amp;.outlined {\n    background-color: transparent;\n    color: #27ae60;\n    border: 2px solid #27ae60;\n  }\n\n  &amp;.plain {\n    background-color: transparent;\n    color: black;\n    border: none;\n    cursor: pointer;\n  }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"componentes/propriedades/#melhorias-no-componente-carrinho","title":"Melhorias no componente carrinho","text":"<p>Agora que temos o componente <code>CartComponent</code> funcionando, podemos fazer algumas melhorias nele. Vamos adicionar a funcionalidade de adicionar e remover itens do carrinho, e tamb\u00e9m habilitar o bot\u00e3o de \"Voltar para a loja\". Para isso, vamos criar tr\u00eas eventos no componente <code>CartComponent</code>:</p> <ul> <li><code>increment-book</code>: evento que \u00e9 emitido quando o usu\u00e1rio clica no bot\u00e3o de adicionar item ao carrinho. Esse evento deve passar o item que foi adicionado ao carrinho.</li> <li><code>decrement-book</code>: evento que \u00e9 emitido quando o usu\u00e1rio clica no bot\u00e3o de remover item do carrinho. Esse evento deve passar o item que foi removido do carrinho.</li> <li><code>hide-cart</code>: evento que \u00e9 emitido quando o usu\u00e1rio clica no bot\u00e3o de \"Voltar para a loja\". Esse evento n\u00e3o deve passar nenhum dado.</li> </ul> <p>Para isso, vamos editar o componente <code>CartComponent.vue</code> e adicionar os eventos. O arquivo deve ficar assim:</p> ./src/components/CartComponent.vue<pre><code>&lt;script setup&gt;\ndefineProps(['cart']);\ndefineEmits(['hide-cart', 'increment-book', 'decrement-book']);\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;section class=\"cart\"&gt;\n    &lt;h2&gt;Carrinho&lt;/h2&gt;\n    &lt;table&gt;\n      &lt;thead&gt;\n        &lt;tr&gt;\n          &lt;th&gt;T\u00edtulo&lt;/th&gt;\n          &lt;th&gt;Quantidade&lt;/th&gt;\n          &lt;th&gt;Subtotal&lt;/th&gt;\n        &lt;/tr&gt;\n      &lt;/thead&gt;\n      &lt;tbody&gt;\n        &lt;tr v-for=\"book in cart.items\" :key=\"book.id\"&gt;\n          &lt;td class=\"cart-item\"&gt;\n            &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n            &lt;div class=\"cart-item-info\"&gt;\n              &lt;p class=\"cart-item-title\"&gt;{{ book.title }}&lt;/p&gt;\n              &lt;p class=\"cart-item-author\"&gt;{{ book.author }}&lt;/p&gt;\n              &lt;p class=\"cart-item-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n            &lt;/div&gt;\n          &lt;/td&gt;\n          &lt;td&gt;\n            &lt;div class=\"cart-item-quantity\"&gt;\n              &lt;button @click=\"decrementBookToCart(book)\" class=\"plain\"&gt;\n                &lt;span class=\"mdi mdi-minus\" /&gt;\n              &lt;/button&gt;\n              {{ book.quantity }}\n              &lt;button @click=\"$emit('increment-book', book)\" class=\"plain\"&gt;\n                &lt;span class=\"mdi mdi-plus\" /&gt;\n              &lt;/button&gt;\n            &lt;/div&gt;\n          &lt;/td&gt;\n          &lt;td class=\"cart-item-subtotal\"&gt;\n            R$ {{ book.price * book.quantity }}\n          &lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/tbody&gt;\n    &lt;/table&gt;\n    &lt;button @click=\"$emit('hide-cart')\" class=\"outlined\"&gt;\n      Voltar para loja\n    &lt;/button&gt;\n    &lt;div class=\"cart-summary\"&gt;\n      &lt;div class=\"cupom\"&gt;\n        &lt;input type=\"text\" placeholder=\"C\u00f3digo do cupom\" /&gt;\n        &lt;button&gt;Inserir cupom&lt;/button&gt;\n      &lt;/div&gt;\n      &lt;div class=\"summary\"&gt;\n        &lt;h2&gt;Total da Compra&lt;/h2&gt;\n        &lt;div class=\"summary-items\"&gt;\n          &lt;span&gt;Produtos&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n          &lt;span&gt;Frete&lt;/span&gt; &lt;span&gt; Gr\u00e1tis&lt;/span&gt; &lt;span&gt;Total&lt;/span&gt;\n          &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;button&gt;Ir para pagamento&lt;/button&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/section&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.cart {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 5vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    font-size: 2rem;\n    font-weight: 700;\n    color: #27ae60;\n  }\n\n  &amp; table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 40px 0;\n\n    &amp; th,\n    td {\n      padding: 10px;\n      text-align: left;\n    }\n\n    &amp; th {\n      border-bottom: 2px solid #27ae6099;\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; td {\n      border-bottom: 1px solid rgb(128, 128, 128);\n      font-size: 1rem;\n    }\n\n    &amp; .cart-item-quantity {\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .cart-item-subtotal {\n      font-size: 1.1rem;\n      font-weight: 700;\n    }\n\n    &amp; .cart-item {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      &amp; img {\n        width: 80px;\n        height: auto;\n      }\n\n      &amp; .cart-item-info {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n\n        &amp; .cart-item-title {\n          font-size: 1.2rem;\n          font-weight: 700;\n        }\n        &amp; .cart-item-author {\n          font-size: 1rem;\n        }\n        &amp; .cart-item-price {\n          font-size: 1.1rem;\n          font-weight: 600;\n        }\n      }\n    }\n  }\n\n  &amp; .cart-summary {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n\n    &amp; .cupom {\n      display: flex;\n      align-items: center;\n      margin-top: 80px;\n      gap: 10px;\n\n      &amp; input {\n        width: 350px;\n        height: 50px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 2px solid rgb(128, 128, 128);\n        padding: 5px;\n      }\n    }\n\n    &amp; .summary {\n      border: 1px solid rgb(128, 128, 128);\n      padding: 1vw;\n\n      &amp; h2 {\n        font-size: 1.2rem;\n        font-weight: 700;\n        color: black;\n      }\n\n      &amp; .summary-items {\n        display: grid;\n        grid-template-columns: 3fr 1fr;\n\n        &amp; span {\n          padding: 10px 0;\n          border-bottom: 1px solid rgb(128, 128, 128);\n        }\n      }\n\n      &amp; button {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n&lt;/style&gt;\n</code></pre> <p>Com isso, como j\u00e1 vimos anteriormente, o componente <code>CartComponent</code> emite os eventos <code>increment-book</code>, <code>decrement-book</code> e <code>hide-cart</code>. O evento <code>increment-book</code> \u00e9 emitido quando o usu\u00e1rio clica no bot\u00e3o de adicionar item ao carrinho. O evento <code>decrement-book</code> \u00e9 emitido quando o usu\u00e1rio clica no bot\u00e3o de remover item do carrinho. O evento <code>hide-cart</code> \u00e9 emitido quando o usu\u00e1rio clica no bot\u00e3o de \"Voltar para a loja\". Esses eventos s\u00e3o usados para atualizar o estado do carrinho na aplica\u00e7\u00e3o.</p> <p>Contudo, note que os eventos <code>increment-book</code> e <code>decrement-book</code> recebem tamb\u00e9m o item que foi adicionado ou removido do carrinho. Tal par\u00e2metro \u00e9 passado para o evento, e pode ser acessado no componente pai. Assim, podemos usar esses eventos para atualizar o estado do carrinho na aplica\u00e7\u00e3o.</p> <p>Agora, vamos editar o arquivo <code>src/App.vue</code> e adicionar os m\u00e9todos que v\u00e3o lidar com os eventos emitidos pelo componente <code>CartComponent</code>. O arquivo deve ficar assim:</p> ./src/App.vue<pre><code>&lt;main v-if=\"showCart\"&gt; \n  &lt;cart-component \n    :cart=\"cart\"\n    @hide-cart=\"showCart = false\"\n    @increment-book=\"incrementBookToCart\"\n    @decrement-book=\"decrementBookToCart\"\n  /&gt;\n&lt;/main&gt;\n</code></pre> <p>A vers\u00e3o completa do arquivo <code>App.vue</code> est\u00e1 no bloco abaixo.</p>  Vers\u00e3o completa ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport HeroBanner from '@/components/HeroBanner.vue'\nimport FeaturedComponent from '@/components/FeaturedComponent.vue'\nimport HeaderComponent from '@/components/HeaderComponent.vue'\nimport CartComponent from '@/components/CartComponent.vue'\n\nconst showCart = ref(false)\nconst cart = ref({\n    items: [],\n    total: 0,\n})\n\nconst books = [\n    {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n    },\n    {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n    },\n    {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n    },\n    {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n    },\n    {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n    },\n    {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n    },\n]\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header-component @click-cart=\"showCart = !showCart\" /&gt;\n  &lt;main v-if=\"showCart\"&gt;\n    &lt;cart-component\n      :cart=\"cart\"\n      @hide-cart=\"showCart = false\"\n      @increment-book=\"incrementBookToCart\"\n      @decrement-book=\"decrementBookToCart\"\n    /&gt;\n  &lt;/main&gt;\n  &lt;main v-else&gt;\n    &lt;hero-banner /&gt;\n    &lt;featured-component /&gt;\n    &lt;section class=\"books\"&gt;\n      &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n        &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n        &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n        &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n        &lt;span class=\"price-and-like\"&gt;\n          &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n          &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n        &lt;/span&gt;\n        &lt;button&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n      &lt;/article&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;footer-component /&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.books {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  padding: 5vh 8vw;\n\n  &amp; .book {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: calc(100% / 4 - 42px);\n    margin: 20px;\n\n    &amp; h2 {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n\n    &amp; .book-author {\n      font-size: 1rem;\n    }\n\n    &amp; .book-price {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; .price-and-like {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      &amp; .mdi-heart-outline {\n        font-size: 1.3rem;\n        color: #27ae60;\n      }\n    }\n  }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"componentes/replicando-criacao-componentes-simples/","title":"Replicando criacao componentes simples","text":""},{"location":"componentes/replicando-criacao-componentes-simples/#replicando-em-outros-componentes","title":"Replicando em outros componentes","text":"<p>Com as mesmas caracter\u00edsticas do componente do rodap\u00e9, temos duas outras partes da aplica\u00e7\u00e3o que podem ser transformadas em componentes: o hero banner e a se\u00e7\u00e3o de destaque. Vamos criar esses dois componentes e replicar a estrutura do componente do rodap\u00e9.</p>"},{"location":"componentes/replicando-criacao-componentes-simples/#componente-do-hero-banner","title":"Componente do hero banner","text":"<p>Primeiro, vamos criar o componente do hero banner. Para isso, crie o arquivo <code>HeroBanner.vue</code> na pasta <code>src/components</code> e adicione o seguinte c\u00f3digo:</p> ./src/components/HeroBanner.vue<pre><code>&lt;template&gt;\n  &lt;section class=\"hero\"&gt;\n    &lt;div class=\"hero-content\"&gt;\n      &lt;h3 class=\"outlined\"&gt;Livro destaque&lt;/h3&gt;\n      &lt;h2&gt;Noc Ognia&lt;/h2&gt;\n      &lt;p&gt;\n        Noc ognia \u00e9 um romance de Erich-Emmanuel Schmitt, que narra a hist\u00f3ria\n        de um homem que vive em um mundo onde as pessoas n\u00e3o podem mais sonhar.\n        O livro \u00e9 uma reflex\u00e3o sobre a import\u00e2ncia dos sonhos e da imagina\u00e7\u00e3o na\n        vida humana. Erich-Emmanuel Schmitt \u00e9 um autor franc\u00eas conhecido por\n        suas obras que exploram temas filos\u00f3ficos e existenciais. Ele \u00e9 um dos\n        autores mais traduzidos da Fran\u00e7a e suas obras t\u00eam sido amplamente\n        elogiadas pela cr\u00edtica.\n      &lt;/p&gt;\n      &lt;button&gt;Acessar p\u00e1gina do livro&lt;/button&gt;\n    &lt;/div&gt;\n    &lt;div class=\"hero-image\"&gt;\n      &lt;img src=\"/hero.png\" alt=\"Hero Image\" /&gt;\n    &lt;/div&gt;\n  &lt;/section&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.hero {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5vh 9vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    color: #382c2c;\n    font-size: 3rem;\n    font-weight: 700;\n  }\n\n  &amp; .hero-content {\n    width: 50%;\n    padding-right: 20px;\n    font-weight: 400;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 20px;\n\n    &amp; h3.outlined {\n      background-color: transparent;\n      color: #27ae60;\n      border: 2px solid #27ae60;\n      padding: 15px 20px;\n      border-radius: 5px;\n      font-size: 1rem;\n    }\n\n    &amp; button {\n      margin-top: 20px;\n    }\n\n    p {\n      width: 70%;\n    }\n  }\n\n  &amp; .hero-image {\n    width: 50%;\n    text-align: right;\n    padding-right: 4vw;\n\n    &amp; img {\n      max-width: 100%;\n      height: auto;\n    }\n  }\n}\n&lt;/style&gt;\n</code></pre> <p>Note que tamb\u00e9m esse c\u00f3digo foi copiado do arquivo <code>App.vue</code>.</p>"},{"location":"componentes/replicando-criacao-componentes-simples/#componente-de-destaque","title":"Componente de destaque","text":"<p>O mesmo, agora, faremos com a se\u00e7\u00e3o de destaque. Para isso, crie o arquivo <code>FeaturedComponent.vue</code> na pasta <code>src/components</code> e adicione o seguinte c\u00f3digo:</p> ./src/components/FeaturedComponent.vue<pre><code>&lt;template&gt;\n  &lt;section class=\"featured\"&gt;\n    &lt;div&gt;\n      &lt;span class=\"mdi mdi-truck\"&gt;&lt;/span&gt;\n      &lt;h2&gt;Frete gr\u00e1tis para SC&lt;/h2&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n      &lt;span class=\"mdi mdi-star\"&gt;&lt;/span&gt;\n      &lt;h2&gt;Livros recomendados&lt;/h2&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n      &lt;span class=\"mdi mdi-book-open-page-variant\"&gt;&lt;/span&gt;\n      &lt;h2&gt;Mais vendidos&lt;/h2&gt;\n    &lt;/div&gt;\n  &lt;/section&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.featured {\n  display: flex;\n  padding: 3vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; div {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    justify-content: center;\n    gap: 10px;\n\n    &amp; span {\n      font-size: 2rem;\n    }\n\n    &amp; h2 {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n  }\n\n  &amp; article:nth-child(2) {\n    border-left: 1px solid #27ae6099;\n    border-right: 1px solid #27ae6099;\n  }\n}\n&lt;/style&gt;\n</code></pre> <p>Novamente, o c\u00f3digo acima foi copiado do arquivo <code>App.vue</code>.</p>"},{"location":"componentes/replicando-criacao-componentes-simples/#aplicacao-dos-componentes","title":"Aplica\u00e7\u00e3o dos componentes","text":"<p>Agora, vamos importar os componentes no arquivo <code>App.vue</code> e us\u00e1-los. Para isso, abra o arquivo <code>src/App.vue</code> e adicione o seguinte c\u00f3digo:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport HeroBanner from '@/components/HeroBanner.vue'\nimport FeaturedComponent from '@/components/FeaturedComponent.vue'\n...\n&lt;/script&gt;\n</code></pre> <p>Tamb\u00e9m, ser\u00e1 preciso alterar o bloco de <code>&lt;template&gt;</code> para substituir o c\u00f3digo do hero banner e da se\u00e7\u00e3o de destaque pelos componentes que acabamos de criar. O c\u00f3digo do arquivo <code>src/App.vue</code> ficar\u00e1 assim:</p> ./src/App.vue<pre><code>  &lt;/main&gt;\n  &lt;main v-else&gt;\n    &lt;hero-banner /&gt;\n    &lt;featured-component /&gt;\n    &lt;section class=\"books\"&gt;\n</code></pre> <p>A vers\u00e3o completa do arquivo <code>App.vue</code> est\u00e1 no bloco abaixo.</p>  Vers\u00e3o completa <p>Note que, al\u00e9m das linhas destacadas, foi retirado o c\u00f3digo das tags <code>&lt;section&gt;</code> relativas ao hero e featured do arquivo <code>App.vue</code>. Tamb\u00e9m, foi removida a parte correspondente no bloco de <code>&lt;style&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\n\nimport FooterComponent from '@/components/FooterComponent.vue'\nimport HeroBanner from '@/components/HeroBanner.vue'\nimport FeaturedComponent from '@/components/FeaturedComponent.vue'\n\nconst showCart = ref(false)\nconst cart = ref({\n    items: [],\n    total: 0,\n})\n\nconst books = [\n    {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n    },\n    {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n    },\n    {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n    },\n    {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n    },\n    {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n    },\n    {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n    },\n]\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;h1&gt;\n        &lt;a href=\"#\"&gt;\n          IFbooks\n          &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n        &lt;/a&gt;\n      &lt;/h1&gt;\n      &lt;div class=\"search-wrapper\"&gt;\n        &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n      &lt;/div&gt;\n      &lt;ul&gt;\n        &lt;li&gt;Termos&lt;/li&gt;\n        &lt;li&gt;Equipe&lt;/li&gt;\n        &lt;li&gt;Envio&lt;/li&gt;\n        &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;ul class=\"icons\"&gt;\n        &lt;li @click=\"showCart = !showCart\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n  &lt;main v-if=\"showCart\"&gt;\n    &lt;section class=\"cart\"&gt;\n      &lt;h2&gt;Carrinho&lt;/h2&gt;\n      &lt;table&gt;\n        &lt;thead&gt;\n          &lt;tr&gt;\n            &lt;th&gt;T\u00edtulo&lt;/th&gt;\n            &lt;th&gt;Quantidade&lt;/th&gt;\n            &lt;th&gt;Subtotal&lt;/th&gt;\n          &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n          &lt;tr v-for=\"book in cart.items\" :key=\"book.id\"&gt;\n            &lt;td class=\"cart-item\"&gt;\n              &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n              &lt;div class=\"cart-item-info\"&gt;\n                &lt;p class=\"cart-item-title\"&gt;{{ book.title }}&lt;/p&gt;\n                &lt;p class=\"cart-item-author\"&gt;{{ book.author }}&lt;/p&gt;\n                &lt;p class=\"cart-item-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n              &lt;div class=\"cart-item-quantity\"&gt;\n                &lt;button class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-minus\" /&gt;\n                &lt;/button&gt;\n                {{ book.quantity }}\n                &lt;button class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-plus\" /&gt;\n                &lt;/button&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td class=\"cart-item-subtotal\"&gt;R$ {{ book.price * book.quantity }}&lt;/td&gt;\n          &lt;/tr&gt;\n        &lt;/tbody&gt;\n      &lt;/table&gt;\n      &lt;button @click=\"showCart = false\" class=\"outlined\"&gt;Voltar para loja&lt;/button&gt;\n      &lt;div class=\"cart-summary\"&gt;\n        &lt;div class=\"cupom\"&gt;\n          &lt;input type=\"text\" placeholder=\"C\u00f3digo do cupom\" /&gt;\n          &lt;button&gt;Inserir cupom&lt;/button&gt;\n        &lt;/div&gt;\n        &lt;div class=\"summary\"&gt;\n          &lt;h2&gt;Total da Compra&lt;/h2&gt;\n          &lt;div class=\"summary-items\"&gt;\n            &lt;span&gt;Produtos&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt; &lt;span&gt;Frete&lt;/span&gt;\n            &lt;span&gt; Gr\u00e1tis&lt;/span&gt; &lt;span&gt;Total&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n          &lt;/div&gt;\n          &lt;button&gt;Ir para pagamento&lt;/button&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;main v-else&gt;\n    &lt;hero-banner /&gt;\n    &lt;featured-component /&gt;\n    &lt;section class=\"books\"&gt;\n      &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n        &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n        &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n        &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n        &lt;span class=\"price-and-like\"&gt;\n          &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n          &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n        &lt;/span&gt;\n        &lt;button&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n      &lt;/article&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;footer-component /&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h1 {\n    font-size: 1.3rem;\n    color: #000;\n\n    &amp; a {\n      text-decoration: none;\n      color: #000;\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .logo-title {\n      border-left: 1px solid #27ae6099;\n      font-size: 0.8rem;\n      margin-left: 10px;\n      padding-left: 10px;\n      color: #27ae6099;\n      width: 100px;\n      line-height: 1rem;\n    }\n  }\n\n  &amp; input {\n    width: 400px;\n    height: 40px;\n    border-radius: 5px;\n    font-size: 1rem;\n    border: 0;\n    background-color: #f1f1f1;\n    padding: 5px;\n  }\n\n  &amp; ul {\n    display: flex;\n  }\n\n  &amp; ul li {\n    list-style: none;\n    margin: 0 10px;\n    font-size: 1rem;\n  }\n\n  &amp; .icons li {\n    color: #27ae60;\n    font-size: 1.3rem;\n  }\n\n  &amp; .search-wrapper {\n    position: relative;\n  }\n\n  &amp; .search-wrapper::before {\n    content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n    font-family: 'Material Design Icons';\n    font-size: 1.2rem;\n    position: absolute;\n    right: 0.75rem;\n    top: 50%;\n    transform: translateY(-50%);\n    pointer-events: none;\n  }\n\n  &amp; .search {\n    padding-right: 2rem;\n  }\n}\n\n.books {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  padding: 5vh 8vw;\n\n  &amp; .book {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: calc(100% / 4 - 42px);\n    margin: 20px;\n\n    &amp; h2 {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n\n    &amp; .book-author {\n      font-size: 1rem;\n    }\n\n    &amp; .book-price {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; .price-and-like {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      &amp; .mdi-heart-outline {\n        font-size: 1.3rem;\n        color: #27ae60;\n      }\n    }\n  }\n}\n\n.cart {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 5vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    font-size: 2rem;\n    font-weight: 700;\n    color: #27ae60;\n  }\n\n  &amp; table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 40px 0;\n\n    &amp; th,\n    td {\n      padding: 10px;\n      text-align: left;\n    }\n\n    &amp; th {\n      border-bottom: 2px solid #27ae6099;\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; td {\n      border-bottom: 1px solid rgb(128, 128, 128);\n      font-size: 1rem;\n    }\n\n    &amp; .cart-item-quantity {\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .cart-item-subtotal {\n      font-size: 1.1rem;\n      font-weight: 700;\n    }\n\n    &amp; .cart-item {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      &amp; img {\n        width: 80px;\n        height: auto;\n      }\n\n      &amp; .cart-item-info {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n\n        &amp; .cart-item-title {\n          font-size: 1.2rem;\n          font-weight: 700;\n        }\n        &amp; .cart-item-author {\n          font-size: 1rem;\n        }\n        &amp; .cart-item-price {\n          font-size: 1.1rem;\n          font-weight: 600;\n        }\n      }\n    }\n  }\n\n  &amp; .cart-summary {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n\n    &amp; .cupom {\n      display: flex;\n      align-items: center;\n      margin-top: 80px;\n      gap: 10px;\n\n      &amp; input {\n        width: 350px;\n        height: 50px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 2px solid rgb(128, 128, 128);\n        padding: 5px;\n      }\n    }\n\n    &amp; .summary {\n      border: 1px solid rgb(128, 128, 128);\n      padding: 1vw;\n\n      &amp; h2 {\n        font-size: 1.2rem;\n        font-weight: 700;\n        color: black;\n      }\n\n      &amp; .summary-items {\n        display: grid;\n        grid-template-columns: 3fr 1fr;\n\n        &amp; span {\n          padding: 10px 0;\n          border-bottom: 1px solid rgb(128, 128, 128);\n        }\n      }\n\n      &amp; button {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n\nbutton {\n  background-color: #27ae60;\n  color: #fff;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 5px;\n  font-size: 1rem;\n  cursor: pointer;\n  gap: 20px;\n  display: flex;\n  justify-content: center;\n\n  &amp;.outlined {\n    background-color: transparent;\n    color: #27ae60;\n    border: 2px solid #27ae60;\n  }\n\n  &amp;.plain {\n    background-color: transparent;\n    color: black;\n    border: none;\n    cursor: pointer;\n  }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"componentes/replicando-criacao-componentes-simples/#as-configuracoes-de-css","title":"As configura\u00e7\u00f5es de CSS","text":"<p>Note que, com essas altera\u00e7\u00f5es, o estilo CSS dos bot\u00f5es n\u00e3o foram colocados nos novos componentes, por isso a visualiza\u00e7\u00e3o pode estar diferente. Para resolver isso, vamos colocar todos os estilos CSS dos bot\u00f5es no arquivo <code>src/assets/main.css</code> (pode remover do arquivo <code>src/App.vue</code>). Para isso, abra o arquivo <code>src/assets/main.css</code> e deixe o c\u00f3digo como abaixo:</p> ./src/assets/main.css<pre><code>@import './base.css';\n\nhtml {\n  font-size: clamp(1rem, 1.5vw, 1.2rem);\n  line-height: 1.5;\n}\n\nbutton {\n  background-color: #27ae60;\n  color: #fff;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 5px;\n  font-size: 1rem;\n  cursor: pointer;\n  gap: 20px;\n  display: flex;\n  justify-content: center;\n  &amp;.outlined {\n    background-color: transparent;\n    color: #27ae60;\n    border: 2px solid #27ae60;\n  }\n  &amp;.plain {\n    background-color: transparent;\n    color: black;\n    border: none;\n    cursor: pointer;\n  }\n}\n</code></pre>"},{"location":"listas/","title":"Renderiza\u00e7\u00e3o de listas","text":"<p>O uso de listas \u00e9 muito comum em aplica\u00e7\u00f5es web. Em geral, as listas s\u00e3o geradas a partir de dados que s\u00e3o obtidos de um servidor. Sempre que precisamos renderizar uma lista de dados, precisamos de um mecanismo que nos permita iterar sobre os dados e gerar um elemento para cada item da lista. O VueJS oferece uma forma simples de renderizar listas de dados.</p> <p>Alguns exemplos de listas s\u00e3o:</p> <ul> <li>Lista de produtos</li> <li>Lista de usu\u00e1rios</li> <li>Lista de tarefas</li> <li>Lista de cidades</li> <li>Lista de pa\u00edses</li> </ul> <p>De forma geral, os dados em listas podem estar em um array ou em um objeto. Em um array, os dados s\u00e3o indexados por n\u00fameros. Em um objeto, os dados s\u00e3o indexados por chaves. Ainda, no caso dos arrays, podemos ter dados um array simples, como um array de strings, ou um array de objetos.</p> <p>A manipula\u00e7\u00e3o de listas \u00e9 um dos recursos mais importantes do VueJS. Nessa aula, vamos aprender a renderizar listas de dados.</p>"},{"location":"listas/#renderizacao-dos-elementos-de-listas","title":"Renderiza\u00e7\u00e3o dos elementos de listas","text":"<p>Nessa aula, vamos aprender a renderizar listas de dados. Usamos esse termo para descrever a renderiza\u00e7\u00e3o de arrays e objetos, bem como arrays de objetos.</p>"},{"location":"listas/#renderizacao-de-arrays-de-strings","title":"Renderiza\u00e7\u00e3o de arrays de strings","text":"<p>Para isso, inicialmente vamos criar um array de strings e renderizar cada item da lista em uma tag <code>&lt;li&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  const items = ['Item 1', 'Item 2', 'Item 3'];\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"(item, index) in items\" :key=\"index\"&gt;{{ item }}&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre> <p>Neste exemplo, o array <code>items</code> cont\u00e9m tr\u00eas strings. A diretiva <code>v-for</code> \u00e9 usada para iterar sobre os itens do array. A vari\u00e1vel <code>item</code> \u00e9 usada para referenciar cada item da lista. A sintaxe <code>v-for=\"item in items\"</code> \u00e9 equivalente a <code>v-for=\"(item, index) in items\"</code>. O segundo par\u00e2metro da diretiva <code>v-for</code> \u00e9 o \u00edndice do item na lista. O \u00edndice \u00e9 opcional e pode ser omitido. Contudo, como precisamos de um valor \u00fanico para a propriedade <code>key</code>, vamos usar o \u00edndice do item na lista.</p> <p>A propriedade <code>key</code> \u00e9 usada pelo VueJS para identificar cada item da lista e \u00e9 obrigat\u00f3ria quando usamos a diretiva <code>v-for</code>. Sem a propriedade <code>key</code>, o VueJS n\u00e3o consegue identificar cada item da lista e n\u00e3o consegue atualizar corretamente a lista quando os dados s\u00e3o alterados.</p> <p>Para refor\u00e7ar os conceitos, \u00e9 importante entender que o elemento <code>&lt;li&gt;</code> \u00e9 renderizado uma vez para cada item da lista. O VueJS renderiza o elemento <code>&lt;li&gt;</code> e, em seguida, atualiza o conte\u00fado do elemento com o valor do item da lista. No exemplo, o elemento <code>&lt;li&gt;</code> \u00e9 renderizado tr\u00eas vezes. A primeira vez, o conte\u00fado do elemento \u00e9 atualizado com o valor do primeiro item da lista. A segunda vez, o conte\u00fado do elemento \u00e9 atualizado com o valor do segundo item da lista. A terceira vez, o conte\u00fado do elemento \u00e9 atualizado com o valor do terceiro item da lista.</p> <p>Por fim, fizemos a itera\u00e7\u00e3o no elemento <code>&lt;li&gt;</code>, mas poder\u00edamos ter feito com qualquer outro elemento ou mesmo com um componente. Por exemplo, poder\u00edamos ter feito a itera\u00e7\u00e3o no elemento <code>&lt;p&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  const items = ['Item 1', 'Item 2', 'Item 3'];\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;p v-for=\"(item, index) in items\" :key=\"index\"&gt;{{ item }}&lt;/p&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"listas/#renderizacao-de-arrays-de-objetos","title":"Renderiza\u00e7\u00e3o de arrays de objetos","text":"<p>Vamos agora renderizar uma lista de objetos. Para isso, vamos criar um array de objetos e renderizar cada item da lista em uma tag <code>&lt;li&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  const items = [\n    { id: 1, name: 'Item 1' },\n    { id: 2, name: 'Item 2' },\n    { id: 3, name: 'Item 3' },\n  ];\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"item in items\" :key=\"item.id\"&gt;{{ item.name }}&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre> <p>Neste exemplo, o array <code>items</code> cont\u00e9m tr\u00eas objetos. A diretiva <code>v-for</code> \u00e9 usada para iterar sobre os itens do array. A vari\u00e1vel <code>item</code> \u00e9 usada para referenciar cada item da lista. A sintaxe <code>v-for=\"item in items\"</code> \u00e9 equivalente a <code>v-for=\"(item, index) in items\"</code>. Contudo, como n\u00e3o precisamos do \u00edndice do item na lista, vamos usar a sintaxe mais simples. Por\u00e9m, ainda precisamos de um valor \u00fanico para a propriedade <code>key</code> e, neste caso, usaremos o valor da propriedade <code>id</code> do objeto.</p> <p>Neste exemplo, o elemento <code>&lt;li&gt;</code> \u00e9 renderizado tr\u00eas vezes. A primeira vez, o conte\u00fado do elemento \u00e9 atualizado com o valor da propriedade <code>name</code> do primeiro item da lista. A segunda vez, o conte\u00fado do elemento \u00e9 atualizado com o valor da propriedade <code>name</code> do segundo item da lista. A terceira vez, o conte\u00fado do elemento \u00e9 atualizado com o valor da propriedade <code>name</code> do terceiro item da lista.</p> <p>Por fim, fizemos a itera\u00e7\u00e3o no elemento <code>&lt;li&gt;</code>, mas poder\u00edamos ter feito com qualquer outro elemento ou mesmo com um componente. Por exemplo, poder\u00edamos ter feito a itera\u00e7\u00e3o no elemento <code>&lt;div&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  const items = [\n    { id: 1, name: 'Item 1' },\n    { id: 2, name: 'Item 2' },\n    { id: 3, name: 'Item 3' },\n  ];\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;div v-for=\"item in items\" :key=\"item.id\"&gt;\n    &lt;p&gt;{{ item.name }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"listas/#renderizacao-de-objetos","title":"Renderiza\u00e7\u00e3o de objetos","text":"<p>Vamos agora renderizar um objeto. Para isso, vamos criar um objeto e renderizar cada propriedade do objeto em uma tag <code>&lt;li&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  const items = {\n    id: 1,\n    description: 'Item 1',\n    price: 10.0,\n  };\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"(value, key) in items\" :key=\"key\"&gt;{{ key }}: {{ value }}&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre> <p>Neste exemplo, o objeto <code>items</code> cont\u00e9m tr\u00eas propriedades. A diretiva <code>v-for</code> \u00e9 usada para iterar sobre as propriedades do objeto. As vari\u00e1veis <code>value</code> e <code>key</code> s\u00e3o usadas para referenciar o valor e a chave de cada propriedade do objeto. A sintaxe <code>v-for=\"(value, key) in items\"</code> \u00e9 equivalente a <code>v-for=\"(value, key, index) in items\"</code>. Contudo, como n\u00e3o precisamos do \u00edndice do item na lista, vamos usar a sintaxe mais simples. Por\u00e9m, ainda precisamos de um valor \u00fanico para a propriedade <code>key</code> e, neste caso, usaremos a pr\u00f3pria chave da propriedade.</p> <p>Neste exemplo, o elemento <code>&lt;li&gt;</code> \u00e9 renderizado tr\u00eas vezes. A primeira vez, o conte\u00fado do elemento \u00e9 atualizado com o valor da propriedade <code>id</code> do objeto. A segunda vez, o conte\u00fado do elemento \u00e9 atualizado com o valor da propriedade <code>description</code> do objeto. A terceira vez, o conte\u00fado do elemento \u00e9 atualizado com o valor da propriedade <code>price</code> do objeto.</p> <p>O resultado da renderiza\u00e7\u00e3o \u00e9 o seguinte:</p> <pre><code>&lt;ul&gt;\n  &lt;li&gt;description: Item 1&lt;/li&gt;\n  &lt;li&gt;price: 10&lt;/li&gt;\n  &lt;li&gt;id: 1&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>Este exemplo \u00e9 um pouco diferente dos exemplos anteriores. No exemplo anterior, o objeto <code>items</code> era iterado e cada item da lista era renderizado em um elemento <code>&lt;li&gt;</code>. Neste exemplo, o objeto <code>items</code> \u00e9 iterado e cada propriedade do objeto \u00e9 renderizada em um elemento <code>&lt;li&gt;</code>. Por isso, o resultado da renderiza\u00e7\u00e3o \u00e9 diferente.</p> <p>Por fim, fizemos a itera\u00e7\u00e3o no elemento <code>&lt;li&gt;</code>, mas poder\u00edamos ter feito com qualquer outro elemento ou mesmo com um componente. Por exemplo, poder\u00edamos ter feito a itera\u00e7\u00e3o no elemento <code>&lt;p&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  const items = {\n    id: 1,\n    description: 'Item 1',\n    price: 10.0,\n  };\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;p v-for=\"(value, key) in items\" :key=\"key\"&gt;{{ key }}: {{ value }}&lt;/p&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"listas/#renderizacao-de-arrays-de-objetos-com-objetos-aninhados","title":"Renderiza\u00e7\u00e3o de arrays de objetos com objetos aninhados","text":"<p>Vamos agora renderizar uma lista de objetos que cont\u00e9m objetos aninhados. Para isso, vamos criar um array de objetos e renderizar cada item da lista em uma tag <code>&lt;li&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  const items = [\n    {\n      id: 1,\n      name: 'Item 1',\n      details: { description: 'Item 1 description', price: 10.0 },\n    },\n    {\n      id: 2,\n      name: 'Item 2',\n      details: { description: 'Item 2 description', price: 20.0 },\n    },\n    {\n      id: 3,\n      name: 'Item 3',\n      details: { description: 'Item 3 description', price: 30.0 },\n    },\n  ];\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"item in items\" :key=\"item.id\"&gt;\n      &lt;p&gt;{{ item.name }}&lt;/p&gt;\n      &lt;p&gt;{{ item.details.description }}&lt;/p&gt;\n      &lt;p&gt;{{ item.details.price }}&lt;/p&gt;\n    &lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre> <p>Neste exemplo, o array <code>items</code> cont\u00e9m tr\u00eas objetos. A diretiva <code>v-for</code> \u00e9 usada para iterar sobre os itens do array. A vari\u00e1vel <code>item</code> \u00e9 usada para referenciar cada item da lista.</p> <p>Poder\u00edamos ter feito duas itera\u00e7\u00f5es. A primeira itera\u00e7\u00e3o seria para iterar sobre os itens do array e a segunda itera\u00e7\u00e3o seria para iterar sobre as propriedades do objeto. Veja o exemplo a seguir:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  const items = [\n    {\n      id: 1,\n      name: 'Item 1',\n      details: { description: 'Item 1 description', price: 10.0 },\n    },\n    {\n      id: 2,\n      name: 'Item 2',\n      details: { description: 'Item 2 description', price: 20.0 },\n    },\n    {\n      id: 3,\n      name: 'Item 3',\n      details: { description: 'Item 3 description', price: 30.0 },\n    },\n  ];\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"item in items\" :key=\"item.id\"&gt;\n      &lt;p&gt;Nome: {{ item.name }}&lt;/p&gt;\n      &lt;p&gt;Detalhes&lt;/p&gt;\n      &lt;p v-for=\"(value, key) in item.details\" :key=\"key\"&gt;\n        {{ key }}: {{ value }}\n      &lt;/p&gt;\n    &lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"listas/#manipulacao-de-listas","title":"Manipula\u00e7\u00e3o de listas","text":"<p>\u00c9 comum precisarmos adicionar, remover ou atualizar elementos de uma lista. O VueJS oferece uma forma simples de manipular listas de dados.</p>"},{"location":"listas/#adicionando-elementos","title":"Adicionando elementos","text":"<p>Para adicionar um elemento a uma lista, basta usar o m\u00e9todo <code>push</code> do array. O m\u00e9todo <code>push</code> adiciona um elemento ao final do array. Veja o exemplo abaixo:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { ref } from 'vue'\n\n  const novoItem = ref('')\n  const listaCompras = ref(['arroz', 'batata', 'feij\u00e3o'])\n\n  function adicionar {\n    listaCompras.value.push(novoItem.value)\n    novoItem.value = ''\n  }\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;input type=\"text\" v-model=\"novoItem\" /&gt;\n  &lt;button @click=\"adicionar\"&gt;Adicionar&lt;/button&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"item in listaCompras\"&gt;{{ item }&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre> <p>Note uma diferen\u00e7a importante entre o exemplo acima e o exemplo da aula anterior. No exemplo anterior, a lista de compras era uma constante. Agora, a lista de compras \u00e9 uma vari\u00e1vel reativa. Isso significa que, sempre que o valor da vari\u00e1vel <code>listaCompras</code> for alterado, o VueJS vai atualizar a lista de compras na tela.</p> <p>Para isso, precisamos usar a fun\u00e7\u00e3o <code>ref</code> do VueJS. A fun\u00e7\u00e3o <code>ref</code> cria uma vari\u00e1vel reativa. A vari\u00e1vel reativa \u00e9 um objeto que cont\u00e9m o valor da vari\u00e1vel e uma propriedade <code>value</code>. A propriedade <code>value</code> cont\u00e9m o valor da vari\u00e1vel. Por exemplo, a vari\u00e1vel <code>novoItem</code> \u00e9 uma vari\u00e1vel reativa. A vari\u00e1vel <code>novoItem</code> cont\u00e9m a propriedade <code>value</code>. A propriedade <code>value</code> cont\u00e9m o valor da vari\u00e1vel <code>novoItem</code>. Veja o exemplo abaixo:</p>"},{"location":"listas/#removendo-elementos","title":"Removendo elementos","text":"<p>Para remover um elemento de uma lista, basta usar o m\u00e9todo <code>splice</code> do array. O m\u00e9todo <code>splice</code> recebe dois par\u00e2metros: o \u00edndice do elemento a ser removido e a quantidade de elementos a serem removidos. Veja o exemplo abaixo:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { ref } from 'vue';\n\n  const listaCompras = ref(['arroz', 'batata', 'feij\u00e3o']);\n\n  function remover(index) {\n    listaCompras.value.splice(index, 1);\n  }\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"(item, index) in listaCompras\"&gt;\n      {{ item }}&lt;button @click=\"remover(index)\"&gt;Remover&lt;/button&gt;\n    &lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"listas/#atualizando-elementos","title":"Atualizando elementos","text":"<p>Para atualizar um elemento de uma lista, basta atribuir um novo valor ao elemento. Vamos usar como exemplo, um array de objetos. Veja o exemplo abaixo:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { ref } from 'vue';\n\n  const listaCompras = ref([\n    { nome: 'arroz', quantidade: 1 },\n    { nome: 'batata', quantidade: 2 },\n    { nome: 'feij\u00e3o', quantidade: 3 },\n  ]);\n\n  function incrementar(index) {\n    listaCompras.value[index].quantidade++;\n  }\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"(item, index) in listaCompras\"&gt;\n      {{ item.nome }} - {{ item.quantidade }}\n      &lt;button @click=\"incrementar(index)\"&gt;Incrementar&lt;/button&gt;\n    &lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre> <p>Neste exemplo, a lista de compras \u00e9 um array de objetos. Cada objeto representa um item da lista de compras. Cada item da lista de compras possui duas propriedades: <code>nome</code> e <code>quantidade</code>. Para atualizar a quantidade de um item, basta incrementar a propriedade <code>quantidade</code> do item.</p>"},{"location":"listas/#exercicios","title":"Exerc\u00edcios","text":"<p>Para fixar o conte\u00fado, vamos resolver alguns exerc\u00edcios.</p>"},{"location":"listas/#exercicio-1","title":"Exerc\u00edcio 1","text":"<p>Fa\u00e7a uma tela que renderize uma lista de cidades. O componente deve receber um array de cidades como propriedade. A lista deve ser renderizada em um elemento <code>ul</code>. Cada item da lista deve ser renderizado em um elemento <code>li</code>. As cidades iniciais devem ser:</p> <pre><code>[\n  'S\u00e3o Paulo',\n  'Rio de Janeiro',\n  'Belo Horizonte',\n  'Salvador',\n  'Fortaleza',\n  'Curitiba',\n  'Manaus',\n  'Recife',\n  'Porto Alegre',\n  'Bras\u00edlia',\n];\n</code></pre>"},{"location":"listas/#exercicio-2","title":"Exerc\u00edcio 2","text":"<p>Usando o mesmo Array do exerc\u00edcio anterior, deve ser renderizada uma lista deve ser renderizada em ordem alfab\u00e9tica. A lista deve ser renderizada em um elemento <code>ul</code>. Cada item da lista deve ser renderizado em um elemento <code>li</code>. Dica: para ordenar um array, voc\u00ea pode usar o m\u00e9todo <code>sort</code> do array, preferencialmente em uma propriedade computada.</p>"},{"location":"listas/#exercicio-3","title":"Exerc\u00edcio 3","text":"<p>Neste exerc\u00edcio voc\u00ea deve criar uma lista de not\u00edcias (newsletter), contendo <code>t\u00edtulo</code>, <code>data</code>, <code>resumo da not\u00edcia</code>, <code>link da not\u00edcia</code> e, opcionalmente, a <code>imagem da not\u00edcia</code>. Deve haver um bot\u00e3o que, quando clicado, direcionar\u00e1 para a p\u00e1gina da not\u00edcia, abrindo o link em uma nova aba. Note que voc\u00ea deve abrir a url que est\u00e1 informada na chave <code>link</code> do objeto.</p> <p>Dica 1: como o link est\u00e1 numa vari\u00e1vel e voc\u00ea precisa atribuir esse valor para o atributo <code>href</code> da tag <code>a</code>, voc\u00ea pode usar a diretiva v-bind para fazer isso.</p> <p>Dica 2: para as imagens voc\u00ea pode apenas usar o endere\u00e7o p\u00fablico da Internet de uma imagem.</p> <p>Abaixo, um exemplo de como o objeto de not\u00edcias pode ser estruturado:</p> <pre><code>noticias = [\n  {\n    titulo: 'T\u00edtulo 1',\n    data: '01/01/2023',\n    resumo: 'Resumo da not\u00edcia 1',\n    link: 'https://www.google.com',\n    imagem: 'https://placehold.co/600x400.png',\n  },\n  {\n    titulo: 'T\u00edtulo 2',\n    data: '02/01/2023',\n    resumo: 'Resumo da not\u00edcia 2',\n    link: 'https://www.google.com',\n    imagem: 'https://placehold.co/600x400.png',\n  },\n];\n</code></pre>"},{"location":"listas/#correcao-dos-exercicios","title":"Corre\u00e7\u00e3o dos exerc\u00edcios","text":"<p>Faremos a corre\u00e7\u00e3o dos exerc\u00edcios usando a API de composi\u00e7\u00e3o. Vamos, al\u00e9m disso, corrigir todos os itens num s\u00f3 exemplo. Sugiro que voc\u00ea tente resolver os exerc\u00edcios antes de ver a corre\u00e7\u00e3o. A corre\u00e7\u00e3o \u00e9 apenas uma sugest\u00e3o de como voc\u00ea pode resolver os exerc\u00edcios. N\u00e3o \u00e9 a \u00fanica forma de resolver os exerc\u00edcios.</p> <p>Aviso</p> <p>Importante: N\u00e3o foi apresentada a corre\u00e7\u00e3o do exerc\u00edcio 3, referente \u00e0 lista de not\u00edcias (newsletter).</p> Corre\u00e7\u00e3o dos exerc\u00edcios ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { computed, ref } from 'vue';\n\n  const cidade = ref('');\n  const cidades = ref([\n    'S\u00e3o Paulo',\n    'Rio de Janeiro',\n    'Belo Horizonte',\n    'Salvador',\n    'Fortaleza',\n    'Curitiba',\n    'Manaus',\n    'Recife',\n    'Porto Alegre',\n    'Bras\u00edlia',\n  ]);\n\n  const cidadesOrdenadas = computed(() =&gt; [...cidades.value].sort());\n\n  function adicionarCidade() {\n    cidades.value.push(cidade.value);\n    cidade.value = '';\n  }\n\n  function removerCidade(index) {\n    cidades.value.splice(index, 1);\n  }\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div class=\"correcao\"&gt;\n    &lt;h1&gt;Corre\u00e7\u00e3o dos exerc\u00edcios&lt;/h1&gt;\n    &lt;div class=\"form\"&gt;\n      &lt;h2&gt;Formul\u00e1rio de cidades&lt;/h2&gt;\n      &lt;input type=\"text\" v-model=\"cidade\" /&gt;\n      &lt;button @click=\"adicionarCidade\"&gt;Adicionar&lt;/button&gt;\n    &lt;/div&gt;\n    &lt;div class=\"resultados\"&gt;\n      &lt;div class=\"cidades\"&gt;\n        &lt;h2&gt;Lista de cidades&lt;/h2&gt;\n        &lt;ul&gt;\n          &lt;li v-for=\"(cidade, index) in cidades\" :key=\"index\"&gt;\n             {{ cidade }}\n            &lt;button @click=\"removerCidade(index)\"&gt;Remover&lt;/button&gt;\n          &lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/div&gt;\n      &lt;div class=\"cidades\"&gt;\n        &lt;h2&gt;Cidades ordenadas&lt;/h2&gt;\n        &lt;ul&gt;\n          &lt;li v-for=\"cidade in cidadesOrdenadas\" :key=\"cidade\"&gt;\n             {{ cidade }}\n          &lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n  button {\n    padding: 10px;\n    border: none;\n    border-radius: 5px;\n    background-color: #007bff;\n    color: #fff;\n    cursor: pointer;\n  }\n\n  button:hover {\n    background-color: #0056b3;\n  }\n\n  .correcao {\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .form {\n    margin: 20px auto;\n    background-color: #f5f5f5;\n    padding: 20px;\n    border-radius: 5px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n    width: 70%;\n  }\n\n  .form input {\n    padding: 10px;\n    margin-right: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    width: 50%;\n  }\n\n  .resultados {\n    display: flex;\n    justify-content: space-between;\n    width: 70%;\n  }\n\n  .cidades {\n    margin-bottom: 20px;\n    background-color: #f5f5f5;\n    padding: 20px;\n    border-radius: 5px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n    width: 45%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .cidades ul {\n    list-style: none;\n    padding: 0;\n    width: 80%;\n  }\n\n  .cidades li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 10px;\n  }\n\n  .cidades button {\n    margin-left: 10px;\n  }\n&lt;/style&gt;\n</code></pre> <p>Note que esta \u00e9 uma das formas de corrigir os exerc\u00edcios. Existem outras formas de fazer a mesma coisa. O importante \u00e9 entender os conceitos e como utiliz\u00e1-los.</p>"},{"location":"listas/#projeto","title":"Projeto","text":"<p>Neste projeto voc\u00ea deve desenvolver um prot\u00f3tipo de um carrinho de compras de uma livraria. Nesse caso, crie uma lista fixa de produtos, como descrito abaixo:</p> <p>Estrutura do objeto de produtos</p> App.vue<pre><code>const produtos = [\n    {\n        id: 1,\n        titulo: 'Livro 1',\n        resenha: 'Descri\u00e7\u00e3o breve 1'\n        preco: 49.9,\n        capa: 'https://placehold.co/600x400.png',\n    },\n    {\n        id: 2,\n        titulo: 'Livro 2',\n        resenha: 'Descri\u00e7\u00e3o breve 2'\n        preco: 99.9,\n        capa: 'https://placehold.co/600x400.png',\n    },\n    {\n        id: 3,\n        titulo: 'Livro 3',\n        resenha: 'Descri\u00e7\u00e3o breve 3'\n        preco: 9.9,\n        capa: 'https://placehold.co/600x400.png',\n    },\n    {\n        id: 4,\n        titulo: 'Livro 4',\n        resenha: 'Descri\u00e7\u00e3o breve 4'\n        preco: 199.9,\n        capa: 'https://placehold.co/600x400.png',\n    },\n    {\n        id: 5,\n        titulo: 'Livro 5',\n        resenha: 'Descri\u00e7\u00e3o breve 5'\n        preco: 29.9,\n        capa: 'https://placehold.co/600x400.png',\n    }\n];\n</code></pre> <p>O usu\u00e1rio deve poder adicionar os livros ao carrinho. Para isso, deve ser renderizada uma lista de livros. O usu\u00e1rio deve poder clicar em um produto para adicion\u00e1-lo ao carrinho. O carrinho deve ser renderizado em uma <code>div</code> ou <code>section</code> abaixo da listagem dos produtos ou ficar escondida e ser apresentada quando clicar no \u00edcone <code>carrinho</code> do <code>layout</code> proposto. (Dica: pode ser criada uma vari\u00e1vel<code>booleana</code> para controlar essa fun\u00e7\u00e3o de visibilidade do carrinho).</p> <p>Em cada item do carrinho deve ter a op\u00e7\u00e3o de adicionar quantidade ou remover o item do carrinho. Ao final, deve ser apresentado o valor total dos itens no carrinho, que pode ser calculado a partir da quantidade de cada item e do pre\u00e7o do livro.</p> <p>Uma sugest\u00e3o para a estrutura do objeto do carrinho \u00e9:</p> <p>Estrutura do objeto do carrinho</p> App.vue<pre><code>const carrinho = {\n    items: [\n        {\n            id: 1,\n            nome: 'Livro 1',\n            preco: 49.9,\n            quantidade: 1,\n            valorTotal: 49.9,\n            },\n        {\n            id: 2,\n            nome: 'Livro 2',\n            preco: 99.9,\n            quantidade: 2,\n            valorTotal: 199.8,\n        },\n    ],\n    frete: 0,\n    desconto: 0,\n    total: 288.3,\n};\n</code></pre> <p>Note que o objeto do carrinho possui um atributo <code>total</code> que \u00e9 o valor total dos itens no carrinho. Ainda, note que cada item do carrinho possui um atributo <code>valorTotal</code> que \u00e9 o valor total do item multiplicado pela quantidade (1). Ainda, esses dois valores n\u00e3o devem ser informados pelo usu\u00e1rio, mas sim calculados a partir dos valores informados.</p> <ol> <li>Esse valor pode tamb\u00e9m ser calculado direto na renderiza\u00e7\u00e3o do item. Exemplo: {{ item.preco * item.quantidade }}. Mas, nesse caso, o valor total do item n\u00e3o estar\u00e1 dispon\u00edvel para ser usado em outros lugares do c\u00f3digo, como no c\u00e1lculo do total do carrinho.</li> </ol> <p>Dica 1: voc\u00ea pode calcular o valor total de cada item da compra ao aumentar ou diminuir a quantidade de itens no carrinho, na mesma fun\u00e7\u00e3o que manipula o incrementar e decrementar item do carrinho.</p> <p>Dica 2: o mesmo pode ser feito com o total da compra, que pode ser recalculado sempre que um item \u00e9 modificado no carrinho.</p> <p>Dica 3: se voc\u00ea desejar, todos esses c\u00e1lculos podem ser feitos em propriedades computadas, mas n\u00e3o \u00e9 obrigat\u00f3rio.</p> <p>Dica 4: um modelo de layout pode ser visto aqui</p>"},{"location":"listas/correcao-exercicios/","title":"Correcao exercicios","text":""},{"location":"listas/correcao-exercicios/#correcao-dos-exercicios","title":"Corre\u00e7\u00e3o dos exerc\u00edcios","text":"<p>Faremos a corre\u00e7\u00e3o dos exerc\u00edcios usando a API de composi\u00e7\u00e3o. Vamos, al\u00e9m disso, corrigir todos os itens num s\u00f3 exemplo. Sugiro que voc\u00ea tente resolver os exerc\u00edcios antes de ver a corre\u00e7\u00e3o. A corre\u00e7\u00e3o \u00e9 apenas uma sugest\u00e3o de como voc\u00ea pode resolver os exerc\u00edcios. N\u00e3o \u00e9 a \u00fanica forma de resolver os exerc\u00edcios.</p> <p>Aviso</p> <p>Importante: N\u00e3o foi apresentada a corre\u00e7\u00e3o do exerc\u00edcio 3, referente \u00e0 lista de not\u00edcias (newsletter).</p> Corre\u00e7\u00e3o dos exerc\u00edcios ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { computed, ref } from 'vue';\n\n  const cidade = ref('');\n  const cidades = ref([\n    'S\u00e3o Paulo',\n    'Rio de Janeiro',\n    'Belo Horizonte',\n    'Salvador',\n    'Fortaleza',\n    'Curitiba',\n    'Manaus',\n    'Recife',\n    'Porto Alegre',\n    'Bras\u00edlia',\n  ]);\n\n  const cidadesOrdenadas = computed(() =&gt; [...cidades.value].sort());\n\n  function adicionarCidade() {\n    cidades.value.push(cidade.value);\n    cidade.value = '';\n  }\n\n  function removerCidade(index) {\n    cidades.value.splice(index, 1);\n  }\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div class=\"correcao\"&gt;\n    &lt;h1&gt;Corre\u00e7\u00e3o dos exerc\u00edcios&lt;/h1&gt;\n    &lt;div class=\"form\"&gt;\n      &lt;h2&gt;Formul\u00e1rio de cidades&lt;/h2&gt;\n      &lt;input type=\"text\" v-model=\"cidade\" /&gt;\n      &lt;button @click=\"adicionarCidade\"&gt;Adicionar&lt;/button&gt;\n    &lt;/div&gt;\n    &lt;div class=\"resultados\"&gt;\n      &lt;div class=\"cidades\"&gt;\n        &lt;h2&gt;Lista de cidades&lt;/h2&gt;\n        &lt;ul&gt;\n          &lt;li v-for=\"(cidade, index) in cidades\" :key=\"index\"&gt;\n             {{ cidade }}\n            &lt;button @click=\"removerCidade(index)\"&gt;Remover&lt;/button&gt;\n          &lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/div&gt;\n      &lt;div class=\"cidades\"&gt;\n        &lt;h2&gt;Cidades ordenadas&lt;/h2&gt;\n        &lt;ul&gt;\n          &lt;li v-for=\"cidade in cidadesOrdenadas\" :key=\"cidade\"&gt;\n             {{ cidade }}\n          &lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n  button {\n    padding: 10px;\n    border: none;\n    border-radius: 5px;\n    background-color: #007bff;\n    color: #fff;\n    cursor: pointer;\n  }\n\n  button:hover {\n    background-color: #0056b3;\n  }\n\n  .correcao {\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .form {\n    margin: 20px auto;\n    background-color: #f5f5f5;\n    padding: 20px;\n    border-radius: 5px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n    width: 70%;\n  }\n\n  .form input {\n    padding: 10px;\n    margin-right: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    width: 50%;\n  }\n\n  .resultados {\n    display: flex;\n    justify-content: space-between;\n    width: 70%;\n  }\n\n  .cidades {\n    margin-bottom: 20px;\n    background-color: #f5f5f5;\n    padding: 20px;\n    border-radius: 5px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n    width: 45%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .cidades ul {\n    list-style: none;\n    padding: 0;\n    width: 80%;\n  }\n\n  .cidades li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 10px;\n  }\n\n  .cidades button {\n    margin-left: 10px;\n  }\n&lt;/style&gt;\n</code></pre> <p>Note que esta \u00e9 uma das formas de corrigir os exerc\u00edcios. Existem outras formas de fazer a mesma coisa. O importante \u00e9 entender os conceitos e como utiliz\u00e1-los.</p>"},{"location":"listas/exerc%C3%ADcios/","title":"Exerc\u00edcios","text":""},{"location":"listas/exerc%C3%ADcios/#exercicios","title":"Exerc\u00edcios","text":"<p>Para fixar o conte\u00fado, vamos resolver alguns exerc\u00edcios.</p>"},{"location":"listas/exerc%C3%ADcios/#exercicio-1","title":"Exerc\u00edcio 1","text":"<p>Fa\u00e7a uma tela que renderize uma lista de cidades. O componente deve receber um array de cidades como propriedade. A lista deve ser renderizada em um elemento <code>ul</code>. Cada item da lista deve ser renderizado em um elemento <code>li</code>. As cidades iniciais devem ser:</p> <pre><code>[\n  'S\u00e3o Paulo',\n  'Rio de Janeiro',\n  'Belo Horizonte',\n  'Salvador',\n  'Fortaleza',\n  'Curitiba',\n  'Manaus',\n  'Recife',\n  'Porto Alegre',\n  'Bras\u00edlia',\n];\n</code></pre>"},{"location":"listas/exerc%C3%ADcios/#exercicio-2","title":"Exerc\u00edcio 2","text":"<p>Usando o mesmo Array do exerc\u00edcio anterior, deve ser renderizada uma lista deve ser renderizada em ordem alfab\u00e9tica. A lista deve ser renderizada em um elemento <code>ul</code>. Cada item da lista deve ser renderizado em um elemento <code>li</code>. Dica: para ordenar um array, voc\u00ea pode usar o m\u00e9todo <code>sort</code> do array, preferencialmente em uma propriedade computada.</p>"},{"location":"listas/exerc%C3%ADcios/#exercicio-3","title":"Exerc\u00edcio 3","text":"<p>Neste exerc\u00edcio voc\u00ea deve criar uma lista de not\u00edcias (newsletter), contendo <code>t\u00edtulo</code>, <code>data</code>, <code>resumo da not\u00edcia</code>, <code>link da not\u00edcia</code> e, opcionalmente, a <code>imagem da not\u00edcia</code>. Deve haver um bot\u00e3o que, quando clicado, direcionar\u00e1 para a p\u00e1gina da not\u00edcia, abrindo o link em uma nova aba. Note que voc\u00ea deve abrir a url que est\u00e1 informada na chave <code>link</code> do objeto.</p> <p>Dica 1: como o link est\u00e1 numa vari\u00e1vel e voc\u00ea precisa atribuir esse valor para o atributo <code>href</code> da tag <code>a</code>, voc\u00ea pode usar a diretiva v-bind para fazer isso.</p> <p>Dica 2: para as imagens voc\u00ea pode apenas usar o endere\u00e7o p\u00fablico da Internet de uma imagem.</p> <p>Abaixo, um exemplo de como o objeto de not\u00edcias pode ser estruturado:</p> <pre><code>noticias = [\n  {\n    titulo: 'T\u00edtulo 1',\n    data: '01/01/2023',\n    resumo: 'Resumo da not\u00edcia 1',\n    link: 'https://www.google.com',\n    imagem: 'https://placehold.co/600x400.png',\n  },\n  {\n    titulo: 'T\u00edtulo 2',\n    data: '02/01/2023',\n    resumo: 'Resumo da not\u00edcia 2',\n    link: 'https://www.google.com',\n    imagem: 'https://placehold.co/600x400.png',\n  },\n];\n</code></pre>"},{"location":"listas/manipulacao-listas/","title":"Manipulacao listas","text":""},{"location":"listas/manipulacao-listas/#manipulacao-de-listas","title":"Manipula\u00e7\u00e3o de listas","text":"<p>\u00c9 comum precisarmos adicionar, remover ou atualizar elementos de uma lista. O VueJS oferece uma forma simples de manipular listas de dados.</p>"},{"location":"listas/manipulacao-listas/#adicionando-elementos","title":"Adicionando elementos","text":"<p>Para adicionar um elemento a uma lista, basta usar o m\u00e9todo <code>push</code> do array. O m\u00e9todo <code>push</code> adiciona um elemento ao final do array. Veja o exemplo abaixo:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { ref } from 'vue'\n\n  const novoItem = ref('')\n  const listaCompras = ref(['arroz', 'batata', 'feij\u00e3o'])\n\n  function adicionar {\n    listaCompras.value.push(novoItem.value)\n    novoItem.value = ''\n  }\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;input type=\"text\" v-model=\"novoItem\" /&gt;\n  &lt;button @click=\"adicionar\"&gt;Adicionar&lt;/button&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"item in listaCompras\"&gt;{{ item }&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre> <p>Note uma diferen\u00e7a importante entre o exemplo acima e o exemplo da aula anterior. No exemplo anterior, a lista de compras era uma constante. Agora, a lista de compras \u00e9 uma vari\u00e1vel reativa. Isso significa que, sempre que o valor da vari\u00e1vel <code>listaCompras</code> for alterado, o VueJS vai atualizar a lista de compras na tela.</p> <p>Para isso, precisamos usar a fun\u00e7\u00e3o <code>ref</code> do VueJS. A fun\u00e7\u00e3o <code>ref</code> cria uma vari\u00e1vel reativa. A vari\u00e1vel reativa \u00e9 um objeto que cont\u00e9m o valor da vari\u00e1vel e uma propriedade <code>value</code>. A propriedade <code>value</code> cont\u00e9m o valor da vari\u00e1vel. Por exemplo, a vari\u00e1vel <code>novoItem</code> \u00e9 uma vari\u00e1vel reativa. A vari\u00e1vel <code>novoItem</code> cont\u00e9m a propriedade <code>value</code>. A propriedade <code>value</code> cont\u00e9m o valor da vari\u00e1vel <code>novoItem</code>. Veja o exemplo abaixo:</p>"},{"location":"listas/manipulacao-listas/#removendo-elementos","title":"Removendo elementos","text":"<p>Para remover um elemento de uma lista, basta usar o m\u00e9todo <code>splice</code> do array. O m\u00e9todo <code>splice</code> recebe dois par\u00e2metros: o \u00edndice do elemento a ser removido e a quantidade de elementos a serem removidos. Veja o exemplo abaixo:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { ref } from 'vue';\n\n  const listaCompras = ref(['arroz', 'batata', 'feij\u00e3o']);\n\n  function remover(index) {\n    listaCompras.value.splice(index, 1);\n  }\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"(item, index) in listaCompras\"&gt;\n      {{ item }}&lt;button @click=\"remover(index)\"&gt;Remover&lt;/button&gt;\n    &lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"listas/manipulacao-listas/#atualizando-elementos","title":"Atualizando elementos","text":"<p>Para atualizar um elemento de uma lista, basta atribuir um novo valor ao elemento. Vamos usar como exemplo, um array de objetos. Veja o exemplo abaixo:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { ref } from 'vue';\n\n  const listaCompras = ref([\n    { nome: 'arroz', quantidade: 1 },\n    { nome: 'batata', quantidade: 2 },\n    { nome: 'feij\u00e3o', quantidade: 3 },\n  ]);\n\n  function incrementar(index) {\n    listaCompras.value[index].quantidade++;\n  }\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"(item, index) in listaCompras\"&gt;\n      {{ item.nome }} - {{ item.quantidade }}\n      &lt;button @click=\"incrementar(index)\"&gt;Incrementar&lt;/button&gt;\n    &lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre> <p>Neste exemplo, a lista de compras \u00e9 um array de objetos. Cada objeto representa um item da lista de compras. Cada item da lista de compras possui duas propriedades: <code>nome</code> e <code>quantidade</code>. Para atualizar a quantidade de um item, basta incrementar a propriedade <code>quantidade</code> do item.</p>"},{"location":"listas/projetos/","title":"Projetos","text":""},{"location":"listas/projetos/#projeto","title":"Projeto","text":"<p>Neste projeto voc\u00ea deve desenvolver um prot\u00f3tipo de um carrinho de compras de uma livraria. Nesse caso, crie uma lista fixa de produtos, como descrito abaixo:</p> <p>Estrutura do objeto de produtos</p> App.vue<pre><code>const produtos = [\n    {\n        id: 1,\n        titulo: 'Livro 1',\n        resenha: 'Descri\u00e7\u00e3o breve 1'\n        preco: 49.9,\n        capa: 'https://placehold.co/600x400.png',\n    },\n    {\n        id: 2,\n        titulo: 'Livro 2',\n        resenha: 'Descri\u00e7\u00e3o breve 2'\n        preco: 99.9,\n        capa: 'https://placehold.co/600x400.png',\n    },\n    {\n        id: 3,\n        titulo: 'Livro 3',\n        resenha: 'Descri\u00e7\u00e3o breve 3'\n        preco: 9.9,\n        capa: 'https://placehold.co/600x400.png',\n    },\n    {\n        id: 4,\n        titulo: 'Livro 4',\n        resenha: 'Descri\u00e7\u00e3o breve 4'\n        preco: 199.9,\n        capa: 'https://placehold.co/600x400.png',\n    },\n    {\n        id: 5,\n        titulo: 'Livro 5',\n        resenha: 'Descri\u00e7\u00e3o breve 5'\n        preco: 29.9,\n        capa: 'https://placehold.co/600x400.png',\n    }\n];\n</code></pre> <p>O usu\u00e1rio deve poder adicionar os livros ao carrinho. Para isso, deve ser renderizada uma lista de livros. O usu\u00e1rio deve poder clicar em um produto para adicion\u00e1-lo ao carrinho. O carrinho deve ser renderizado em uma <code>div</code> ou <code>section</code> abaixo da listagem dos produtos ou ficar escondida e ser apresentada quando clicar no \u00edcone <code>carrinho</code> do <code>layout</code> proposto. (Dica: pode ser criada uma vari\u00e1vel<code>booleana</code> para controlar essa fun\u00e7\u00e3o de visibilidade do carrinho).</p> <p>Em cada item do carrinho deve ter a op\u00e7\u00e3o de adicionar quantidade ou remover o item do carrinho. Ao final, deve ser apresentado o valor total dos itens no carrinho, que pode ser calculado a partir da quantidade de cada item e do pre\u00e7o do livro.</p> <p>Uma sugest\u00e3o para a estrutura do objeto do carrinho \u00e9:</p> <p>Estrutura do objeto do carrinho</p> App.vue<pre><code>const carrinho = {\n    items: [\n        {\n            id: 1,\n            nome: 'Livro 1',\n            preco: 49.9,\n            quantidade: 1,\n            valorTotal: 49.9,\n            },\n        {\n            id: 2,\n            nome: 'Livro 2',\n            preco: 99.9,\n            quantidade: 2,\n            valorTotal: 199.8,\n        },\n    ],\n    frete: 0,\n    desconto: 0,\n    total: 288.3,\n};\n</code></pre> <p>Note que o objeto do carrinho possui um atributo <code>total</code> que \u00e9 o valor total dos itens no carrinho. Ainda, note que cada item do carrinho possui um atributo <code>valorTotal</code> que \u00e9 o valor total do item multiplicado pela quantidade (1). Ainda, esses dois valores n\u00e3o devem ser informados pelo usu\u00e1rio, mas sim calculados a partir dos valores informados.</p> <ol> <li>Esse valor pode tamb\u00e9m ser calculado direto na renderiza\u00e7\u00e3o do item. Exemplo: {{ item.preco * item.quantidade }}. Mas, nesse caso, o valor total do item n\u00e3o estar\u00e1 dispon\u00edvel para ser usado em outros lugares do c\u00f3digo, como no c\u00e1lculo do total do carrinho.</li> </ol> <p>Dica 1: voc\u00ea pode calcular o valor total de cada item da compra ao aumentar ou diminuir a quantidade de itens no carrinho, na mesma fun\u00e7\u00e3o que manipula o incrementar e decrementar item do carrinho.</p> <p>Dica 2: o mesmo pode ser feito com o total da compra, que pode ser recalculado sempre que um item \u00e9 modificado no carrinho.</p> <p>Dica 3: se voc\u00ea desejar, todos esses c\u00e1lculos podem ser feitos em propriedades computadas, mas n\u00e3o \u00e9 obrigat\u00f3rio.</p> <p>Dica 4: um modelo de layout pode ser visto aqui</p>"},{"location":"listas/renderizacao-elementos/","title":"Renderizacao elementos","text":""},{"location":"listas/renderizacao-elementos/#renderizacao-dos-elementos-de-listas","title":"Renderiza\u00e7\u00e3o dos elementos de listas","text":"<p>Nessa aula, vamos aprender a renderizar listas de dados. Usamos esse termo para descrever a renderiza\u00e7\u00e3o de arrays e objetos, bem como arrays de objetos.</p>"},{"location":"listas/renderizacao-elementos/#renderizacao-de-arrays-de-strings","title":"Renderiza\u00e7\u00e3o de arrays de strings","text":"<p>Para isso, inicialmente vamos criar um array de strings e renderizar cada item da lista em uma tag <code>&lt;li&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  const items = ['Item 1', 'Item 2', 'Item 3'];\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"(item, index) in items\" :key=\"index\"&gt;{{ item }}&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre> <p>Neste exemplo, o array <code>items</code> cont\u00e9m tr\u00eas strings. A diretiva <code>v-for</code> \u00e9 usada para iterar sobre os itens do array. A vari\u00e1vel <code>item</code> \u00e9 usada para referenciar cada item da lista. A sintaxe <code>v-for=\"item in items\"</code> \u00e9 equivalente a <code>v-for=\"(item, index) in items\"</code>. O segundo par\u00e2metro da diretiva <code>v-for</code> \u00e9 o \u00edndice do item na lista. O \u00edndice \u00e9 opcional e pode ser omitido. Contudo, como precisamos de um valor \u00fanico para a propriedade <code>key</code>, vamos usar o \u00edndice do item na lista.</p> <p>A propriedade <code>key</code> \u00e9 usada pelo VueJS para identificar cada item da lista e \u00e9 obrigat\u00f3ria quando usamos a diretiva <code>v-for</code>. Sem a propriedade <code>key</code>, o VueJS n\u00e3o consegue identificar cada item da lista e n\u00e3o consegue atualizar corretamente a lista quando os dados s\u00e3o alterados.</p> <p>Para refor\u00e7ar os conceitos, \u00e9 importante entender que o elemento <code>&lt;li&gt;</code> \u00e9 renderizado uma vez para cada item da lista. O VueJS renderiza o elemento <code>&lt;li&gt;</code> e, em seguida, atualiza o conte\u00fado do elemento com o valor do item da lista. No exemplo, o elemento <code>&lt;li&gt;</code> \u00e9 renderizado tr\u00eas vezes. A primeira vez, o conte\u00fado do elemento \u00e9 atualizado com o valor do primeiro item da lista. A segunda vez, o conte\u00fado do elemento \u00e9 atualizado com o valor do segundo item da lista. A terceira vez, o conte\u00fado do elemento \u00e9 atualizado com o valor do terceiro item da lista.</p> <p>Por fim, fizemos a itera\u00e7\u00e3o no elemento <code>&lt;li&gt;</code>, mas poder\u00edamos ter feito com qualquer outro elemento ou mesmo com um componente. Por exemplo, poder\u00edamos ter feito a itera\u00e7\u00e3o no elemento <code>&lt;p&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  const items = ['Item 1', 'Item 2', 'Item 3'];\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;p v-for=\"(item, index) in items\" :key=\"index\"&gt;{{ item }}&lt;/p&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"listas/renderizacao-elementos/#renderizacao-de-arrays-de-objetos","title":"Renderiza\u00e7\u00e3o de arrays de objetos","text":"<p>Vamos agora renderizar uma lista de objetos. Para isso, vamos criar um array de objetos e renderizar cada item da lista em uma tag <code>&lt;li&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  const items = [\n    { id: 1, name: 'Item 1' },\n    { id: 2, name: 'Item 2' },\n    { id: 3, name: 'Item 3' },\n  ];\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"item in items\" :key=\"item.id\"&gt;{{ item.name }}&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre> <p>Neste exemplo, o array <code>items</code> cont\u00e9m tr\u00eas objetos. A diretiva <code>v-for</code> \u00e9 usada para iterar sobre os itens do array. A vari\u00e1vel <code>item</code> \u00e9 usada para referenciar cada item da lista. A sintaxe <code>v-for=\"item in items\"</code> \u00e9 equivalente a <code>v-for=\"(item, index) in items\"</code>. Contudo, como n\u00e3o precisamos do \u00edndice do item na lista, vamos usar a sintaxe mais simples. Por\u00e9m, ainda precisamos de um valor \u00fanico para a propriedade <code>key</code> e, neste caso, usaremos o valor da propriedade <code>id</code> do objeto.</p> <p>Neste exemplo, o elemento <code>&lt;li&gt;</code> \u00e9 renderizado tr\u00eas vezes. A primeira vez, o conte\u00fado do elemento \u00e9 atualizado com o valor da propriedade <code>name</code> do primeiro item da lista. A segunda vez, o conte\u00fado do elemento \u00e9 atualizado com o valor da propriedade <code>name</code> do segundo item da lista. A terceira vez, o conte\u00fado do elemento \u00e9 atualizado com o valor da propriedade <code>name</code> do terceiro item da lista.</p> <p>Por fim, fizemos a itera\u00e7\u00e3o no elemento <code>&lt;li&gt;</code>, mas poder\u00edamos ter feito com qualquer outro elemento ou mesmo com um componente. Por exemplo, poder\u00edamos ter feito a itera\u00e7\u00e3o no elemento <code>&lt;div&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  const items = [\n    { id: 1, name: 'Item 1' },\n    { id: 2, name: 'Item 2' },\n    { id: 3, name: 'Item 3' },\n  ];\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;div v-for=\"item in items\" :key=\"item.id\"&gt;\n    &lt;p&gt;{{ item.name }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"listas/renderizacao-elementos/#renderizacao-de-objetos","title":"Renderiza\u00e7\u00e3o de objetos","text":"<p>Vamos agora renderizar um objeto. Para isso, vamos criar um objeto e renderizar cada propriedade do objeto em uma tag <code>&lt;li&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  const items = {\n    id: 1,\n    description: 'Item 1',\n    price: 10.0,\n  };\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"(value, key) in items\" :key=\"key\"&gt;{{ key }}: {{ value }}&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre> <p>Neste exemplo, o objeto <code>items</code> cont\u00e9m tr\u00eas propriedades. A diretiva <code>v-for</code> \u00e9 usada para iterar sobre as propriedades do objeto. As vari\u00e1veis <code>value</code> e <code>key</code> s\u00e3o usadas para referenciar o valor e a chave de cada propriedade do objeto. A sintaxe <code>v-for=\"(value, key) in items\"</code> \u00e9 equivalente a <code>v-for=\"(value, key, index) in items\"</code>. Contudo, como n\u00e3o precisamos do \u00edndice do item na lista, vamos usar a sintaxe mais simples. Por\u00e9m, ainda precisamos de um valor \u00fanico para a propriedade <code>key</code> e, neste caso, usaremos a pr\u00f3pria chave da propriedade.</p> <p>Neste exemplo, o elemento <code>&lt;li&gt;</code> \u00e9 renderizado tr\u00eas vezes. A primeira vez, o conte\u00fado do elemento \u00e9 atualizado com o valor da propriedade <code>id</code> do objeto. A segunda vez, o conte\u00fado do elemento \u00e9 atualizado com o valor da propriedade <code>description</code> do objeto. A terceira vez, o conte\u00fado do elemento \u00e9 atualizado com o valor da propriedade <code>price</code> do objeto.</p> <p>O resultado da renderiza\u00e7\u00e3o \u00e9 o seguinte:</p> <pre><code>&lt;ul&gt;\n  &lt;li&gt;description: Item 1&lt;/li&gt;\n  &lt;li&gt;price: 10&lt;/li&gt;\n  &lt;li&gt;id: 1&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>Este exemplo \u00e9 um pouco diferente dos exemplos anteriores. No exemplo anterior, o objeto <code>items</code> era iterado e cada item da lista era renderizado em um elemento <code>&lt;li&gt;</code>. Neste exemplo, o objeto <code>items</code> \u00e9 iterado e cada propriedade do objeto \u00e9 renderizada em um elemento <code>&lt;li&gt;</code>. Por isso, o resultado da renderiza\u00e7\u00e3o \u00e9 diferente.</p> <p>Por fim, fizemos a itera\u00e7\u00e3o no elemento <code>&lt;li&gt;</code>, mas poder\u00edamos ter feito com qualquer outro elemento ou mesmo com um componente. Por exemplo, poder\u00edamos ter feito a itera\u00e7\u00e3o no elemento <code>&lt;p&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  const items = {\n    id: 1,\n    description: 'Item 1',\n    price: 10.0,\n  };\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;p v-for=\"(value, key) in items\" :key=\"key\"&gt;{{ key }}: {{ value }}&lt;/p&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"listas/renderizacao-elementos/#renderizacao-de-arrays-de-objetos-com-objetos-aninhados","title":"Renderiza\u00e7\u00e3o de arrays de objetos com objetos aninhados","text":"<p>Vamos agora renderizar uma lista de objetos que cont\u00e9m objetos aninhados. Para isso, vamos criar um array de objetos e renderizar cada item da lista em uma tag <code>&lt;li&gt;</code>.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  const items = [\n    {\n      id: 1,\n      name: 'Item 1',\n      details: { description: 'Item 1 description', price: 10.0 },\n    },\n    {\n      id: 2,\n      name: 'Item 2',\n      details: { description: 'Item 2 description', price: 20.0 },\n    },\n    {\n      id: 3,\n      name: 'Item 3',\n      details: { description: 'Item 3 description', price: 30.0 },\n    },\n  ];\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"item in items\" :key=\"item.id\"&gt;\n      &lt;p&gt;{{ item.name }}&lt;/p&gt;\n      &lt;p&gt;{{ item.details.description }}&lt;/p&gt;\n      &lt;p&gt;{{ item.details.price }}&lt;/p&gt;\n    &lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre> <p>Neste exemplo, o array <code>items</code> cont\u00e9m tr\u00eas objetos. A diretiva <code>v-for</code> \u00e9 usada para iterar sobre os itens do array. A vari\u00e1vel <code>item</code> \u00e9 usada para referenciar cada item da lista.</p> <p>Poder\u00edamos ter feito duas itera\u00e7\u00f5es. A primeira itera\u00e7\u00e3o seria para iterar sobre os itens do array e a segunda itera\u00e7\u00e3o seria para iterar sobre as propriedades do objeto. Veja o exemplo a seguir:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  const items = [\n    {\n      id: 1,\n      name: 'Item 1',\n      details: { description: 'Item 1 description', price: 10.0 },\n    },\n    {\n      id: 2,\n      name: 'Item 2',\n      details: { description: 'Item 2 description', price: 20.0 },\n    },\n    {\n      id: 3,\n      name: 'Item 3',\n      details: { description: 'Item 3 description', price: 30.0 },\n    },\n  ];\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"item in items\" :key=\"item.id\"&gt;\n      &lt;p&gt;Nome: {{ item.name }}&lt;/p&gt;\n      &lt;p&gt;Detalhes&lt;/p&gt;\n      &lt;p v-for=\"(value, key) in item.details\" :key=\"key\"&gt;\n        {{ key }}: {{ value }}\n      &lt;/p&gt;\n    &lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"livraria-tutorial/","title":"Tutorial Livraria (Carrinho de compras)","text":"<p>Nesta etapa, voc\u00ea ir\u00e1 desenvolver uma aplica\u00e7\u00e3o de carrinho de compras utilizando Vue.js. O objetivo \u00e9 criar uma aplica\u00e7\u00e3o que permita ao usu\u00e1rio adicionar produtos a um carrinho, visualizar o carrinho e finalizar a compra.</p> <p>Usaremos como base esse prot\u00f3tipo feito no Figma. Neste momento, vamos fazer tudo usando apenas um componente, ou seja, apenas o arquivo <code>App.vue</code>. O objetivo \u00e9 que voc\u00ea consiga entender como funciona a estrutura de uma aplica\u00e7\u00e3o Vue.js.</p> <p>Vamos desenvolver a aplica\u00e7\u00e3o em etapas, come\u00e7ando com a configura\u00e7\u00e3o do ambiente e a cria\u00e7\u00e3o da estrutura b\u00e1sica do projeto. Em seguida, adicionaremos os componentes necess\u00e1rios para o carrinho de compras e implementaremos a l\u00f3gica de adi\u00e7\u00e3o e remo\u00e7\u00e3o de produtos.</p>"},{"location":"livraria-tutorial/#criando-a-aplicacao","title":"Criando a aplica\u00e7\u00e3o","text":"<p>Para criar a aplica\u00e7\u00e3o, siga os passos abaixo (1):</p> <ol> <li>Lembre-se que voc\u00ea deve estar com o Node na vers\u00e3o superior a 20.0.0 e estar num diret\u00f3rio adequado para criar o projeto.</li> </ol> <pre><code>npm init vue@latest tutorial-livraria\n\u25c6  Select features to include in your project: (\u2191/\u2193 to navigate, space to select, a to toggle all, enter to confirm)\n\u2502  \u25fb TypeScript\n\u2502  \u25fb JSX Support\n\u2502  \u25fb Router (SPA development)\n\u2502  \u25fb Pinia (state management)\n\u2502  \u25fb Vitest (unit testing)\n\u2502  \u25fb End-to-End Testing\n\u2502  \u25fc ESLint (error prevention)\n\u2502  \u25fc Prettier (code formatting)\n</code></pre> <p>Em seguida, abra a pasta <code>tutorial-livraria</code> no VSCode e execute os seguintes comandos no terminal:</p> <pre><code>npm install\nnpm run dev\n</code></pre> <p>Lembrando que, com os comandos acima, voc\u00ea instala as depend\u00eancias do projeto e inicia o servidor de desenvolvimento. O servidor estar\u00e1 em execu\u00e7\u00e3o na porta 5173, caso esta esteja livre. Para acessar a aplica\u00e7\u00e3o, basta abrir o navegador e acessar a URL <code>http://localhost:5173</code>.</p> <p>Vamos agora fazer a limpeza do projeto:</p> <ul> <li> Abra o arquivo <code>src/App.vue</code> e remova todo o conte\u00fado, deixando apenas a tag <code>&lt;template&gt;</code> e a tag <code>&lt;script setup&gt;</code>. O arquivo deve ficar assim:</li> </ul> ./src/App.vue<pre><code>&lt;script setup&gt;&lt;/script&gt;\n\n&lt;template&gt;&lt;/template&gt;\n</code></pre> <ul> <li> Remova todos os arquivos e subdiret\u00f3rios da pasta <code>src/components</code>.</li> <li> Edite o arquivo <code>src/assets/main.css</code>, e deixe como abaixo:</li> </ul> ./src/assets/main.css<pre><code>@import './base.css';\n\nhtml {\n  font-size: clamp(1rem, 1.5vw, 1.2rem);\n  line-height: 1.5;\n}\n</code></pre> <p>Note que o arquivo <code>base.css</code> \u00e9 um arquivo CSS que cont\u00e9m as regras de estilo base para a aplica\u00e7\u00e3o. Ele \u00e9 importado no arquivo <code>main.css</code>, que \u00e9 o arquivo principal de estilos da aplica\u00e7\u00e3o. Tamb\u00e9m removemos as regras de estilo que estavam no arquivo <code>main.css</code> e deixamos apenas as regras de estilo base e da tag <code>html</code>. Nesse caso, a regra de estilo <code>font-size</code> define o tamanho da fonte da aplica\u00e7\u00e3o. O valor <code>clamp(1rem, 1.5vw, 1.2rem)</code> significa que o tamanho da fonte ser\u00e1 de 1rem (16px) no menor tamanho de tela, aumentar\u00e1 para 1.5vw (1.5% da largura da tela) em telas m\u00e9dias e ser\u00e1 limitado a 1.2rem (19.2px) em telas grandes.</p>"},{"location":"livraria-tutorial/#instalando-o-pacote-de-icones","title":"Instalando o pacote de \u00edcones","text":"<p>Para a cria\u00e7\u00e3o desse projeto, usaremos a biblioteca de \u00edcones Material Design Icons. Para instalar, execute o seguinte comando:</p> <pre><code>npm install @mdi/font #(1)(2)\n</code></pre> <ol> <li>Antes de executar esse comando, \u00e9 aconselh\u00e1vel parar a execu\u00e7\u00e3o do servidor de desenvolvimento. Para isso, pressione <code>Ctrl + C</code> no terminal onde o servidor est\u00e1 em execu\u00e7\u00e3o. Isso interromper\u00e1 o processo do servidor.</li> <li>O comando acima instala a biblioteca de \u00edcones Material Design Icons. Essa biblioteca cont\u00e9m uma cole\u00e7\u00e3o de \u00edcones que podem ser usados em aplica\u00e7\u00f5es web. A biblioteca \u00e9 baseada no Material Design, um sistema de design criado pelo Google.</li> </ol> <p>Em seguida, vamos importar os \u00edcones no arquivo <code>src/main.js</code>. Para isso, abra o arquivo <code>src/main.js</code> e adicione a seguinte linha:</p> ./src/main.js<pre><code>import './assets/main.css';\nimport '@mdi/font/css/materialdesignicons.css';\n</code></pre>  Vers\u00e3o completa ./src/main.js<pre><code>import './assets/main.css'\nimport '@mdi/font/css/materialdesignicons.min.css'\n\nimport { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n</code></pre> <p>Uma lista completa de \u00edcones do Material Design Icons pode ser encontrada aqui. A forma de usar os \u00edcones \u00e9 adicionar a classe correspondente ao elemento HTML desejado. Por exemplo, o \u00edcone do carrinho \u00e9 representado pela classe <code>mdi mdi-cart</code>. Para usar um \u00edcone, basta adicionar a classe correspondente ao elemento HTML desejado. Em geral, os \u00edcones s\u00e3o usados em elementos <code>&lt;span&gt;</code> ou <code>&lt;i&gt;</code>.</p> <p>Tamb\u00e9m, para criar a aplica\u00e7\u00e3o, precisaremos das imagens que foram usadas no prot\u00f3tipo e que s\u00e3o as capas dos livros. Para isso, voc\u00ea pode baixar o arquivo de imagens, clicando no bot\u00e3o abaixo.</p> <p>Baixar arquivo de imagens </p>"},{"location":"livraria-tutorial/#criando-o-cabecalho","title":"Criando o cabe\u00e7alho","text":"<p>Vamos inicialmente criar a estrutura principal do cabe\u00e7alho, ainda sem a funcionalidade de abrir o carrinho. Para isso, vamos editar o arquivo <code>src/App.vue</code> e adicionar o seguinte c\u00f3digo:</p> ./src/App.vue<pre><code>&lt;template&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;h1&gt;\n        &lt;a href=\"#\"&gt;\n          IFbooks\n          &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n        &lt;/a&gt;\n      &lt;/h1&gt;\n      &lt;div class=\"search-wrapper\"&gt;\n        &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n      &lt;/div&gt;\n      &lt;ul&gt;\n        &lt;li&gt;Termos&lt;/li&gt;\n        &lt;li&gt;Equipe&lt;/li&gt;\n        &lt;li&gt;Envio&lt;/li&gt;\n        &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;ul class=\"icons\"&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n&lt;/template&gt;\n</code></pre> <p>Note, no c\u00f3digo acima, os seguintes detalhes:</p> <ul> <li>O cabe\u00e7alho \u00e9 composto por um <code>nav</code> que cont\u00e9m o t\u00edtulo da aplica\u00e7\u00e3o, um campo de busca e uma lista de links.</li> <li>O cabe\u00e7alho tamb\u00e9m cont\u00e9m uma lista de \u00edcones, que s\u00e3o representados por classes do Material Design Icons. Esses \u00edcones s\u00e3o usados para representar a\u00e7\u00f5es como abrir o carrinho, visualizar favoritos e acessar a conta do usu\u00e1rio.</li> <li>Os \u00edcones do Material Design Icons s\u00e3o representados por classes CSS. Por exemplo, o \u00edcone do carrinho \u00e9 representado pela classe <code>mdi mdi-cart</code>. Para usar um \u00edcone, basta adicionar a classe correspondente ao elemento HTML desejado. Uma lista completa de \u00edcones pode ser encontrada aqui.</li> <li>O cabe\u00e7alho j\u00e1 possui v\u00e1rias classes definidas que facilitar\u00e1 a estiliza\u00e7\u00e3o. Em seguida vamos adicionar o CSS para estilizar o cabe\u00e7alho.</li> <li>O cabe\u00e7alho possui um link que leva \u00e0 p\u00e1gina inicial da aplica\u00e7\u00e3o. O link \u00e9 representado pela tag <code>&lt;a&gt;</code> e cont\u00e9m o t\u00edtulo da aplica\u00e7\u00e3o. O t\u00edtulo \u00e9 estilizado com a classe <code>logo-title</code>, que pode ser usada para aplicar estilos espec\u00edficos ao t\u00edtulo.</li> <li>O cabe\u00e7alho possui uma barra de pesquisa, que \u00e9 representada pelo elemento <code>&lt;input&gt;</code>. A barra de pesquisa \u00e9 estilizada com a classe <code>search</code>, que pode ser usada para aplicar estilos espec\u00edficos \u00e0 barra de pesquisa.</li> <li>O cabe\u00e7alho possui uma lista de links, que s\u00e3o representados pelos elementos <code>&lt;li&gt;</code>. Os links s\u00e3o estilizados com a classe <code>icons</code>, que pode ser usada para aplicar estilos espec\u00edficos aos \u00edcones.</li> </ul> <p>Agora, vamos adicionar a estiliza\u00e7\u00e3o no pr\u00f3prio componente. Para isso, adicione o seguinte c\u00f3digo no arquivo <code>src/App.vue</code>:</p> ./src/App.vue<pre><code>&lt;style scoped&gt;\nheader nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h1 {\n    font-size: 1.3rem;\n    color: #000;\n\n    &amp; a {\n      text-decoration: none;\n      color: #000;\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .logo-title {\n      border-left: 1px solid #27ae6099;\n      font-size: 0.8rem;\n      margin-left: 10px;\n      padding-left: 10px;\n      color: #27ae6099;\n      width: 100px;\n      line-height: 1rem;\n    }\n  }\n\n  &amp; input {\n    width: 400px;\n    height: 40px;\n    border-radius: 5px;\n    font-size: 1rem;\n    border: 0;\n    background-color: #f1f1f1;\n    padding: 5px;\n  }\n\n  &amp; ul {\n    display: flex;\n  }\n\n  &amp; ul li {\n    list-style: none;\n    margin: 0 10px;\n    font-size: 1rem;\n  }\n\n  &amp; .icons li {\n    color: #27ae60;\n    font-size: 1.3rem;\n  }\n\n  &amp; .search-wrapper {\n    position: relative;\n  }\n\n  &amp; .search-wrapper::before {\n    content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n    font-family: 'Material Design Icons';\n    font-size: 1.2rem;\n    position: absolute;\n    right: 0.75rem;\n    top: 50%;\n    transform: translateY(-50%);\n    pointer-events: none;\n  }\n\n  &amp; .search {\n    padding-right: 2rem;\n  }\n}\n&lt;/style&gt;\n</code></pre> <p>Note que o c\u00f3digo acima utiliza uma caracter\u00edstica do CSS chamado de <code>nesting</code>, que permite aninhar seletores CSS dentro de outros seletores. Isso torna o c\u00f3digo mais leg\u00edvel e organizado. O <code>&amp;</code> \u00e9 um seletor especial que representa o elemento pai. Por exemplo, <code>&amp; h1</code> representa o elemento <code>&lt;h1&gt;</code> dentro do elemento pai.</p> <p>O c\u00f3digo acima estiliza o cabe\u00e7alho da aplica\u00e7\u00e3o, definindo a apar\u00eancia do t\u00edtulo, da barra de pesquisa e dos \u00edcones. O cabe\u00e7alho \u00e9 exibido na parte superior da p\u00e1gina e cont\u00e9m um link para a p\u00e1gina inicial, uma barra de pesquisa e uma lista de \u00edcones. A barra de pesquisa \u00e9 estilizada com um fundo cinza claro e um tamanho fixo. Os \u00edcones s\u00e3o exibidos em verde e t\u00eam um tamanho maior que o texto normal.</p>  Vers\u00e3o completa ./src/App.vue<pre><code>&lt;script setup&gt;\n&lt;/script&gt;\n\n&lt;template&gt;\n    &lt;header&gt;\n        &lt;nav&gt;\n        &lt;h1&gt;\n            &lt;a href=\"#\"&gt;\n            IFbooks\n            &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n            &lt;/a&gt;\n        &lt;/h1&gt;\n        &lt;div class=\"search-wrapper\"&gt;\n            &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n        &lt;/div&gt;\n        &lt;ul&gt;\n            &lt;li&gt;Termos&lt;/li&gt;\n            &lt;li&gt;Equipe&lt;/li&gt;\n            &lt;li&gt;Envio&lt;/li&gt;\n            &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n        &lt;/ul&gt;\n        &lt;ul class=\"icons\"&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n        &lt;/nav&gt;\n    &lt;/header&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 2vh 8vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; h1 {\n        font-size: 1.3rem;\n        color: #000;\n\n        &amp; a {\n        text-decoration: none;\n        color: #000;\n        display: flex;\n        align-items: center;\n        }\n\n        &amp; .logo-title {\n        border-left: 1px solid #27ae6099;\n        font-size: 0.8rem;\n        margin-left: 10px;\n        padding-left: 10px;\n        color: #27ae6099;\n        width: 100px;\n        line-height: 1rem;\n        }\n    }\n\n    &amp; input {\n        width: 400px;\n        height: 40px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 0;\n        background-color: #f1f1f1;\n        padding: 5px;\n    }\n\n    &amp; ul {\n        display: flex;\n    }\n\n    &amp; ul li {\n        list-style: none;\n        margin: 0 10px;\n        font-size: 1rem;\n    }\n\n    &amp; .icons li {\n        color: #27ae60;\n        font-size: 1.3rem;\n    }\n\n    &amp; .search-wrapper {\n      position: relative;\n    }\n\n    &amp; .search-wrapper::before {\n      content: '\udb80\udf49'; /_ Code glyph para mdi-magnify _/\n      font-family: 'Material Design Icons';\n      font-size: 1.2rem;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      pointer-events: none;\n    }\n\n    &amp; .search {\n      padding-right: 2rem;\n    }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"livraria-tutorial/#a-secao-hero","title":"A se\u00e7\u00e3o Hero","text":"<p>A se\u00e7\u00e3o Hero vai apresentar uma imagem e um texto que descreve o livro e autor do m\u00eas. Essa se\u00e7\u00e3o \u00e9 uma parte importante do layout, pois \u00e9 a primeira que os visitantes ver\u00e3o ao acessar a p\u00e1gina. Neste momento faremos uma implementa\u00e7\u00e3o simples, com um livro est\u00e1tico, mas que pode ser facilmente adaptada para receber dados din\u00e2micos.</p> <p>Inicialmente, vamos editar o arquivo <code>src/App.vue</code> para adicionar a se\u00e7\u00e3o Hero. Para isso, adicione o seguinte c\u00f3digo no arquivo <code>src/App.vue</code>, no bloco <code>&lt;template&gt;</code>:</p> ./scr/App.vue<pre><code>&lt;main&gt;\n  &lt;section class=\"hero\"&gt;\n    &lt;div class=\"hero-content\"&gt;\n      &lt;h3 class=\"outlined\"&gt;Livro destaque&lt;/h3&gt;\n      &lt;h2&gt;Noc Ognia&lt;/h2&gt;\n      &lt;p&gt;\n        Noc ognia \u00e9 um romance de Erich-Emmanuel Schmitt, que narra a hist\u00f3ria\n        de um homem que vive em um mundo onde as pessoas n\u00e3o podem mais sonhar.\n        O livro \u00e9 uma reflex\u00e3o sobre a import\u00e2ncia dos sonhos e da imagina\u00e7\u00e3o na\n        vida humana. Erich-Emmanuel Schmitt \u00e9 um autor franc\u00eas conhecido por\n        suas obras que exploram temas filos\u00f3ficos e existenciais. Ele \u00e9 um dos\n        autores mais traduzidos da Fran\u00e7a e suas obras t\u00eam sido amplamente\n        elogiadas pela cr\u00edtica.\n      &lt;/p&gt;\n      &lt;button&gt;Acessar p\u00e1gina do livro&lt;/button&gt;\n    &lt;/div&gt;\n    &lt;div class=\"hero-image\"&gt;\n      &lt;img src=\"/imgs/hero.png\" alt=\"Hero Image\" /&gt;\n    &lt;/div&gt;\n  &lt;/section&gt;\n&lt;/main&gt;\n</code></pre> <p>Note que o c\u00f3digo acima adiciona uma nova se\u00e7\u00e3o chamada \"hero\" ao layout. Essa se\u00e7\u00e3o cont\u00e9m um t\u00edtulo, uma descri\u00e7\u00e3o e uma imagem. O t\u00edtulo e a descri\u00e7\u00e3o s\u00e3o estilizados com classes CSS espec\u00edficas, que ser\u00e3o definidas a seguir.</p> <p>A defini\u00e7\u00e3o do estilo da se\u00e7\u00e3o Hero ser\u00e1 feita no pr\u00f3prio componente. Para isso, adicione o seguinte c\u00f3digo no arquivo <code>src/App.vue</code>, no bloco <code>&lt;style&gt;</code>:</p> ./scr/App.vue<pre><code>.hero {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5vh 9vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    color: #382c2c;\n    font-size: 3rem;\n    font-weight: 700;\n  }\n\n  &amp; .hero-content {\n    width: 50%;\n    padding-right: 20px;\n    font-weight: 400;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 20px;\n\n    &amp; h3.outlined {\n      background-color: transparent;\n      color: #27ae60;\n      border: 2px solid #27ae60;\n      padding: 15px 20px;\n      border-radius: 5px;\n      font-size: 1rem;\n    }\n\n    &amp; button {\n      margin-top: 20px;\n    }\n\n    p {\n      width: 70%;\n    }\n  }\n\n  &amp; .hero-image {\n    width: 50%;\n    text-align: right;\n    padding-right: 4vw;\n\n    &amp; img {\n      max-width: 100%;\n      height: auto;\n    }\n  }\n}\n\nbutton {\n  background-color: #27ae60;\n  color: #fff;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 5px;\n  font-size: 1rem;\n  cursor: pointer;\n  gap: 20px;\n  display: flex;\n  justify-content: center;\n\n  &amp;.outlined {\n    background-color: transparent;\n    color: #27ae60;\n    border: 2px solid #27ae60;\n  }\n\n  &amp;.plain {\n    background-color: transparent;\n    color: black;\n    border: none;\n    cursor: pointer;\n  }\n}\n</code></pre> <p>Neste caso, foi adicionado um estilo para a se\u00e7\u00e3o Hero, que inclui um layout flex\u00edvel para alinhar o conte\u00fado e a imagem. O t\u00edtulo e a descri\u00e7\u00e3o tamb\u00e9m foram estilizados com cores e tamanhos de fonte espec\u00edficos. Note que n\u00e3o deve ter sido exclu\u00eddo o c\u00f3digo do cabe\u00e7alho, pois ele \u00e9 necess\u00e1rio para a renderiza\u00e7\u00e3o correta da p\u00e1gina.</p> <p>No quadro abaixo, voc\u00ea pode ver como est\u00e1, neste ponto, o arquivo <code>src/App.vue</code>.</p>  Vers\u00e3o completa ./src/App.vue<pre><code>&lt;script setup&gt;\n&lt;/script&gt;\n\n&lt;template&gt;\n    &lt;header&gt;\n        &lt;nav&gt;\n        &lt;h1&gt;\n            &lt;a href=\"#\"&gt;\n            IFbooks\n            &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n            &lt;/a&gt;\n        &lt;/h1&gt;\n        &lt;div class=\"search-wrapper\"&gt;\n            &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n        &lt;/div&gt;\n        &lt;ul&gt;\n            &lt;li&gt;Termos&lt;/li&gt;\n            &lt;li&gt;Equipe&lt;/li&gt;\n            &lt;li&gt;Envio&lt;/li&gt;\n            &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n        &lt;/ul&gt;\n        &lt;ul class=\"icons\"&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n        &lt;/nav&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;section class=\"hero\"&gt;\n            &lt;div class=\"hero-content\"&gt;\n                &lt;h2&gt;Noc Ognia&lt;/h2&gt;\n                &lt;p&gt;\n                    Noc ognia \u00e9 um romance de Erich-Emmanuel Schmitt, que narra a hist\u00f3ria de um homem que vive\n                    em um mundo onde as pessoas n\u00e3o podem mais sonhar. O livro \u00e9 uma reflex\u00e3o sobre a\n                    import\u00e2ncia dos sonhos e da imagina\u00e7\u00e3o na vida humana. Erich-Emmanuel Schmitt \u00e9 um autor\n                    franc\u00eas conhecido por suas obras que exploram temas filos\u00f3ficos e existenciais. Ele \u00e9 um dos\n                    autores mais traduzidos da Fran\u00e7a e suas obras t\u00eam sido amplamente elogiadas pela cr\u00edtica.\n                &lt;/p&gt;\n                &lt;button&gt;Acessar p\u00e1gina do livro&lt;/button&gt;\n            &lt;/div&gt;\n            &lt;div class=\"hero-image\"&gt;\n                &lt;img src=\"/imgs/hero.png\" alt=\"Hero Image\" /&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n\nheader nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 2vh 8vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; h1 {\n        font-size: 1.3rem;\n        color: #000;\n\n        &amp; a {\n            text-decoration: none;\n            color: #000;\n            display: flex;\n            align-items: center;\n        }\n\n        &amp; .logo-title {\n            border-left: 1px solid #27ae6099;\n            font-size: 0.8rem;\n            margin-left: 10px;\n            padding-left: 10px;\n            color: #27ae6099;\n            width: 100px;\n            line-height: 1rem;\n        }\n    }\n\n    &amp; input {\n        width: 400px;\n        height: 40px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 0;\n        background-color: #f1f1f1;\n        padding: 5px;\n    }\n\n    &amp; ul {\n        display: flex;\n    }\n\n    &amp; ul li {\n        list-style: none;\n        margin: 0 10px;\n        font-size: 1rem;\n    }\n\n    &amp; .icons li {\n        color: #27ae60;\n        font-size: 1.3rem;\n    }\n\n    &amp; .search-wrapper {\n        position: relative;\n    }\n\n    &amp; .search-wrapper::before {\n        content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n        font-family: 'Material Design Icons';\n        font-size: 1.2rem;\n        position: absolute;\n        right: 0.75rem;\n        top: 50%;\n        transform: translateY(-50%);\n        pointer-events: none;\n    }\n\n    &amp; .search {\n        padding-right: 2rem;\n    }\n}\n\n.hero {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 5vh 9vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; h2 {\n        color: #382c2c;\n        font-size: 3rem;\n        font-weight: 700;\n    }\n\n    &amp; .hero-content {\n        width: 50%;\n        padding-right: 20px;\n        font-weight: 400;\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n        gap: 20px;\n\n        &amp; h3.outlined {\n            background-color: transparent;\n            color: #27ae60;\n            border: 2px solid #27ae60;\n            padding: 15px 20px;\n            border-radius: 5px;\n            font-size: 1rem;\n        }\n\n        &amp; button {\n            margin-top: 20px;\n        }\n\n        p {\n            width: 70%;\n        }\n    }\n\n    &amp; .hero-image {\n        width: 50%;\n        text-align: right;\n        padding-right: 4vw;\n\n        &amp; img {\n            max-width: 100%;\n            height: auto;\n        }\n    }\n}\n\nbutton {\n    background-color: #27ae60;\n    color: #fff;\n    border: none;\n    padding: 15px 20px;\n    border-radius: 5px;\n    font-size: 1rem;\n    cursor: pointer;\n    gap: 20px;\n    display: flex;\n    justify-content: center;\n\n    &amp;.outlined {\n        background-color: transparent;\n        color: #27ae60;\n        border: 2px solid #27ae60;\n    }\n\n    &amp;.plain {\n        background-color: transparent;\n        color: black;\n        border: none;\n        cursor: pointer;\n    }\n}\n\n&lt;/style&gt;\n</code></pre>"},{"location":"livraria-tutorial/#a-secao-featured","title":"A se\u00e7\u00e3o Featured","text":"<p>Ne sequ\u00eancia, vamos implementar a se\u00e7\u00e3o Featured, que \u00e9 uma se\u00e7\u00e3o que exibe informa\u00e7\u00f5es sobre os livros mais vendidos, livros recomendados e frete gr\u00e1tis para SC. Essa se\u00e7\u00e3o ser\u00e1 exibida logo abaixo da se\u00e7\u00e3o Hero.</p> <p>Vamos ainda editar o arquivo <code>src/App.vue</code> e adicionar o seguinte c\u00f3digo no bloco <code>&lt;template&gt;</code>, logo abaixo da se\u00e7\u00e3o Hero:</p> ./src/App.vue<pre><code>    &lt;section class=\"featured\"&gt;\n        &lt;div&gt;\n            &lt;span class=\"mdi mdi-truck\"&gt;&lt;/span&gt;\n            &lt;h2&gt;Frete gr\u00e1tis para SC&lt;/h2&gt;\n        &lt;/div&gt;\n        &lt;div&gt;\n            &lt;span class=\"mdi mdi-star\"&gt;&lt;/span&gt;\n            &lt;h2&gt;Livros recomendados&lt;/h2&gt;\n        &lt;/div&gt;\n        &lt;div&gt;\n            &lt;span class=\"mdi mdi-book-open-page-variant\"&gt;&lt;/span&gt;\n            &lt;h2&gt;Mais vendidos&lt;/h2&gt;\n        &lt;/div&gt;\n    &lt;/section&gt;\n&lt;/main&gt;\n</code></pre> <p>Note que \u00e9 um c\u00f3digo simples, que apenas exibe tr\u00eas informa\u00e7\u00f5es. A se\u00e7\u00e3o \u00e9 composta por tr\u00eas divs, cada uma contendo um \u00edcone e um t\u00edtulo. Os \u00edcones s\u00e3o representados por classes do Material Design Icons.</p> <p>Para estilizar a se\u00e7\u00e3o Featured, adicione o seguinte c\u00f3digo no arquivo <code>src/App.vue</code>, no bloco <code>&lt;style&gt;</code>(1):</p> <ol> <li>Sugiro que voc\u00ea adicione o c\u00f3digo CSS logo ap\u00f3s a defini\u00e7\u00e3o das informa\u00e7\u00f5es da se\u00e7\u00e3o Hero, para facilitar a leitura do c\u00f3digo.</li> </ol> ./src/App.vue<pre><code>.featured {\n  display: flex;\n  padding: 3vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; div {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    justify-content: center;\n    gap: 10px;\n\n    &amp; span {\n      font-size: 2rem;\n    }\n\n    &amp; h2 {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n  }\n\n  &amp; article:nth-child(2) {\n    border-left: 1px solid #27ae6099;\n    border-right: 1px solid #27ae6099;\n  }\n}\n</code></pre> <p>No c\u00f3digo acima, a se\u00e7\u00e3o Featured \u00e9 estilizada para exibir tr\u00eas informa\u00e7\u00f5es em uma linha. Cada informa\u00e7\u00e3o \u00e9 composta por um \u00edcone e um t\u00edtulo. A se\u00e7\u00e3o \u00e9 dividida em tr\u00eas partes, cada uma ocupando um espa\u00e7o igual na tela. A se\u00e7\u00e3o tamb\u00e9m possui uma borda inferior para separ\u00e1-la da se\u00e7\u00e3o Hero.</p> <p>No bloco abaixo est\u00e1 vers\u00e3o completa desenvolvida at\u00e9 aqui. Voc\u00ea pode comparar com o c\u00f3digo que voc\u00ea desenvolveu at\u00e9 agora e verificar se est\u00e1 tudo certo.</p>  Vers\u00e3o completa ./src/App.vue<pre><code>&lt;script setup&gt;\n&lt;/script&gt;\n\n&lt;template&gt;\n    &lt;header&gt;\n        &lt;nav&gt;\n        &lt;h1&gt;\n            &lt;a href=\"#\"&gt;\n            IFbooks\n            &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n            &lt;/a&gt;\n        &lt;/h1&gt;\n        &lt;div class=\"search-wrapper\"&gt;\n            &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n        &lt;/div&gt;\n        &lt;ul&gt;\n            &lt;li&gt;Termos&lt;/li&gt;\n            &lt;li&gt;Equipe&lt;/li&gt;\n            &lt;li&gt;Envio&lt;/li&gt;\n            &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n        &lt;/ul&gt;\n        &lt;ul class=\"icons\"&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n        &lt;/nav&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;section class=\"hero\"&gt;\n            &lt;div class=\"hero-content\"&gt;\n                &lt;h3 class=\"outlined\"&gt;Livro destaque&lt;/h3&gt;\n                &lt;h2&gt;Noc Ognia&lt;/h2&gt;\n                &lt;p&gt;\n                    Noc ognia \u00e9 um romance de Erich-Emmanuel Schmitt, que narra a hist\u00f3ria de um homem que\n                    vive em um mundo onde as pessoas n\u00e3o podem mais sonhar. O livro \u00e9 uma reflex\u00e3o sobre a\n                    import\u00e2ncia dos sonhos e da imagina\u00e7\u00e3o na vida humana. Erich-Emmanuel Schmitt \u00e9 um autor\n                    franc\u00eas conhecido por suas obras que exploram temas filos\u00f3ficos e existenciais. Ele \u00e9 um\n                    dos autores mais traduzidos da Fran\u00e7a e suas obras t\u00eam sido amplamente elogiadas pela\n                    cr\u00edtica.\n                &lt;/p&gt;\n                &lt;button&gt;Acessar p\u00e1gina do livro&lt;/button&gt;\n            &lt;/div&gt;\n            &lt;div class=\"hero-image\"&gt;\n                &lt;img src=\"/hero.png\" alt=\"Hero Image\" /&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n        &lt;section class=\"featured\"&gt;\n            &lt;div&gt;\n                &lt;span class=\"mdi mdi-truck\"&gt;&lt;/span&gt;\n                &lt;h2&gt;Frete gr\u00e1tis para SC&lt;/h2&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;span class=\"mdi mdi-star\"&gt;&lt;/span&gt;\n                &lt;h2&gt;Livros recomendados&lt;/h2&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;span class=\"mdi mdi-book-open-page-variant\"&gt;&lt;/span&gt;\n                &lt;h2&gt;Mais vendidos&lt;/h2&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 2vh 8vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; h1 {\n        font-size: 1.3rem;\n        color: #000;\n\n        &amp; a {\n            text-decoration: none;\n            color: #000;\n            display: flex;\n            align-items: center;\n        }\n\n        &amp; .logo-title {\n            border-left: 1px solid #27ae6099;\n            font-size: 0.8rem;\n            margin-left: 10px;\n            padding-left: 10px;\n            color: #27ae6099;\n            width: 100px;\n            line-height: 1rem;\n        }\n    }\n\n    &amp; input {\n        width: 400px;\n        height: 40px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 0;\n        background-color: #f1f1f1;\n        padding: 5px;\n    }\n\n    &amp; ul {\n        display: flex;\n    }\n\n    &amp; ul li {\n        list-style: none;\n        margin: 0 10px;\n        font-size: 1rem;\n    }\n\n    &amp; .icons li {\n        color: #27ae60;\n        font-size: 1.3rem;\n    }\n\n    &amp; .search-wrapper {\n        position: relative;\n    }\n\n    &amp; .search-wrapper::before {\n        content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n        font-family: 'Material Design Icons';\n        font-size: 1.2rem;\n        position: absolute;\n        right: 0.75rem;\n        top: 50%;\n        transform: translateY(-50%);\n        pointer-events: none;\n    }\n\n    &amp; .search {\n        padding-right: 2rem;\n    }\n}\n\n.hero {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 5vh 9vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; h2 {\n        color: #382c2c;\n        font-size: 3rem;\n        font-weight: 700;\n    }\n\n    &amp; .hero-content {\n        width: 50%;\n        padding-right: 20px;\n        font-weight: 400;\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n        gap: 20px;\n\n        &amp; h3.outlined {\n            background-color: transparent;\n            color: #27ae60;\n            border: 2px solid #27ae60;\n            padding: 15px 20px;\n            border-radius: 5px;\n            font-size: 1rem;\n        }\n\n        &amp; button {\n            margin-top: 20px;\n        }\n\n        p {\n            width: 70%;\n        }\n    }\n\n    &amp; .hero-image {\n        width: 50%;\n        text-align: right;\n        padding-right: 4vw;\n\n        &amp; img {\n            max-width: 100%;\n            height: auto;\n        }\n    }\n}\n\n.featured {\n    display: flex;\n    padding: 3vh 8vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; div {\n        display: flex;\n        align-items: center;\n        flex: 1;\n        justify-content: center;\n        gap: 10px;\n\n        &amp; span {\n            font-size: 2rem;\n        }\n\n        &amp; h2 {\n            font-size: 1.2rem;\n            font-weight: 700;\n        }\n    }\n\n    &amp; article:nth-child(2) {\n        border-left: 1px solid #27ae6099;\n        border-right: 1px solid #27ae6099;\n    }\n}\n\nbutton {\n    background-color: #27ae60;\n    color: #fff;\n    border: none;\n    padding: 15px 20px;\n    border-radius: 5px;\n    font-size: 1rem;\n    cursor: pointer;\n    gap: 20px;\n    display: flex;\n    justify-content: center;\n\n    &amp;.outlined {\n        background-color: transparent;\n        color: #27ae60;\n        border: 2px solid #27ae60;\n    }\n\n    &amp;.plain {\n        background-color: transparent;\n        color: black;\n        border: none;\n        cursor: pointer;\n    }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"livraria-tutorial/#a-listagem-de-livros","title":"A listagem de livros","text":"<p>Vamos agora fazer uma parte central do nosso projeto, que \u00e9 a listagem de livros. Como queremos mostrar v\u00e1rios livros, vamoos iniciar criando um array com os livros que queremos exibir. Para isso, vamos criar um array de objetos, onde cada objeto representa um livro. Cada livro ter\u00e1 as seguintes propriedades:</p> <ul> <li><code>id</code>: um n\u00famero inteiro que representa o ID do livro.</li> <li><code>title</code>: uma string que representa o t\u00edtulo do livro.</li> <li><code>cover</code>: uma string que representa o caminho da imagem de capa do livro.</li> <li><code>price</code>: um n\u00famero que representa o pre\u00e7o do livro.</li> <li><code>author</code>: uma string que representa o autor do livro.</li> </ul> <p>Para dar in\u00edcio a essa parte, vamos editar o arquivo <code>src/App.vue</code> e adicionar o seguinte c\u00f3digo no bloco <code>&lt;script setup&gt;</code>:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nconst books = [\n  {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n  },\n  {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n  },\n  {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n  },\n  {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n  },\n  {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n  },\n  {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n  },\n  {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n  },\n  {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n  },\n];\n&lt;/script&gt;\n</code></pre> <p>No futuro, n\u00f3s podemos substituir esse array por uma chamada a uma API, ou mesmo deixar essa informa\u00e7\u00e3o est\u00e1tica em um arquivo JSON. Mas, por enquanto, vamos deixar assim.</p> <p>Agora, vamos exibir esses livros na tela. Para isso, vamos criar um loop <code>v-for</code> no bloco <code>&lt;template&gt;</code> do arquivo <code>src/App.vue</code>. O loop <code>v-for</code> \u00e9 usado para iterar sobre os itens de um array e renderizar um elemento para cada item. Vamos adicionar o seguinte c\u00f3digo no bloco <code>&lt;template&gt;</code>, logo abaixo da se\u00e7\u00e3o Featured:</p> ./src/App.vue<pre><code>&lt;section class=\"books\"&gt;\n  &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n    &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n    &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n    &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n    &lt;span class=\"price-and-like\"&gt;\n      &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n      &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n    &lt;/span&gt;\n    &lt;button&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n  &lt;/article&gt;\n&lt;/section&gt;\n</code></pre> <p>Note que criamos uma se\u00e7\u00e3o com a classe <code>books</code>, que cont\u00e9m um loop <code>v-for</code> que itera sobre o array <code>books</code>, dentro de uma tag <code>article</code>. Dessa forma, para cada livro, criamos um elemento <code>&lt;article&gt;</code> com a classe <code>book</code>, que cont\u00e9m a imagem de capa do livro, o t\u00edtulo, o autor, o pre\u00e7o e um bot\u00e3o de compra. O bot\u00e3o de compra cont\u00e9m um \u00edcone de carrinho. Tamb\u00e9m aqui, para cada elemento, foram utilizadas classes espec\u00edficas para depois serem estilizadas no CSS.</p> <p>Ainda, temos alguns recurso de renderiza\u00e7\u00e3o interessantes utilizados:</p> <ul> <li>O <code>:src</code> e <code>:alt</code> s\u00e3o usados para definir o caminho da imagem e o texto alternativo da imagem, respectivamente. O <code>:</code> indica que estamos usando uma express\u00e3o Vue, a diretiva <code>v-bind</code>, para definir o valor.</li> <li>O <code>{{ book.title }}</code> e <code>{{ book.author }}</code> s\u00e3o usados para exibir o t\u00edtulo e o autor do livro, respectivamente. O <code>{{ }}</code> indica que estamos usando uma express\u00e3o Vue para interpolar o valor.</li> <li>Para mostrar o pre\u00e7o do livro, usamos <code>{{ book.price.toFixed(2) }}</code>, que formata o pre\u00e7o para duas casas decimais. Note que o <code>toFixed(2)</code> \u00e9 um m\u00e9todo do JavaScript que formata um n\u00famero para ter um n\u00famero fixo de casas decimais.</li> </ul> <p>Por, perceba que ainda n\u00e3o implementamos a funcionalidade do bot\u00e3o de compra. Isso ser\u00e1 feito em um pr\u00f3ximo passo.</p> <p>Agora, vamos estilizar a se\u00e7\u00e3o de livros. Para isso, adicione o seguinte c\u00f3digo no arquivo <code>src/App.vue</code>, no bloco <code>&lt;style&gt;</code>, logo ap\u00f3s a defini\u00e7\u00e3o da se\u00e7\u00e3o Featured:</p> ./src/assets/main.css<pre><code>.books {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  padding: 5vh 8vw;\n\n  &amp; .book {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: calc(100% / 4 - 42px);\n    margin: 20px;\n\n    &amp; h2 {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n\n    &amp; .book-author {\n      font-size: 1rem;\n    }\n\n    &amp; .book-price {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; .price-and-like {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      &amp; .mdi-heart-outline {\n        font-size: 1.3rem;\n        color: #27ae60;\n      }\n    }\n  }\n}\n</code></pre> <p>O c\u00f3digo acima estiliza a se\u00e7\u00e3o de livros. A se\u00e7\u00e3o \u00e9 exibida como uma grade, com cada livro ocupando uma coluna. O n\u00famero de colunas \u00e9 ajustado automaticamente com base no tamanho da tela, usando a propriedade <code>grid-template-columns: repeat(auto-fit, minmax(300px, 1fr))</code>. Isso significa que cada coluna ter\u00e1 um tamanho m\u00ednimo de 300 pixels e ocupar\u00e1 o restante do espa\u00e7o dispon\u00edvel. A se\u00e7\u00e3o tamb\u00e9m possui um espa\u00e7amento de 20 pixels entre os livros.</p> <p>Outra coisa interessante \u00e9 que, para cada livro, o t\u00edtulo e o autor s\u00e3o estilizados com tamanhos de fonte diferentes. O pre\u00e7o do livro \u00e9 exibido em negrito e com um tamanho de fonte maior. O \u00edcone de cora\u00e7\u00e3o \u00e9 estilizado com uma cor em tom verde.</p> <p>O quadro abaixo mostra o resultado final do c\u00f3digo que implementamos at\u00e9 agora.</p>  Vers\u00e3o completa ./src/App.vue<pre><code>&lt;script setup&gt;\n    const books = [\n        {\n            id: 1,\n            title: 'Comigo na livraria',\n            cover: '/covers/comigo-na-livraria.png',\n            price: 23.24,\n            author: 'Martha Medeiros',\n        },\n        {\n            id: 2,\n            title: 'Quincas Borba',\n            cover: '/covers/quincas-borba.png',\n            price: 23.24,\n            author: 'Machado de Assis',\n        },\n        {\n            id: 3,\n            title: 'A livraria',\n            cover: '/covers/a-livraria.png',\n            price: 13.94,\n            author: 'Penelope Fitzgerald',\n        },\n        {\n            id: 4,\n            title: 'A hora da estrela',\n            cover: '/covers/a-hora-da-estrela.png',\n            price: 16.84,\n            author: 'Clarice Lispector',\n        },\n        {\n            id: 5,\n            title: 'O alienista',\n            cover: '/covers/o-alienista.png',\n            price: 266.92,\n            author: 'Machado de Assis',\n        },\n        {\n            id: 6,\n            title: 'Mar morto',\n            cover: '/covers/mar-morto.png',\n            price: 13.95,\n            author: 'Jorge Amado',\n        },\n        {\n            id: 7,\n            title: 'Grande sert\u00e3o',\n            cover: '/covers/grande-sertao-veredas.png',\n            price: 26.04,\n            author: 'Guimar\u00e3es Rosa',\n        },\n        {\n            id: 8,\n            title: 'Flor de poemas',\n            cover: '/covers/flor-de-poema.png',\n            price: 15.81,\n            author: 'Cec\u00edlia Meireles',\n        }\n    ]\n&lt;/script&gt;\n\n&lt;template&gt;\n    &lt;header&gt;\n        &lt;nav&gt;\n            &lt;h1&gt;\n                &lt;a href=\"#\"&gt;\n                    IFbooks\n                    &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n                &lt;/a&gt;\n            &lt;/h1&gt;\n            &lt;div class=\"search-wrapper\"&gt;\n                &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n            &lt;/div&gt;\n            &lt;ul&gt;\n                &lt;li&gt;Termos&lt;/li&gt;\n                &lt;li&gt;Equipe&lt;/li&gt;\n                &lt;li&gt;Envio&lt;/li&gt;\n                &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;ul class=\"icons\"&gt;\n                &lt;li&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/nav&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;section class=\"hero\"&gt;\n            &lt;div class=\"hero-content\"&gt;\n                &lt;h3 class=\"outlined\"&gt;Livro destaque&lt;/h3&gt;\n                &lt;h2&gt;Noc Ognia&lt;/h2&gt;\n                &lt;p&gt;\n                    Noc ognia \u00e9 um romance de Erich-Emmanuel Schmitt, que narra a hist\u00f3ria de um homem que\n                    vive em um mundo onde as pessoas n\u00e3o podem mais sonhar. O livro \u00e9 uma reflex\u00e3o sobre a\n                    import\u00e2ncia dos sonhos e da imagina\u00e7\u00e3o na vida humana. Erich-Emmanuel Schmitt \u00e9 um autor\n                    franc\u00eas conhecido por suas obras que exploram temas filos\u00f3ficos e existenciais. Ele \u00e9 um\n                    dos autores mais traduzidos da Fran\u00e7a e suas obras t\u00eam sido amplamente elogiadas pela\n                    cr\u00edtica.\n                &lt;/p&gt;\n                &lt;button&gt;Acessar p\u00e1gina do livro&lt;/button&gt;\n            &lt;/div&gt;\n            &lt;div class=\"hero-image\"&gt;\n                &lt;img src=\"/hero.png\" alt=\"Hero Image\" /&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n        &lt;section class=\"featured\"&gt;\n            &lt;div&gt;\n                &lt;span class=\"mdi mdi-truck\"&gt;&lt;/span&gt;\n                &lt;h2&gt;Frete gr\u00e1tis para SC&lt;/h2&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;span class=\"mdi mdi-star\"&gt;&lt;/span&gt;\n                &lt;h2&gt;Livros recomendados&lt;/h2&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;span class=\"mdi mdi-book-open-page-variant\"&gt;&lt;/span&gt;\n                &lt;h2&gt;Mais vendidos&lt;/h2&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n        &lt;section class=\"books\"&gt;\n            &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n                &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n                &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n                &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n                &lt;span class=\"price-and-like\"&gt;\n                    &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n                    &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n                &lt;/span&gt;\n                &lt;button&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n            &lt;/article&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 2vh 8vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; h1 {\n        font-size: 1.3rem;\n        color: #000;\n\n        &amp; a {\n            text-decoration: none;\n            color: #000;\n            display: flex;\n            align-items: center;\n        }\n\n        &amp; .logo-title {\n            border-left: 1px solid #27ae6099;\n            font-size: 0.8rem;\n            margin-left: 10px;\n            padding-left: 10px;\n            color: #27ae6099;\n            width: 100px;\n            line-height: 1rem;\n        }\n    }\n\n    &amp; input {\n        width: 400px;\n        height: 40px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 0;\n        background-color: #f1f1f1;\n        padding: 5px;\n    }\n\n    &amp; ul {\n        display: flex;\n    }\n\n    &amp; ul li {\n        list-style: none;\n        margin: 0 10px;\n        font-size: 1rem;\n    }\n\n    &amp; .icons li {\n        color: #27ae60;\n        font-size: 1.3rem;\n    }\n\n    &amp; .search-wrapper {\n        position: relative;\n    }\n\n    &amp; .search-wrapper::before {\n        content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n        font-family: 'Material Design Icons';\n        font-size: 1.2rem;\n        position: absolute;\n        right: 0.75rem;\n        top: 50%;\n        transform: translateY(-50%);\n        pointer-events: none;\n    }\n\n    &amp; .search {\n        padding-right: 2rem;\n    }\n}\n\n.hero {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 5vh 9vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; h2 {\n        color: #382c2c;\n        font-size: 3rem;\n        font-weight: 700;\n    }\n\n    &amp; .hero-content {\n        width: 50%;\n        padding-right: 20px;\n        font-weight: 400;\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n        gap: 20px;\n\n        &amp; h3.outlined {\n            background-color: transparent;\n            color: #27ae60;\n            border: 2px solid #27ae60;\n            padding: 15px 20px;\n            border-radius: 5px;\n            font-size: 1rem;\n        }\n\n        &amp; button {\n            margin-top: 20px;\n        }\n\n        p {\n         width: 70%;\n        }\n    }\n\n    &amp; .hero-image {\n        width: 50%;\n        text-align: right;\n        padding-right: 4vw;\n\n        &amp; img {\n            max-width: 100%;\n            height: auto;\n        }\n    }\n}\n\n.featured {\n    display: flex;\n    padding: 3vh 8vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; div {\n        display: flex;\n        align-items: center;\n        flex: 1;\n        justify-content: center;\n        gap: 10px;\n\n        &amp; span {\n            ont-size: 2rem;\n        }\n\n        &amp; h2 {\n            font-size: 1.2rem;\n            font-weight: 700;\n        }\n    }\n\n    &amp; article:nth-child(2) {\n        border-left: 1px solid #27ae6099;\n        border-right: 1px solid #27ae6099;\n    }\n}\n\n.books {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    padding: 5vh 8vw;\n\n    &amp; .book {\n        display: flex;\n        flex-direction: column;\n        min-width: 300px;\n        width: calc(100% / 4 - 42px);\n        margin: 20px;\n\n        &amp; h2 {\n            font-size: 1.5rem;\n            font-weight: 700;\n        }\n\n        &amp; .book-author {\n            font-size: 1rem;\n        }\n\n        &amp; .book-price {\n            font-size: 1.2rem;\n            font-weight: 700;\n        }\n\n        &amp; .price-and-like {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 20px;\n\n            &amp; .mdi-heart-outline {\n                font-size: 1.3rem;\n                color: #27ae60;\n            }\n        }\n    }\n}\n\nbutton {\n    background-color: #27ae60;\n    color: #fff;\n    border: none;\n    padding: 15px 20px;\n    border-radius: 5px;\n    font-size: 1rem;\n    cursor: pointer;\n    gap: 20px;\n    display: flex;\n    justify-content: center;\n\n    &amp;.outlined {\n        background-color: transparent;\n        color: #27ae60;\n        border: 2px solid #27ae60;\n    }\n\n    &amp;.plain {\n        background-color: transparent;\n        color: black;\n        border: none;\n        cursor: pointer;\n    }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"livraria-tutorial/#a-secao-footer","title":"A se\u00e7\u00e3o Footer","text":"<p>Por fim, a se\u00e7\u00e3o de rodap\u00e9 (footer) \u00e9 a \u00faltima parte do layout. Ela cont\u00e9m informa\u00e7\u00f5es de contato e links para redes sociais. Ela \u00e9 estilizada para ter um fundo verde e texto branco, com uma borda inferior para separ\u00e1-la do restante da p\u00e1gina. Inicialmente, vamos fazer a estrutura do rodap\u00e9, e depois vamos estilizar. Para isso, edite o arquivo <code>src/App.vue</code> e adicione o seguinte c\u00f3digo no final do arquivo, antes da tag de fechamento <code>&lt;/template&gt;</code>, logo ap\u00f3s o fechamento da tag <code>&lt;main&gt;</code>:</p> ./src/App.vue<pre><code>&lt;footer&gt;\n  &lt;nav&gt;\n    &lt;section class=\"upper-footer\"&gt;\n      &lt;div&gt;\n        &lt;p class=\"footer-title\"&gt;\n          &lt;a href=\"#\"&gt; IFbooks &lt;/a&gt;\n        &lt;/p&gt;\n        &lt;ul&gt;\n          &lt;li&gt;&lt;span class=\"mdi mdi-facebook\" /&gt;&lt;/li&gt;\n          &lt;li&gt;&lt;span class=\"mdi mdi-instagram\" /&gt;&lt;/li&gt;\n          &lt;li&gt;&lt;span class=\"mdi mdi-twitter\" /&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;p class=\"contact-text\"&gt;Contato&lt;/p&gt;\n        &lt;p&gt;&lt;span class=\"mdi mdi-phone\" /&gt; +55 47 99999-9999&lt;/p&gt;\n        &lt;p&gt;&lt;span class=\"mdi mdi-clock\" /&gt; 8h \u00e0s 23h - Seg a Sex&lt;/p&gt;\n        &lt;p&gt;&lt;span class=\"mdi mdi-email\" /&gt; contato@ifbooks.com.br&lt;/p&gt;\n        &lt;div class=\"payment-methods\"&gt;\n          &lt;span class=\"mdi mdi-visa\" /&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n    &lt;section class=\"lower-footer\"&gt;\n      &lt;p&gt;&amp;copy; Alguns direitos reservados. IFBooks. 2025&lt;/p&gt;\n    &lt;/section&gt;\n  &lt;/nav&gt;\n&lt;/footer&gt;\n</code></pre> <p>Agora, vamos estilizar o rodap\u00e9. Para isso, adicione o seguinte c\u00f3digo no bloco <code>&lt;style&gt;</code> do arquivo <code>src/App.vue</code>:</p> ./src/App.vue<pre><code>footer {\n  background-color: #27ae60;\n  padding: 2vh 8vw;\n  color: #fff;\n\n  .upper-footer {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-bottom: 100px;\n    border-bottom: 2px solid #fff;\n\n    &amp; div {\n      display: flex;\n      flex-direction: column;\n      gap: 10px;\n\n      &amp; .footer-title {\n        font-size: 1.2rem;\n        font-weight: 700;\n\n        &amp; a {\n          text-decoration: none;\n          color: #fff;\n        }\n      }\n\n      &amp; .contact-text {\n        font-size: 1.1rem;\n        font-weight: 700;\n      }\n    }\n  }\n\n  .lower-footer {\n    display: flex;\n    justify-content: center;\n    padding-top: 20px;\n    font-size: 0.8rem;\n  }\n\n  ul {\n    display: flex;\n    padding: 0;\n    gap: 20px;\n\n    li {\n      list-style: none;\n      font-size: 1.2rem;\n      color: #fff;\n    }\n  }\n}\n</code></pre> <p>O quadro abaixo mostra o resultado final do c\u00f3digo que implementamos at\u00e9 agora.</p>  Vers\u00e3o completa ./src/App.vue<pre><code>&lt;script setup&gt;\n    const books = [\n        {\n            id: 1,\n            title: 'Comigo na livraria',\n            cover: '/covers/comigo-na-livraria.png',\n            price: 23.24,\n            author: 'Martha Medeiros',\n        },\n        {\n            id: 2,\n            title: 'Quincas Borba',\n            cover: '/covers/quincas-borba.png',\n            price: 23.24,\n            author: 'Machado de Assis',\n        },\n        {\n            id: 3,\n            title: 'A livraria',\n            cover: '/covers/a-livraria.png',\n            price: 13.94,\n            author: 'Penelope Fitzgerald',\n        },\n        {\n            id: 4,\n            title: 'A hora da estrela',\n            cover: '/covers/a-hora-da-estrela.png',\n            price: 16.84,\n            author: 'Clarice Lispector',\n        },\n        {\n            id: 5,\n            title: 'O alienista',\n            cover: '/covers/o-alienista.png',\n            price: 266.92,\n            author: 'Machado de Assis',\n        },\n        {\n            id: 6,\n            title: 'Mar morto',\n            cover: '/covers/mar-morto.png',\n            price: 13.95,\n            author: 'Jorge Amado',\n        },\n        {\n            id: 7,\n            title: 'Grande sert\u00e3o',\n            cover: '/covers/grande-sertao-veredas.png',\n            price: 26.04,\n            author: 'Guimar\u00e3es Rosa',\n        },\n        {\n            id: 8,\n            title: 'Flor de poemas',\n            cover: '/covers/flor-de-poema.png',\n            price: 15.81,\n            author: 'Cec\u00edlia Meireles',\n        }\n    ]\n&lt;/script&gt;\n\n&lt;template&gt;\n    &lt;header&gt;\n        &lt;nav&gt;\n            &lt;h1&gt;\n                &lt;a href=\"#\"&gt;\n                    IFbooks\n                    &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n                &lt;/a&gt;\n            &lt;/h1&gt;\n            &lt;div class=\"search-wrapper\"&gt;\n                &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n            &lt;/div&gt;\n            &lt;ul&gt;\n                &lt;li&gt;Termos&lt;/li&gt;\n                &lt;li&gt;Equipe&lt;/li&gt;\n                &lt;li&gt;Envio&lt;/li&gt;\n                &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;ul class=\"icons\"&gt;\n                &lt;li&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/nav&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;section class=\"hero\"&gt;\n            &lt;div class=\"hero-content\"&gt;\n                &lt;h3 class=\"outlined\"&gt;Livro destaque&lt;/h3&gt;\n                &lt;h2&gt;Noc Ognia&lt;/h2&gt;\n                &lt;p&gt;\n                    Noc ognia \u00e9 um romance de Erich-Emmanuel Schmitt, que narra a hist\u00f3ria de um homem que\n                    vive em um mundo onde as pessoas n\u00e3o podem mais sonhar. O livro \u00e9 uma reflex\u00e3o sobre a\n                    import\u00e2ncia dos sonhos e da imagina\u00e7\u00e3o na vida humana. Erich-Emmanuel Schmitt \u00e9 um autor\n                    franc\u00eas conhecido por suas obras que exploram temas filos\u00f3ficos e existenciais. Ele \u00e9 um\n                    dos autores mais traduzidos da Fran\u00e7a e suas obras t\u00eam sido amplamente elogiadas pela\n                    cr\u00edtica.\n                &lt;/p&gt;\n                &lt;button&gt;Acessar p\u00e1gina do livro&lt;/button&gt;\n            &lt;/div&gt;\n            &lt;div class=\"hero-image\"&gt;\n                &lt;img src=\"/hero.png\" alt=\"Hero Image\" /&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n        &lt;section class=\"featured\"&gt;\n            &lt;div&gt;\n                &lt;span class=\"mdi mdi-truck\"&gt;&lt;/span&gt;\n                &lt;h2&gt;Frete gr\u00e1tis para SC&lt;/h2&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;span class=\"mdi mdi-star\"&gt;&lt;/span&gt;\n                &lt;h2&gt;Livros recomendados&lt;/h2&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;span class=\"mdi mdi-book-open-page-variant\"&gt;&lt;/span&gt;\n                &lt;h2&gt;Mais vendidos&lt;/h2&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n        &lt;section class=\"books\"&gt;\n            &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n                &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n                &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n                &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n                &lt;span class=\"price-and-like\"&gt;\n                    &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n                    &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n                &lt;/span&gt;\n                &lt;button&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n            &lt;/article&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\n        &lt;nav&gt;\n            &lt;section class=\"upper-footer\"&gt;\n                &lt;div&gt;\n                    &lt;p class=\"footer-title\"&gt;\n                        &lt;a href=\"#\"&gt; IFbooks &lt;/a&gt;\n                    &lt;/p&gt;\n                    &lt;ul&gt;\n                        &lt;li&gt;&lt;span class=\"mdi mdi-facebook\" /&gt;&lt;/li&gt;\n                        &lt;li&gt;&lt;span class=\"mdi mdi-instagram\" /&gt;&lt;/li&gt;\n                        &lt;li&gt;&lt;span class=\"mdi mdi-twitter\" /&gt;&lt;/li&gt;\n                    &lt;/ul&gt;\n                &lt;/div&gt;\n                &lt;div&gt;\n                    &lt;p class=\"contact-text\"&gt;Contato&lt;/p&gt;\n                    &lt;p&gt;&lt;span class=\"mdi mdi-phone\" /&gt; +55 47 99999-9999&lt;/p&gt;\n                    &lt;p&gt;&lt;span class=\"mdi mdi-clock\" /&gt; 8h \u00e0s 23h - Seg a Sex&lt;/p&gt;\n                    &lt;p&gt;&lt;span class=\"mdi mdi-email\" /&gt; contato@ifbooks.com.br&lt;/p&gt;\n                    &lt;div class=\"payment-methods\"&gt;\n                        &lt;span class=\"mdi mdi-visa\" /&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/section&gt;\n            &lt;section class=\"lower-footer\"&gt;\n                &lt;p&gt;&amp;copy; Alguns direitos reservados. IFBooks. 2025&lt;/p&gt;\n            &lt;/section&gt;\n        &lt;/nav&gt;\n    &lt;/footer&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 2vh 8vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; h1 {\n        font-size: 1.3rem;\n        color: #000;\n\n        &amp; a {\n            text-decoration: none;\n            color: #000;\n            display: flex;\n            align-items: center;\n        }\n\n        &amp; .logo-title {\n            border-left: 1px solid #27ae6099;\n            font-size: 0.8rem;\n            margin-left: 10px;\n            padding-left: 10px;\n            color: #27ae6099;\n            width: 100px;\n            line-height: 1rem;\n        }\n    }\n\n    &amp; input {\n        width: 400px;\n        height: 40px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 0;\n        background-color: #f1f1f1;\n        padding: 5px;\n    }\n\n    &amp; ul {\n        display: flex;\n    }\n\n    &amp; ul li {\n        list-style: none;\n        margin: 0 10px;\n        font-size: 1rem;\n    }\n\n    &amp; .icons li {\n        color: #27ae60;\n        font-size: 1.3rem;\n    }\n\n    &amp; .search-wrapper {\n        position: relative;\n    }\n\n    &amp; .search-wrapper::before {\n        content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n        font-family: 'Material Design Icons';\n        font-size: 1.2rem;\n        position: absolute;\n        right: 0.75rem;\n        top: 50%;\n        transform: translateY(-50%);\n        pointer-events: none;\n    }\n\n    &amp; .search {\n        padding-right: 2rem;\n    }\n}\n\n.hero {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 5vh 9vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; h2 {\n        color: #382c2c;\n        font-size: 3rem;\n        font-weight: 700;\n    }\n\n    &amp; .hero-content {\n        width: 50%;\n        padding-right: 20px;\n        font-weight: 400;\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n        gap: 20px;\n\n        &amp; h3.outlined {\n            background-color: transparent;\n            color: #27ae60;\n            border: 2px solid #27ae60;\n            padding: 15px 20px;\n            border-radius: 5px;\n            font-size: 1rem;\n        }\n\n        &amp; button {\n            margin-top: 20px;\n        }\n\n        p {\n         width: 70%;\n        }\n    }\n\n    &amp; .hero-image {\n        width: 50%;\n        text-align: right;\n        padding-right: 4vw;\n\n        &amp; img {\n            max-width: 100%;\n            height: auto;\n        }\n    }\n}\n\n.featured {\n    display: flex;\n    padding: 3vh 8vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; div {\n        display: flex;\n        align-items: center;\n        flex: 1;\n        justify-content: center;\n        gap: 10px;\n\n        &amp; span {\n            ont-size: 2rem;\n        }\n\n        &amp; h2 {\n            font-size: 1.2rem;\n            font-weight: 700;\n        }\n    }\n\n    &amp; article:nth-child(2) {\n        border-left: 1px solid #27ae6099;\n        border-right: 1px solid #27ae6099;\n    }\n}\n\n.books {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    padding: 5vh 8vw;\n\n    &amp; .book {\n        display: flex;\n        flex-direction: column;\n        min-width: 300px;\n        width: calc(100% / 4 - 42px);\n        margin: 20px;\n\n        &amp; h2 {\n            font-size: 1.5rem;\n            font-weight: 700;\n        }\n\n        &amp; .book-author {\n            font-size: 1rem;\n        }\n\n        &amp; .book-price {\n            font-size: 1.2rem;\n            font-weight: 700;\n        }\n\n        &amp; .price-and-like {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 20px;\n\n            &amp; .mdi-heart-outline {\n                font-size: 1.3rem;\n                color: #27ae60;\n            }\n        }\n    }\n}\n\nfooter {\n    background-color: #27ae60;\n    padding: 2vh 8vw;\n    color: #fff;\n\n    .upper-footer {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding-bottom: 100px;\n        border-bottom: 2px solid #fff;\n\n        &amp; div {\n            display: flex;\n            flex-direction: column;\n            gap: 10px;\n\n            &amp; .footer-title {\n                font-size: 1.2rem;\n                font-weight: 700;\n\n                &amp; a {\n                    text-decoration: none;\n                    color: #fff;\n                }\n            }\n\n            &amp; .contact-text {\n                font-size: 1.1rem;\n                font-weight: 700;\n            }\n        }\n    }\n\n    .lower-footer {\n        display: flex;\n        justify-content: center;\n        padding-top: 20px;\n        font-size: 0.8rem;\n    }\n\n    ul {\n        display: flex;\n        padding: 0;\n        gap: 20px;\n\n        li {\n            list-style: none;\n            font-size: 1.2rem;\n            color: #fff;\n        }\n    }\n}\n\nbutton {\n    background-color: #27ae60;\n    color: #fff;\n    border: none;\n    padding: 15px 20px;\n    border-radius: 5px;\n    font-size: 1rem;\n    cursor: pointer;\n    gap: 20px;\n    display: flex;\n    justify-content: center;\n\n    &amp;.outlined {\n        background-color: transparent;\n        color: #27ae60;\n        border: 2px solid #27ae60;\n    }\n\n    &amp;.plain {\n        background-color: transparent;\n        color: black;\n        border: none;\n        cursor: pointer;\n    }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"livraria-tutorial/#mostrando-o-carrinho","title":"Mostrando o carrinho","text":"<p>Agora vamos para uma parte que requer um pouco mais de aten\u00e7\u00e3o. Vamos implementar a se\u00e7\u00e3o do carrinho, que \u00e9 uma parte importante da aplica\u00e7\u00e3o. N\u00f3s n\u00e3o queremos que o carrinho seja exibido o tempo todo, mas sim quando o usu\u00e1rio clicar no \u00edcone do carrinho. Para isso, vamos usar um estado reativo para controlar a exibi\u00e7\u00e3o do carrinho.</p> <p>Primeiramente, vamos editar a se\u00e7\u00e3o <code>&lt;script&gt;</code> do arquivo <code>src/App.vue</code> para criar a vari\u00e1vel reativa que vai controlar a exibi\u00e7\u00e3o do carrinho, e tamb\u00e9m uma vari\u00e1vel que vai armazenar os livros que est\u00e3o no carrinho. Para isso, adicione o seguinte c\u00f3digo no bloco <code>&lt;script&gt;</code>:</p> ./src/App.vue<pre><code>import { ref } from 'vue';\nconst showCart = ref(false);\nconst cart = ref({\n  items: [],\n  total: 0,\n});\n</code></pre> <p>Note que o c\u00f3digo acima cria duas vari\u00e1veis reativas: <code>showCart</code> e <code>cart</code>. A vari\u00e1vel <code>showCart</code> \u00e9 um booleano que controla a exibi\u00e7\u00e3o do carrinho, enquanto a vari\u00e1vel <code>cart</code> \u00e9 um objeto que armazena os itens do carrinho e o total da compra. Depois faremos a l\u00f3gica para adicionar os livros ao carrinho e calcular o total da compra.</p> <p>Agora, vamos adicionar a l\u00f3gica para abrir e fechar o carrinho. Para isso, e altere o seguinte c\u00f3digo no bloco <code>&lt;template&gt;</code>:</p> ./src/App.vue<pre><code>&lt;ul class=\"icons\"&gt;\n  &lt;li @click=\"showCart = !showCart\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>Note que adicionamos um evento <code>@click</code> no \u00edcone do carrinho, que altera o valor da vari\u00e1vel <code>showCart</code>. Quando o usu\u00e1rio clicar no \u00edcone do carrinho, a vari\u00e1vel <code>showCart</code> ser\u00e1 alterada para <code>true</code>, e o carrinho ser\u00e1 exibido. Quando o usu\u00e1rio clicar novamente no \u00edcone do carrinho, a vari\u00e1vel <code>showCart</code> ser\u00e1 alterada para <code>false</code>, e o carrinho ser\u00e1 ocultado.</p> <p>Agora, vamos adicionar o c\u00f3digo do carrinho. Para isso, adicione o seguinte c\u00f3digo no bloco <code>&lt;template&gt;</code>, substituindo a abertura da tag <code>&lt;main&gt;</code>, logo ap\u00f3s o fechamento da tag <code>&lt;header&gt;</code>:</p> ./src/App.vue<pre><code>&lt;main v-if=\"showCart\"&gt;\n  &lt;section class=\"cart\"&gt;\n    &lt;h2&gt;Carrinho&lt;/h2&gt;\n    &lt;table&gt;\n      &lt;thead&gt;\n        &lt;tr&gt;\n          &lt;th&gt;T\u00edtulo&lt;/th&gt;\n          &lt;th&gt;Quantidade&lt;/th&gt;\n          &lt;th&gt;Subtotal&lt;/th&gt;\n        &lt;/tr&gt;\n      &lt;/thead&gt;\n      &lt;tbody&gt;\n        &lt;tr v-for=\"book in cart.items\" :key=\"book.id\"&gt;\n          &lt;td class=\"cart-item\"&gt;\n            &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n            &lt;div class=\"cart-item-info\"&gt;\n              &lt;p class=\"cart-item-title\"&gt;{{ book.title }}&lt;/p&gt;\n              &lt;p class=\"cart-item-author\"&gt;{{ book.author }}&lt;/p&gt;\n              &lt;p class=\"cart-item-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n            &lt;/div&gt;\n          &lt;/td&gt;\n          &lt;td&gt;\n            &lt;div class=\"cart-item-quantity\"&gt;\n              &lt;button class=\"plain\"&gt;\n                &lt;span class=\"mdi mdi-minus\" /&gt;\n              &lt;/button&gt;\n              {{ book.quantity }}\n              &lt;button class=\"plain\"&gt;\n                &lt;span class=\"mdi mdi-plus\" /&gt;\n              &lt;/button&gt;\n            &lt;/div&gt;\n          &lt;/td&gt;\n          &lt;td class=\"cart-item-subtotal\"&gt;\n            R$ {{ book.price * book.quantity }}\n          &lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/tbody&gt;\n    &lt;/table&gt;\n    &lt;button @click=\"showCart = false\" class=\"outlined\"&gt;Voltar para loja&lt;/button&gt;\n    &lt;div class=\"cart-summary\"&gt;\n      &lt;div class=\"cupom\"&gt;\n        &lt;input type=\"text\" placeholder=\"C\u00f3digo do cupom\" /&gt;\n        &lt;button&gt;Inserir cupom&lt;/button&gt;\n      &lt;/div&gt;\n      &lt;div class=\"summary\"&gt;\n        &lt;h2&gt;Total da Compra&lt;/h2&gt;\n        &lt;div class=\"summary-items\"&gt;\n          &lt;span&gt;Produtos&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n          &lt;span&gt;Frete&lt;/span&gt; &lt;span&gt; Gr\u00e1tis&lt;/span&gt; &lt;span&gt;Total&lt;/span&gt;\n          &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;button&gt;Ir para pagamento&lt;/button&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/section&gt;\n&lt;/main&gt;\n&lt;main v-else&gt;\n</code></pre> <p>Note que j\u00e1 na abertura da tag <code>&lt;main&gt;</code> (linha 93) foi adicionada uma diretiva <code>v-if</code> que verifica se a vari\u00e1vel <code>showCart</code> \u00e9 verdadeira. Se for, o carrinho ser\u00e1 exibido. Caso contr\u00e1rio, o carrinho n\u00e3o ser\u00e1 exibido, e ser\u00e1 exibida a tag <code>&lt;main&gt;</code> que j\u00e1 existia antes (linhas 149 em diante). Isso garante que o carrinho s\u00f3 ser\u00e1 exibido quando o usu\u00e1rio clicar no \u00edcone do carrinho.</p> <p>Dentro a nova tag <code>&lt;main&gt;</code>, foi adicionado o c\u00f3digo do carrinho. O carrinho \u00e9 exibido como uma tabela, onde cada linha representa um livro no carrinho. A tabela possui tr\u00eas colunas: t\u00edtulo, quantidade e subtotal. A coluna de t\u00edtulo exibe a imagem do livro, o t\u00edtulo, o autor e o pre\u00e7o. A coluna de quantidade exibe a quantidade do livro no carrinho e dois bot\u00f5es para aumentar ou diminuir a quantidade. A coluna de subtotal exibe o subtotal do livro (pre\u00e7o * quantidade). No final da tabela, h\u00e1 um bot\u00e3o para voltar para a loja e um resumo da compra com o total.</p> <p>O bot\u00e3o adicionado para voltar para a loja tem um evento <code>@click</code> que altera o valor da vari\u00e1vel <code>showCart</code> para <code>false</code>, ocultando o carrinho. O resumo da compra exibe o total da compra, que ainda n\u00e3o foi implementado, mas ser\u00e1 feito na pr\u00f3xima se\u00e7\u00e3o. Por fim, alguns elementos como a aplica\u00e7\u00e3o do cupom e o bot\u00e3o para ir para o pagamento foram adicionados, mas ainda n\u00e3o possuem funcionalidade.</p> <p>Agora, vamos adicionar o CSS para estilizar o carrinho. Para isso, adicione o seguinte c\u00f3digo no bloco <code>&lt;style&gt;</code> do arquivo <code>src/App.vue</code>:</p> ./src/App.vue<pre><code>.cart {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 5vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    font-size: 2rem;\n    font-weight: 700;\n    color: #27ae60;\n  }\n\n  &amp; table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 40px 0;\n\n    &amp; th,\n    td {\n      padding: 10px;\n      text-align: left;\n    }\n\n    &amp; th {\n      border-bottom: 2px solid #27ae6099;\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; td {\n      border-bottom: 1px solid rgb(128, 128, 128);\n      font-size: 1rem;\n    }\n\n    &amp; .cart-item-quantity {\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .cart-item-subtotal {\n      font-size: 1.1rem;\n      font-weight: 700;\n    }\n\n    &amp; .cart-item {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      &amp; img {\n        width: 80px;\n        height: auto;\n      }\n\n      &amp; .cart-item-info {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n\n        &amp; .cart-item-title {\n          font-size: 1.2rem;\n          font-weight: 700;\n        }\n        &amp; .cart-item-author {\n          font-size: 1rem;\n        }\n        &amp; .cart-item-price {\n          font-size: 1.1rem;\n          font-weight: 600;\n        }\n      }\n    }\n  }\n\n  &amp; .cart-summary {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n\n    &amp; .cupom {\n      display: flex;\n      align-items: center;\n      margin-top: 80px;\n      gap: 10px;\n\n      &amp; input {\n        width: 350px;\n        height: 50px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 2px solid rgb(128, 128, 128);\n        padding: 5px;\n      }\n    }\n\n    &amp; .summary {\n      border: 1px solid rgb(128, 128, 128);\n      padding: 1vw;\n\n      &amp; h2 {\n        font-size: 1.2rem;\n        font-weight: 700;\n        color: black;\n      }\n\n      &amp; .summary-items {\n        display: grid;\n        grid-template-columns: 3fr 1fr;\n\n        &amp; span {\n          padding: 10px 0;\n          border-bottom: 1px solid rgb(128, 128, 128);\n        }\n      }\n\n      &amp; button {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n</code></pre> <p>Nesse caso, a estiliza\u00e7\u00e3o do carrinho \u00e9 feita de forma semelhante \u00e0 estiliza\u00e7\u00e3o das demais se\u00e7\u00f5es do projeto, sendo que a tabela do carrinho \u00e9 estilizada para ter um layout mais limpo e organizado.</p> <p>O quadro abaixo cont\u00e9m o c\u00f3digo completo do que fizemos at\u00e9 agora, atentando-se \u00e0s partes destacadas, que correspondem ao que foi adicionado ou alterado.</p>  Vers\u00e3o completa ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\nconst showCart = ref(false)\nconst cart = ref({\n    items: [],\n    total: 0,\n})\n\nconst books = [\n    {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n    },\n    {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n    },\n    {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n    },\n    {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n    },\n    {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n    },\n    {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n    },\n]\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;h1&gt;\n        &lt;a href=\"#\"&gt;\n          IFbooks\n          &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n        &lt;/a&gt;\n      &lt;/h1&gt;\n      &lt;div class=\"search-wrapper\"&gt;\n        &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n      &lt;/div&gt;\n      &lt;ul&gt;\n        &lt;li&gt;Termos&lt;/li&gt;\n        &lt;li&gt;Equipe&lt;/li&gt;\n        &lt;li&gt;Envio&lt;/li&gt;\n        &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;ul class=\"icons\"&gt;\n        &lt;li @click=\"showCart = !showCart\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n  &lt;main v-if=\"showCart\"&gt;\n    &lt;section class=\"cart\"&gt;\n      &lt;h2&gt;Carrinho&lt;/h2&gt;\n      &lt;table&gt;\n        &lt;thead&gt;\n          &lt;tr&gt;\n            &lt;th&gt;T\u00edtulo&lt;/th&gt;\n            &lt;th&gt;Quantidade&lt;/th&gt;\n            &lt;th&gt;Subtotal&lt;/th&gt;\n          &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n          &lt;tr v-for=\"book in cart.items\" :key=\"book.id\"&gt;\n            &lt;td class=\"cart-item\"&gt;\n              &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n              &lt;div class=\"cart-item-info\"&gt;\n                &lt;p class=\"cart-item-title\"&gt;{{ book.title }}&lt;/p&gt;\n                &lt;p class=\"cart-item-author\"&gt;{{ book.author }}&lt;/p&gt;\n                &lt;p class=\"cart-item-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n              &lt;div class=\"cart-item-quantity\"&gt;\n                &lt;button class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-minus\" /&gt;\n                &lt;/button&gt;\n                {{ book.quantity }}\n                &lt;button class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-plus\" /&gt;\n                &lt;/button&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td class=\"cart-item-subtotal\"&gt;R$ {{ book.price * book.quantity }}&lt;/td&gt;\n          &lt;/tr&gt;\n        &lt;/tbody&gt;\n      &lt;/table&gt;\n      &lt;button @click=\"showCart = false\" class=\"outlined\"&gt;Voltar para loja&lt;/button&gt;\n      &lt;div class=\"cart-summary\"&gt;\n        &lt;div class=\"cupom\"&gt;\n          &lt;input type=\"text\" placeholder=\"C\u00f3digo do cupom\" /&gt;\n          &lt;button&gt;Inserir cupom&lt;/button&gt;\n        &lt;/div&gt;\n        &lt;div class=\"summary\"&gt;\n          &lt;h2&gt;Total da Compra&lt;/h2&gt;\n          &lt;div class=\"summary-items\"&gt;\n            &lt;span&gt;Produtos&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt; &lt;span&gt;Frete&lt;/span&gt;\n            &lt;span&gt; Gr\u00e1tis&lt;/span&gt; &lt;span&gt;Total&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n          &lt;/div&gt;\n          &lt;button&gt;Ir para pagamento&lt;/button&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;main v-else&gt;\n    &lt;section class=\"hero\"&gt;\n      &lt;div class=\"hero-content\"&gt;\n        &lt;h3 class=\"outlined\"&gt;Livro destaque&lt;/h3&gt;\n        &lt;h2&gt;Noc Ognia&lt;/h2&gt;\n        &lt;p&gt;\n          Noc ognia \u00e9 um romance de Erich-Emmanuel Schmitt, que narra a hist\u00f3ria de um homem que\n          vive em um mundo onde as pessoas n\u00e3o podem mais sonhar. O livro \u00e9 uma reflex\u00e3o sobre a\n          import\u00e2ncia dos sonhos e da imagina\u00e7\u00e3o na vida humana. Erich-Emmanuel Schmitt \u00e9 um autor\n          franc\u00eas conhecido por suas obras que exploram temas filos\u00f3ficos e existenciais. Ele \u00e9 um\n          dos autores mais traduzidos da Fran\u00e7a e suas obras t\u00eam sido amplamente elogiadas pela\n          cr\u00edtica.\n        &lt;/p&gt;\n        &lt;button&gt;Acessar p\u00e1gina do livro&lt;/button&gt;\n      &lt;/div&gt;\n      &lt;div class=\"hero-image\"&gt;\n        &lt;img src=\"/hero.png\" alt=\"Hero Image\" /&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n    &lt;section class=\"featured\"&gt;\n      &lt;div&gt;\n        &lt;span class=\"mdi mdi-truck\"&gt;&lt;/span&gt;\n        &lt;h2&gt;Frete gr\u00e1tis para SC&lt;/h2&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;span class=\"mdi mdi-star\"&gt;&lt;/span&gt;\n        &lt;h2&gt;Livros recomendados&lt;/h2&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;span class=\"mdi mdi-book-open-page-variant\"&gt;&lt;/span&gt;\n        &lt;h2&gt;Mais vendidos&lt;/h2&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n    &lt;section class=\"books\"&gt;\n      &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n        &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n        &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n        &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n        &lt;span class=\"price-and-like\"&gt;\n          &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n          &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n        &lt;/span&gt;\n        &lt;button&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n      &lt;/article&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;footer&gt;\n    &lt;nav&gt;\n      &lt;section class=\"upper-footer\"&gt;\n        &lt;div&gt;\n          &lt;p class=\"footer-title\"&gt;\n            &lt;a href=\"#\"&gt; IFbooks &lt;/a&gt;\n          &lt;/p&gt;\n          &lt;ul&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-facebook\" /&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-instagram\" /&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-twitter\" /&gt;&lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/div&gt;\n        &lt;div&gt;\n          &lt;p class=\"contact-text\"&gt;Contato&lt;/p&gt;\n          &lt;p&gt;&lt;span class=\"mdi mdi-phone\" /&gt; +55 47 99999-9999&lt;/p&gt;\n          &lt;p&gt;&lt;span class=\"mdi mdi-clock\" /&gt; 8h \u00e0s 23h - Seg a Sex&lt;/p&gt;\n          &lt;p&gt;&lt;span class=\"mdi mdi-email\" /&gt; contato@ifbooks.com.br&lt;/p&gt;\n          &lt;div class=\"payment-methods\"&gt;\n            &lt;span class=\"mdi mdi-visa\" /&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/section&gt;\n      &lt;section class=\"lower-footer\"&gt;\n        &lt;p&gt;&amp;copy; Alguns direitos reservados. IFBooks. 2025&lt;/p&gt;\n      &lt;/section&gt;\n    &lt;/nav&gt;\n  &lt;/footer&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h1 {\n    font-size: 1.3rem;\n    color: #000;\n\n    &amp; a {\n      text-decoration: none;\n      color: #000;\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .logo-title {\n      border-left: 1px solid #27ae6099;\n      font-size: 0.8rem;\n      margin-left: 10px;\n      padding-left: 10px;\n      color: #27ae6099;\n      width: 100px;\n      line-height: 1rem;\n    }\n  }\n\n  &amp; input {\n    width: 400px;\n    height: 40px;\n    border-radius: 5px;\n    font-size: 1rem;\n    border: 0;\n    background-color: #f1f1f1;\n    padding: 5px;\n  }\n\n  &amp; ul {\n    display: flex;\n  }\n\n  &amp; ul li {\n    list-style: none;\n    margin: 0 10px;\n    font-size: 1rem;\n  }\n\n  &amp; .icons li {\n    color: #27ae60;\n    font-size: 1.3rem;\n  }\n\n  &amp; .search-wrapper {\n    position: relative;\n  }\n\n  &amp; .search-wrapper::before {\n    content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n    font-family: 'Material Design Icons';\n    font-size: 1.2rem;\n    position: absolute;\n    right: 0.75rem;\n    top: 50%;\n    transform: translateY(-50%);\n    pointer-events: none;\n  }\n\n  &amp; .search {\n    padding-right: 2rem;\n  }\n}\n\n.hero {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5vh 9vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    color: #382c2c;\n    font-size: 3rem;\n    font-weight: 700;\n  }\n\n  &amp; .hero-content {\n    width: 50%;\n    padding-right: 20px;\n    font-weight: 400;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 20px;\n\n    &amp; h3.outlined {\n      background-color: transparent;\n      color: #27ae60;\n      border: 2px solid #27ae60;\n      padding: 15px 20px;\n      border-radius: 5px;\n      font-size: 1rem;\n    }\n\n    &amp; button {\n      margin-top: 20px;\n    }\n\n    p {\n      width: 70%;\n    }\n  }\n\n  &amp; .hero-image {\n    width: 50%;\n    text-align: right;\n    padding-right: 4vw;\n\n    &amp; img {\n      max-width: 100%;\n      height: auto;\n    }\n  }\n}\n\n.featured {\n  display: flex;\n  padding: 3vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; div {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    justify-content: center;\n    gap: 10px;\n\n    &amp; span {\n      font-size: 2rem;\n    }\n\n    &amp; h2 {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n  }\n\n  &amp; article:nth-child(2) {\n    border-left: 1px solid #27ae6099;\n    border-right: 1px solid #27ae6099;\n  }\n}\n\n.books {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  padding: 5vh 8vw;\n\n  &amp; .book {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: calc(100% / 4 - 42px);\n    margin: 20px;\n\n    &amp; h2 {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n\n    &amp; .book-author {\n      font-size: 1rem;\n    }\n\n    &amp; .book-price {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; .price-and-like {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      &amp; .mdi-heart-outline {\n        font-size: 1.3rem;\n        color: #27ae60;\n      }\n    }\n  }\n}\n\n.cart {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 5vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    font-size: 2rem;\n    font-weight: 700;\n    color: #27ae60;\n  }\n\n  &amp; table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 40px 0;\n\n    &amp; th,\n    td {\n      padding: 10px;\n      text-align: left;\n    }\n\n    &amp; th {\n      border-bottom: 2px solid #27ae6099;\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; td {\n      border-bottom: 1px solid rgb(128, 128, 128);\n      font-size: 1rem;\n    }\n\n    &amp; .cart-item-quantity {\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .cart-item-subtotal {\n      font-size: 1.1rem;\n      font-weight: 700;\n    }\n\n    &amp; .cart-item {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      &amp; img {\n        width: 80px;\n        height: auto;\n      }\n\n      &amp; .cart-item-info {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n\n        &amp; .cart-item-title {\n          font-size: 1.2rem;\n          font-weight: 700;\n        }\n        &amp; .cart-item-author {\n          font-size: 1rem;\n        }\n        &amp; .cart-item-price {\n          font-size: 1.1rem;\n          font-weight: 600;\n        }\n      }\n    }\n  }\n\n  &amp; .cart-summary {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n\n    &amp; .cupom {\n      display: flex;\n      align-items: center;\n      margin-top: 80px;\n      gap: 10px;\n\n      &amp; input {\n        width: 350px;\n        height: 50px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 2px solid rgb(128, 128, 128);\n        padding: 5px;\n      }\n    }\n\n    &amp; .summary {\n      border: 1px solid rgb(128, 128, 128);\n      padding: 1vw;\n\n      &amp; h2 {\n        font-size: 1.2rem;\n        font-weight: 700;\n        color: black;\n      }\n\n      &amp; .summary-items {\n        display: grid;\n        grid-template-columns: 3fr 1fr;\n\n        &amp; span {\n          padding: 10px 0;\n          border-bottom: 1px solid rgb(128, 128, 128);\n        }\n      }\n\n      &amp; button {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n\nfooter {\n  background-color: #27ae60;\n  padding: 2vh 8vw;\n  color: #fff;\n\n  .upper-footer {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-bottom: 100px;\n    border-bottom: 2px solid #fff;\n\n    &amp; div {\n      display: flex;\n      flex-direction: column;\n      gap: 10px;\n\n      &amp; .footer-title {\n        font-size: 1.2rem;\n        font-weight: 700;\n\n        &amp; a {\n          text-decoration: none;\n          color: #fff;\n        }\n      }\n\n      &amp; .contact-text {\n        font-size: 1.1rem;\n        font-weight: 700;\n      }\n    }\n  }\n\n  .lower-footer {\n    display: flex;\n    justify-content: center;\n    padding-top: 20px;\n    font-size: 0.8rem;\n  }\n\n  ul {\n    display: flex;\n    padding: 0;\n    gap: 20px;\n\n    li {\n      list-style: none;\n      font-size: 1.2rem;\n      color: #fff;\n    }\n  }\n}\n\nbutton {\n  background-color: #27ae60;\n  color: #fff;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 5px;\n  font-size: 1rem;\n  cursor: pointer;\n  gap: 20px;\n  display: flex;\n  justify-content: center;\n\n  &amp;.outlined {\n    background-color: transparent;\n    color: #27ae60;\n    border: 2px solid #27ae60;\n  }\n\n  &amp;.plain {\n    background-color: transparent;\n    color: black;\n    border: none;\n    cursor: pointer;\n  }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"livraria-tutorial/#adicionando-e-removendo-itens","title":"Adicionando e removendo itens","text":"<p>Vamos agora para a parte final desse tutorial, onde vamos adicionar a funcionalidade de adicionar e remover itens do carrinho. Ainda vamos fazer tudo isso de forma simples, sem usar componentes ou gerenciamento de estados.</p> <p>Primeiramente, vamos adicionar as fun\u00e7\u00f5es para adicionar ou remover itens no carrinho. N\u00f3s faremos tr\u00eas fun\u00e7\u00f5es distintas:</p> <ul> <li><code>addToCart</code>: adiciona um livro ao carrinho.</li> <li><code>incrementBookToCart</code>: incrementa a quantidade de um livro j\u00e1 adicionado ao carrinho.</li> <li><code>decrementBookToCart</code>: decrementa a quantidade de um livro j\u00e1 adicionado ao carrinho.</li> </ul> <p>As fun\u00e7\u00f5es devem ser implementadas no arquivo <code>src/App.vue</code>, dentro do bloco <code>&lt;script setup&gt;</code>. O c\u00f3digo deve ficar assim:</p> ./src/App.vue<pre><code>function decrementBookToCart(book) {\n  const existingBook = cart.value.items.find((item) =&gt; item.id === book.id);\n  if (existingBook.quantity === 1) {\n    cart.value.items = cart.value.items.filter((item) =&gt; item.id !== book.id);\n  } else {\n    existingBook.quantity--;\n  }\n  cart.value.total -= book.price;\n}\n\nfunction incrementBookToCart(book) {\n  const existingBook = cart.value.items.find((item) =&gt; item.id === book.id);\n  existingBook.quantity++;\n  cart.value.total += book.price;\n}\n\nfunction addToCart(book) {\n  const existingBook = cart.value.items.find((item) =&gt; item.id === book.id);\n  if (existingBook) {\n    existingBook.quantity++;\n  } else {\n    cart.value.items.push({ ...book, quantity: 1 });\n  }\n  cart.value.total += book.price;\n  alert(`Adicionado ${book.title} ao carrinho!`);\n}\n</code></pre> <p>Note que em todos os casos foi recalculado o total do carrinho, que \u00e9 a soma dos pre\u00e7os de todos os livros. Tamb\u00e9m, foi adicionado um alerta para informar ao usu\u00e1rio que o livro foi adicionado ao carrinho.</p> <p>Com as fun\u00e7\u00f5es j\u00e1 desenvolvidas, vamos agora adicionar os eventos de clique nos bot\u00f5es de adicionar item ao carrinho e tamb\u00e9m de incrementar e decrementar a quantidade de livros no carrinho. Para isso, vamos editar o arquivo <code>src/App.vue</code> e adicionar os eventos de clique nos bot\u00f5es. Ser\u00e3o feitas duas altera\u00e7\u00f5es no c\u00f3digo. Na primeira, vamos usar as fun\u00e7\u00f5es <code>incrementBookToCart</code> e <code>decrementBookToCart</code> para incrementar e decrementar a quantidade de livros no carrinho. Para isso, vamos editar o arquivo <code>src/App.vue</code>, e alterar <code>&lt;div&gt;</code> que possui a classe <code>cart-item-quantity</code> para o seguinte c\u00f3digo:</p> ./src/App.vue<pre><code>&lt;div class=\"cart-item-quantity\"&gt;\n  &lt;button @click=\"decrementBookToCart(book)\" class=\"plain\"&gt;\n    &lt;span class=\"mdi mdi-minus\" /&gt;\n  &lt;/button&gt;\n  {{ book.quantity }}\n  &lt;button @click=\"incrementBookToCart(book)\" class=\"plain\"&gt;\n    &lt;span class=\"mdi mdi-plus\" /&gt;\n  &lt;/button&gt;\n&lt;/div&gt;\n</code></pre> <p>Note que foram adicionados os eventos de clique nos bot\u00f5es de incrementar e decrementar a quantidade de livros no carrinho.</p> <p>Tamb\u00e9m, vamos adicionar o evento de clique no bot\u00e3o de adicionar livro ao carrinho. Para isso, vamos editar o arquivo <code>src/App.vue</code>, e alterar o bot\u00e3o de adicionar livro ao carrinho, dentro do la\u00e7o de repeti\u00e7\u00e3o da tag <code>&lt;article&gt;</code>, para o seguinte c\u00f3digo:</p> ./src/App.vue<pre><code>&lt;button @click=\"addToCart(book)\"&gt;\n  &lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar\n&lt;/button&gt;\n</code></pre> <p>Com essas altera\u00e7\u00f5es realizadas, o c\u00f3digo do arquivo <code>src/App.vue</code> deve ficar com o apresentado no quadro abaixo.</p>  Vers\u00e3o completa ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\nconst showCart = ref(false)\nconst cart = ref({\n  items: [],\n  total: 0,\n})\nconst books = [\n  {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n  },\n  {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n  },\n  {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n  },\n  {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n  },\n  {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n  },\n  {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n  },\n  {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n  },\n  {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n  },\n]\n\nfunction decrementBookToCart(book) {\n  const existingBook = cart.value.items.find((item) =&gt; item.id === book.id)\n  if (existingBook.quantity === 1) {\n    cart.value.items = cart.value.items.filter((item) =&gt; item.id !== book.id)\n  } else {\n    existingBook.quantity--\n  }\n  cart.value.total -= book.price\n}\n\nfunction incrementBookToCart(book) {\n  const existingBook = cart.value.items.find((item) =&gt; item.id === book.id)\n  existingBook.quantity++\n  cart.value.total += book.price\n}\n\nfunction addToCart(book) {\n  const existingBook = cart.value.items.find((item) =&gt; item.id === book.id)\n  if (existingBook) {\n    existingBook.quantity++\n  } else {\n    cart.value.items.push({ ...book, quantity: 1 })\n  }\n  cart.value.total += book.price\n  alert(`Adicionado ${book.title} ao carrinho!`)\n}\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;h1&gt;\n        &lt;a href=\"#\"&gt;\n          IFbooks\n          &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n        &lt;/a&gt;\n      &lt;/h1&gt;\n      &lt;div class=\"search-wrapper\"&gt;\n        &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n      &lt;/div&gt;\n      &lt;ul&gt;\n        &lt;li&gt;Termos&lt;/li&gt;\n        &lt;li&gt;Equipe&lt;/li&gt;\n        &lt;li&gt;Envio&lt;/li&gt;\n        &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;ul class=\"icons\"&gt;\n        &lt;li @click=\"showCart = !showCart\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n  &lt;main v-if=\"showCart\"&gt;\n    &lt;section class=\"cart\"&gt;\n      &lt;h2&gt;Carrinho&lt;/h2&gt;\n      &lt;table&gt;\n        &lt;thead&gt;\n          &lt;tr&gt;\n            &lt;th&gt;T\u00edtulo&lt;/th&gt;\n            &lt;th&gt;Quantidade&lt;/th&gt;\n            &lt;th&gt;Subtotal&lt;/th&gt;\n          &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n          &lt;tr v-for=\"book in cart.items\" :key=\"book.id\"&gt;\n            &lt;td class=\"cart-item\"&gt;\n              &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n              &lt;div class=\"cart-item-info\"&gt;\n                &lt;p class=\"cart-item-title\"&gt;{{ book.title }}&lt;/p&gt;\n                &lt;p class=\"cart-item-author\"&gt;{{ book.author }}&lt;/p&gt;\n                &lt;p class=\"cart-item-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n              &lt;div class=\"cart-item-quantity\"&gt;\n                &lt;button @click=\"decrementBookToCart(book)\" class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-minus\" /&gt;\n                &lt;/button&gt;\n                {{ book.quantity }}\n                &lt;button @click=\"incrementBookToCart(book)\" class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-plus\" /&gt;\n                &lt;/button&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td class=\"cart-item-subtotal\"&gt;R$ {{ book.price * book.quantity }}&lt;/td&gt;\n          &lt;/tr&gt;\n        &lt;/tbody&gt;\n      &lt;/table&gt;\n      &lt;button @click=\"showCart = false\" class=\"outlined\"&gt;Voltar para loja&lt;/button&gt;\n      &lt;div class=\"cart-summary\"&gt;\n        &lt;div class=\"cupom\"&gt;\n          &lt;input type=\"text\" placeholder=\"C\u00f3digo do cupom\" /&gt;\n          &lt;button&gt;Inserir cupom&lt;/button&gt;\n        &lt;/div&gt;\n        &lt;div class=\"summary\"&gt;\n          &lt;h2&gt;Total da Compra&lt;/h2&gt;\n          &lt;div class=\"summary-items\"&gt;\n            &lt;span&gt;Produtos&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt; &lt;span&gt;Frete&lt;/span&gt;\n            &lt;span&gt; Gr\u00e1tis&lt;/span&gt; &lt;span&gt;Total&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n          &lt;/div&gt;\n          &lt;button&gt;Ir para pagamento&lt;/button&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;main v-else&gt;\n    &lt;section class=\"hero\"&gt;\n      &lt;div class=\"hero-content\"&gt;\n        &lt;h3 class=\"outlined\"&gt;Livro destaque&lt;/h3&gt;\n        &lt;h2&gt;Noc Ognia&lt;/h2&gt;\n        &lt;p&gt;\n          Noc ognia \u00e9 um romance de Erich-Emmanuel Schmitt, que narra a hist\u00f3ria de um homem que\n          vive em um mundo onde as pessoas n\u00e3o podem mais sonhar. O livro \u00e9 uma reflex\u00e3o sobre a\n          import\u00e2ncia dos sonhos e da imagina\u00e7\u00e3o na vida humana. Erich-Emmanuel Schmitt \u00e9 um autor\n          franc\u00eas conhecido por suas obras que exploram temas filos\u00f3ficos e existenciais. Ele \u00e9 um\n          dos autores mais traduzidos da Fran\u00e7a e suas obras t\u00eam sido amplamente elogiadas pela\n          cr\u00edtica.\n        &lt;/p&gt;\n        &lt;button&gt;Acessar p\u00e1gina do livro&lt;/button&gt;\n      &lt;/div&gt;\n      &lt;div class=\"hero-image\"&gt;\n        &lt;img src=\"/hero.png\" alt=\"Hero Image\" /&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n    &lt;section class=\"featured\"&gt;\n      &lt;div&gt;\n        &lt;span class=\"mdi mdi-truck\"&gt;&lt;/span&gt;\n        &lt;h2&gt;Frete gr\u00e1tis para SC&lt;/h2&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;span class=\"mdi mdi-star\"&gt;&lt;/span&gt;\n        &lt;h2&gt;Livros recomendados&lt;/h2&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;span class=\"mdi mdi-book-open-page-variant\"&gt;&lt;/span&gt;\n        &lt;h2&gt;Mais vendidos&lt;/h2&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n    &lt;section class=\"books\"&gt;\n      &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n        &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n        &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n        &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n        &lt;span class=\"price-and-like\"&gt;\n          &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n          &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n        &lt;/span&gt;\n        &lt;button @click=\"addToCart(book)\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n      &lt;/article&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;footer&gt;\n    &lt;nav&gt;\n      &lt;section class=\"upper-footer\"&gt;\n        &lt;div&gt;\n          &lt;p class=\"footer-title\"&gt;\n            &lt;a href=\"#\"&gt; IFbooks &lt;/a&gt;\n          &lt;/p&gt;\n          &lt;ul&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-facebook\" /&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-instagram\" /&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-twitter\" /&gt;&lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/div&gt;\n        &lt;div&gt;\n          &lt;p class=\"contact-text\"&gt;Contato&lt;/p&gt;\n          &lt;p&gt;&lt;span class=\"mdi mdi-phone\" /&gt; +55 47 99999-9999&lt;/p&gt;\n          &lt;p&gt;&lt;span class=\"mdi mdi-clock\" /&gt; 8h \u00e0s 23h - Seg a Sex&lt;/p&gt;\n          &lt;p&gt;&lt;span class=\"mdi mdi-email\" /&gt; contato@ifbooks.com.br&lt;/p&gt;\n          &lt;div class=\"payment-methods\"&gt;\n            &lt;span class=\"mdi mdi-visa\" /&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/section&gt;\n      &lt;section class=\"lower-footer\"&gt;\n        &lt;p&gt;&amp;copy; Alguns direitos reservados. IFBooks. 2025&lt;/p&gt;\n      &lt;/section&gt;\n    &lt;/nav&gt;\n  &lt;/footer&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h1 {\n    font-size: 1.3rem;\n    color: #000;\n\n    &amp; a {\n      text-decoration: none;\n      color: #000;\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .logo-title {\n      border-left: 1px solid #27ae6099;\n      font-size: 0.8rem;\n      margin-left: 10px;\n      padding-left: 10px;\n      color: #27ae6099;\n      width: 100px;\n      line-height: 1rem;\n    }\n  }\n\n  &amp; input {\n    width: 400px;\n    height: 40px;\n    border-radius: 5px;\n    font-size: 1rem;\n    border: 0;\n    background-color: #f1f1f1;\n    padding: 5px;\n  }\n\n  &amp; ul {\n    display: flex;\n  }\n\n  &amp; ul li {\n    list-style: none;\n    margin: 0 10px;\n    font-size: 1rem;\n  }\n\n  &amp; .icons li {\n    color: #27ae60;\n    font-size: 1.3rem;\n  }\n\n  &amp; .search-wrapper {\n    position: relative;\n  }\n\n  &amp; .search-wrapper::before {\n    content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n    font-family: 'Material Design Icons';\n    font-size: 1.2rem;\n    position: absolute;\n    right: 0.75rem;\n    top: 50%;\n    transform: translateY(-50%);\n    pointer-events: none;\n  }\n\n  &amp; .search {\n    padding-right: 2rem;\n  }\n}\n\n.hero {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5vh 9vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    color: #382c2c;\n    font-size: 3rem;\n    font-weight: 700;\n  }\n\n  &amp; .hero-content {\n    width: 50%;\n    padding-right: 20px;\n    font-weight: 400;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 20px;\n\n    &amp; h3.outlined {\n      background-color: transparent;\n      color: #27ae60;\n      border: 2px solid #27ae60;\n      padding: 15px 20px;\n      border-radius: 5px;\n      font-size: 1rem;\n    }\n\n    &amp; button {\n      margin-top: 20px;\n    }\n\n    p {\n      width: 70%;\n    }\n  }\n\n  &amp; .hero-image {\n    width: 50%;\n    text-align: right;\n    padding-right: 4vw;\n\n    &amp; img {\n      max-width: 100%;\n      height: auto;\n    }\n  }\n}\n\n.featured {\n  display: flex;\n  padding: 3vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; div {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    justify-content: center;\n    gap: 10px;\n\n    &amp; span {\n      font-size: 2rem;\n    }\n\n    &amp; h2 {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n  }\n\n  &amp; article:nth-child(2) {\n    border-left: 1px solid #27ae6099;\n    border-right: 1px solid #27ae6099;\n  }\n}\n\n.books {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  padding: 5vh 8vw;\n\n  &amp; .book {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: calc(100% / 4 - 42px);\n    margin: 20px;\n\n    &amp; h2 {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n\n    &amp; .book-author {\n      font-size: 1rem;\n    }\n\n    &amp; .book-price {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; .price-and-like {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      &amp; .mdi-heart-outline {\n        font-size: 1.3rem;\n        color: #27ae60;\n      }\n    }\n  }\n}\n\n.cart {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 5vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    font-size: 2rem;\n    font-weight: 700;\n    color: #27ae60;\n  }\n\n  &amp; table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 40px 0;\n\n    &amp; th,\n    td {\n      padding: 10px;\n      text-align: left;\n    }\n\n    &amp; th {\n      border-bottom: 2px solid #27ae6099;\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; td {\n      border-bottom: 1px solid rgb(128, 128, 128);\n      font-size: 1rem;\n    }\n\n    &amp; .cart-item-quantity {\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .cart-item-subtotal {\n      font-size: 1.1rem;\n      font-weight: 700;\n    }\n\n    &amp; .cart-item {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      &amp; img {\n        width: 80px;\n        height: auto;\n      }\n\n      &amp; .cart-item-info {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n\n        &amp; .cart-item-title {\n          font-size: 1.2rem;\n          font-weight: 700;\n        }\n        &amp; .cart-item-author {\n          font-size: 1rem;\n        }\n        &amp; .cart-item-price {\n          font-size: 1.1rem;\n          font-weight: 600;\n        }\n      }\n    }\n  }\n\n  &amp; .cart-summary {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n\n    &amp; .cupom {\n      display: flex;\n      align-items: center;\n      margin-top: 80px;\n      gap: 10px;\n\n      &amp; input {\n        width: 350px;\n        height: 50px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 2px solid rgb(128, 128, 128);\n        padding: 5px;\n      }\n    }\n\n    &amp; .summary {\n      border: 1px solid rgb(128, 128, 128);\n      padding: 1vw;\n\n      &amp; h2 {\n        font-size: 1.2rem;\n        font-weight: 700;\n        color: black;\n      }\n\n      &amp; .summary-items {\n        display: grid;\n        grid-template-columns: 3fr 1fr;\n\n        &amp; span {\n          padding: 10px 0;\n          border-bottom: 1px solid rgb(128, 128, 128);\n        }\n      }\n\n      &amp; button {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n\nfooter {\n  background-color: #27ae60;\n  padding: 2vh 8vw;\n  color: #fff;\n\n  .upper-footer {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-bottom: 100px;\n    border-bottom: 2px solid #fff;\n\n    &amp; div {\n      display: flex;\n      flex-direction: column;\n      gap: 10px;\n\n      &amp; .footer-title {\n        font-size: 1.2rem;\n        font-weight: 700;\n\n        &amp; a {\n          text-decoration: none;\n          color: #fff;\n        }\n      }\n\n      &amp; .contact-text {\n        font-size: 1.1rem;\n        font-weight: 700;\n      }\n    }\n  }\n\n  .lower-footer {\n    display: flex;\n    justify-content: center;\n    padding-top: 20px;\n    font-size: 0.8rem;\n  }\n\n  ul {\n    display: flex;\n    padding: 0;\n    gap: 20px;\n\n    li {\n      list-style: none;\n      font-size: 1.2rem;\n      color: #fff;\n    }\n  }\n}\n\nbutton {\n  background-color: #27ae60;\n  color: #fff;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 5px;\n  font-size: 1rem;\n  cursor: pointer;\n  gap: 20px;\n  display: flex;\n  justify-content: center;\n\n  &amp;.outlined {\n    background-color: transparent;\n    color: #27ae60;\n    border: 2px solid #27ae60;\n  }\n\n  &amp;.plain {\n    background-color: transparent;\n    color: black;\n    border: none;\n    cursor: pointer;\n  }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"livraria-tutorial/#conclusao","title":"Conclus\u00e3o","text":"<p>Com esses passos conclu\u00eddos, voc\u00ea ter\u00e1 uma aplica\u00e7\u00e3o b\u00e1sica de carrinho de compras em Vue.js. A aplica\u00e7\u00e3o possui um cabe\u00e7alho, uma se\u00e7\u00e3o de destaque, uma se\u00e7\u00e3o de livros e um rodap\u00e9. Al\u00e9m disso, a aplica\u00e7\u00e3o possui um carrinho de compras que permite adicionar e remover produtos.</p> <p>Nas pr\u00f3ximas aulas, vamos utilizar essa aplica\u00e7\u00e3o como base para implementar funcionalidades mais avan\u00e7adas, como o uso de componentes, rotas, e gerenciamento de estado com o Pinia.</p>"},{"location":"livraria-tutorial/books/","title":"Books","text":""},{"location":"livraria-tutorial/books/#a-listagem-de-livros","title":"A listagem de livros","text":"<p>Vamos agora fazer uma parte central do nosso projeto, que \u00e9 a listagem de livros. Como queremos mostrar v\u00e1rios livros, vamoos iniciar criando um array com os livros que queremos exibir. Para isso, vamos criar um array de objetos, onde cada objeto representa um livro. Cada livro ter\u00e1 as seguintes propriedades:</p> <ul> <li><code>id</code>: um n\u00famero inteiro que representa o ID do livro.</li> <li><code>title</code>: uma string que representa o t\u00edtulo do livro.</li> <li><code>cover</code>: uma string que representa o caminho da imagem de capa do livro.</li> <li><code>price</code>: um n\u00famero que representa o pre\u00e7o do livro.</li> <li><code>author</code>: uma string que representa o autor do livro.</li> </ul> <p>Para dar in\u00edcio a essa parte, vamos editar o arquivo <code>src/App.vue</code> e adicionar o seguinte c\u00f3digo no bloco <code>&lt;script setup&gt;</code>:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nconst books = [\n  {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n  },\n  {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n  },\n  {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n  },\n  {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n  },\n  {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n  },\n  {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n  },\n  {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n  },\n  {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n  },\n];\n&lt;/script&gt;\n</code></pre> <p>No futuro, n\u00f3s podemos substituir esse array por uma chamada a uma API, ou mesmo deixar essa informa\u00e7\u00e3o est\u00e1tica em um arquivo JSON. Mas, por enquanto, vamos deixar assim.</p> <p>Agora, vamos exibir esses livros na tela. Para isso, vamos criar um loop <code>v-for</code> no bloco <code>&lt;template&gt;</code> do arquivo <code>src/App.vue</code>. O loop <code>v-for</code> \u00e9 usado para iterar sobre os itens de um array e renderizar um elemento para cada item. Vamos adicionar o seguinte c\u00f3digo no bloco <code>&lt;template&gt;</code>, logo abaixo da se\u00e7\u00e3o Featured:</p> ./src/App.vue<pre><code>&lt;section class=\"books\"&gt;\n  &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n    &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n    &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n    &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n    &lt;span class=\"price-and-like\"&gt;\n      &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n      &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n    &lt;/span&gt;\n    &lt;button&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n  &lt;/article&gt;\n&lt;/section&gt;\n</code></pre> <p>Note que criamos uma se\u00e7\u00e3o com a classe <code>books</code>, que cont\u00e9m um loop <code>v-for</code> que itera sobre o array <code>books</code>, dentro de uma tag <code>article</code>. Dessa forma, para cada livro, criamos um elemento <code>&lt;article&gt;</code> com a classe <code>book</code>, que cont\u00e9m a imagem de capa do livro, o t\u00edtulo, o autor, o pre\u00e7o e um bot\u00e3o de compra. O bot\u00e3o de compra cont\u00e9m um \u00edcone de carrinho. Tamb\u00e9m aqui, para cada elemento, foram utilizadas classes espec\u00edficas para depois serem estilizadas no CSS.</p> <p>Ainda, temos alguns recurso de renderiza\u00e7\u00e3o interessantes utilizados:</p> <ul> <li>O <code>:src</code> e <code>:alt</code> s\u00e3o usados para definir o caminho da imagem e o texto alternativo da imagem, respectivamente. O <code>:</code> indica que estamos usando uma express\u00e3o Vue, a diretiva <code>v-bind</code>, para definir o valor.</li> <li>O <code>{{ book.title }}</code> e <code>{{ book.author }}</code> s\u00e3o usados para exibir o t\u00edtulo e o autor do livro, respectivamente. O <code>{{ }}</code> indica que estamos usando uma express\u00e3o Vue para interpolar o valor.</li> <li>Para mostrar o pre\u00e7o do livro, usamos <code>{{ book.price.toFixed(2) }}</code>, que formata o pre\u00e7o para duas casas decimais. Note que o <code>toFixed(2)</code> \u00e9 um m\u00e9todo do JavaScript que formata um n\u00famero para ter um n\u00famero fixo de casas decimais.</li> </ul> <p>Por, perceba que ainda n\u00e3o implementamos a funcionalidade do bot\u00e3o de compra. Isso ser\u00e1 feito em um pr\u00f3ximo passo.</p> <p>Agora, vamos estilizar a se\u00e7\u00e3o de livros. Para isso, adicione o seguinte c\u00f3digo no arquivo <code>src/App.vue</code>, no bloco <code>&lt;style&gt;</code>, logo ap\u00f3s a defini\u00e7\u00e3o da se\u00e7\u00e3o Featured:</p> ./src/assets/main.css<pre><code>.books {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  padding: 5vh 8vw;\n\n  &amp; .book {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: calc(100% / 4 - 42px);\n    margin: 20px;\n\n    &amp; h2 {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n\n    &amp; .book-author {\n      font-size: 1rem;\n    }\n\n    &amp; .book-price {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; .price-and-like {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      &amp; .mdi-heart-outline {\n        font-size: 1.3rem;\n        color: #27ae60;\n      }\n    }\n  }\n}\n</code></pre> <p>O c\u00f3digo acima estiliza a se\u00e7\u00e3o de livros. A se\u00e7\u00e3o \u00e9 exibida como uma grade, com cada livro ocupando uma coluna. O n\u00famero de colunas \u00e9 ajustado automaticamente com base no tamanho da tela, usando a propriedade <code>grid-template-columns: repeat(auto-fit, minmax(300px, 1fr))</code>. Isso significa que cada coluna ter\u00e1 um tamanho m\u00ednimo de 300 pixels e ocupar\u00e1 o restante do espa\u00e7o dispon\u00edvel. A se\u00e7\u00e3o tamb\u00e9m possui um espa\u00e7amento de 20 pixels entre os livros.</p> <p>Outra coisa interessante \u00e9 que, para cada livro, o t\u00edtulo e o autor s\u00e3o estilizados com tamanhos de fonte diferentes. O pre\u00e7o do livro \u00e9 exibido em negrito e com um tamanho de fonte maior. O \u00edcone de cora\u00e7\u00e3o \u00e9 estilizado com uma cor em tom verde.</p> <p>O quadro abaixo mostra o resultado final do c\u00f3digo que implementamos at\u00e9 agora.</p>  Vers\u00e3o completa ./src/App.vue<pre><code>&lt;script setup&gt;\n    const books = [\n        {\n            id: 1,\n            title: 'Comigo na livraria',\n            cover: '/covers/comigo-na-livraria.png',\n            price: 23.24,\n            author: 'Martha Medeiros',\n        },\n        {\n            id: 2,\n            title: 'Quincas Borba',\n            cover: '/covers/quincas-borba.png',\n            price: 23.24,\n            author: 'Machado de Assis',\n        },\n        {\n            id: 3,\n            title: 'A livraria',\n            cover: '/covers/a-livraria.png',\n            price: 13.94,\n            author: 'Penelope Fitzgerald',\n        },\n        {\n            id: 4,\n            title: 'A hora da estrela',\n            cover: '/covers/a-hora-da-estrela.png',\n            price: 16.84,\n            author: 'Clarice Lispector',\n        },\n        {\n            id: 5,\n            title: 'O alienista',\n            cover: '/covers/o-alienista.png',\n            price: 266.92,\n            author: 'Machado de Assis',\n        },\n        {\n            id: 6,\n            title: 'Mar morto',\n            cover: '/covers/mar-morto.png',\n            price: 13.95,\n            author: 'Jorge Amado',\n        },\n        {\n            id: 7,\n            title: 'Grande sert\u00e3o',\n            cover: '/covers/grande-sertao-veredas.png',\n            price: 26.04,\n            author: 'Guimar\u00e3es Rosa',\n        },\n        {\n            id: 8,\n            title: 'Flor de poemas',\n            cover: '/covers/flor-de-poema.png',\n            price: 15.81,\n            author: 'Cec\u00edlia Meireles',\n        }\n    ]\n&lt;/script&gt;\n\n&lt;template&gt;\n    &lt;header&gt;\n        &lt;nav&gt;\n            &lt;h1&gt;\n                &lt;a href=\"#\"&gt;\n                    IFbooks\n                    &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n                &lt;/a&gt;\n            &lt;/h1&gt;\n            &lt;div class=\"search-wrapper\"&gt;\n                &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n            &lt;/div&gt;\n            &lt;ul&gt;\n                &lt;li&gt;Termos&lt;/li&gt;\n                &lt;li&gt;Equipe&lt;/li&gt;\n                &lt;li&gt;Envio&lt;/li&gt;\n                &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;ul class=\"icons\"&gt;\n                &lt;li&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/nav&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;section class=\"hero\"&gt;\n            &lt;div class=\"hero-content\"&gt;\n                &lt;h3 class=\"outlined\"&gt;Livro destaque&lt;/h3&gt;\n                &lt;h2&gt;Noc Ognia&lt;/h2&gt;\n                &lt;p&gt;\n                    Noc ognia \u00e9 um romance de Erich-Emmanuel Schmitt, que narra a hist\u00f3ria de um homem que\n                    vive em um mundo onde as pessoas n\u00e3o podem mais sonhar. O livro \u00e9 uma reflex\u00e3o sobre a\n                    import\u00e2ncia dos sonhos e da imagina\u00e7\u00e3o na vida humana. Erich-Emmanuel Schmitt \u00e9 um autor\n                    franc\u00eas conhecido por suas obras que exploram temas filos\u00f3ficos e existenciais. Ele \u00e9 um\n                    dos autores mais traduzidos da Fran\u00e7a e suas obras t\u00eam sido amplamente elogiadas pela\n                    cr\u00edtica.\n                &lt;/p&gt;\n                &lt;button&gt;Acessar p\u00e1gina do livro&lt;/button&gt;\n            &lt;/div&gt;\n            &lt;div class=\"hero-image\"&gt;\n                &lt;img src=\"/hero.png\" alt=\"Hero Image\" /&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n        &lt;section class=\"featured\"&gt;\n            &lt;div&gt;\n                &lt;span class=\"mdi mdi-truck\"&gt;&lt;/span&gt;\n                &lt;h2&gt;Frete gr\u00e1tis para SC&lt;/h2&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;span class=\"mdi mdi-star\"&gt;&lt;/span&gt;\n                &lt;h2&gt;Livros recomendados&lt;/h2&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;span class=\"mdi mdi-book-open-page-variant\"&gt;&lt;/span&gt;\n                &lt;h2&gt;Mais vendidos&lt;/h2&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n        &lt;section class=\"books\"&gt;\n            &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n                &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n                &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n                &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n                &lt;span class=\"price-and-like\"&gt;\n                    &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n                    &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n                &lt;/span&gt;\n                &lt;button&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n            &lt;/article&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 2vh 8vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; h1 {\n        font-size: 1.3rem;\n        color: #000;\n\n        &amp; a {\n            text-decoration: none;\n            color: #000;\n            display: flex;\n            align-items: center;\n        }\n\n        &amp; .logo-title {\n            border-left: 1px solid #27ae6099;\n            font-size: 0.8rem;\n            margin-left: 10px;\n            padding-left: 10px;\n            color: #27ae6099;\n            width: 100px;\n            line-height: 1rem;\n        }\n    }\n\n    &amp; input {\n        width: 400px;\n        height: 40px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 0;\n        background-color: #f1f1f1;\n        padding: 5px;\n    }\n\n    &amp; ul {\n        display: flex;\n    }\n\n    &amp; ul li {\n        list-style: none;\n        margin: 0 10px;\n        font-size: 1rem;\n    }\n\n    &amp; .icons li {\n        color: #27ae60;\n        font-size: 1.3rem;\n    }\n\n    &amp; .search-wrapper {\n        position: relative;\n    }\n\n    &amp; .search-wrapper::before {\n        content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n        font-family: 'Material Design Icons';\n        font-size: 1.2rem;\n        position: absolute;\n        right: 0.75rem;\n        top: 50%;\n        transform: translateY(-50%);\n        pointer-events: none;\n    }\n\n    &amp; .search {\n        padding-right: 2rem;\n    }\n}\n\n.hero {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 5vh 9vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; h2 {\n        color: #382c2c;\n        font-size: 3rem;\n        font-weight: 700;\n    }\n\n    &amp; .hero-content {\n        width: 50%;\n        padding-right: 20px;\n        font-weight: 400;\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n        gap: 20px;\n\n        &amp; h3.outlined {\n            background-color: transparent;\n            color: #27ae60;\n            border: 2px solid #27ae60;\n            padding: 15px 20px;\n            border-radius: 5px;\n            font-size: 1rem;\n        }\n\n        &amp; button {\n            margin-top: 20px;\n        }\n\n        p {\n         width: 70%;\n        }\n    }\n\n    &amp; .hero-image {\n        width: 50%;\n        text-align: right;\n        padding-right: 4vw;\n\n        &amp; img {\n            max-width: 100%;\n            height: auto;\n        }\n    }\n}\n\n.featured {\n    display: flex;\n    padding: 3vh 8vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; div {\n        display: flex;\n        align-items: center;\n        flex: 1;\n        justify-content: center;\n        gap: 10px;\n\n        &amp; span {\n            ont-size: 2rem;\n        }\n\n        &amp; h2 {\n            font-size: 1.2rem;\n            font-weight: 700;\n        }\n    }\n\n    &amp; article:nth-child(2) {\n        border-left: 1px solid #27ae6099;\n        border-right: 1px solid #27ae6099;\n    }\n}\n\n.books {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    padding: 5vh 8vw;\n\n    &amp; .book {\n        display: flex;\n        flex-direction: column;\n        min-width: 300px;\n        width: calc(100% / 4 - 42px);\n        margin: 20px;\n\n        &amp; h2 {\n            font-size: 1.5rem;\n            font-weight: 700;\n        }\n\n        &amp; .book-author {\n            font-size: 1rem;\n        }\n\n        &amp; .book-price {\n            font-size: 1.2rem;\n            font-weight: 700;\n        }\n\n        &amp; .price-and-like {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 20px;\n\n            &amp; .mdi-heart-outline {\n                font-size: 1.3rem;\n                color: #27ae60;\n            }\n        }\n    }\n}\n\nbutton {\n    background-color: #27ae60;\n    color: #fff;\n    border: none;\n    padding: 15px 20px;\n    border-radius: 5px;\n    font-size: 1rem;\n    cursor: pointer;\n    gap: 20px;\n    display: flex;\n    justify-content: center;\n\n    &amp;.outlined {\n        background-color: transparent;\n        color: #27ae60;\n        border: 2px solid #27ae60;\n    }\n\n    &amp;.plain {\n        background-color: transparent;\n        color: black;\n        border: none;\n        cursor: pointer;\n    }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"livraria-tutorial/cart/","title":"Cart","text":""},{"location":"livraria-tutorial/cart/#mostrando-o-carrinho","title":"Mostrando o carrinho","text":"<p>Agora vamos para uma parte que requer um pouco mais de aten\u00e7\u00e3o. Vamos implementar a se\u00e7\u00e3o do carrinho, que \u00e9 uma parte importante da aplica\u00e7\u00e3o. N\u00f3s n\u00e3o queremos que o carrinho seja exibido o tempo todo, mas sim quando o usu\u00e1rio clicar no \u00edcone do carrinho. Para isso, vamos usar um estado reativo para controlar a exibi\u00e7\u00e3o do carrinho.</p> <p>Primeiramente, vamos editar a se\u00e7\u00e3o <code>&lt;script&gt;</code> do arquivo <code>src/App.vue</code> para criar a vari\u00e1vel reativa que vai controlar a exibi\u00e7\u00e3o do carrinho, e tamb\u00e9m uma vari\u00e1vel que vai armazenar os livros que est\u00e3o no carrinho. Para isso, adicione o seguinte c\u00f3digo no bloco <code>&lt;script&gt;</code>:</p> ./src/App.vue<pre><code>import { ref } from 'vue';\nconst showCart = ref(false);\nconst cart = ref({\n  items: [],\n  total: 0,\n});\n</code></pre> <p>Note que o c\u00f3digo acima cria duas vari\u00e1veis reativas: <code>showCart</code> e <code>cart</code>. A vari\u00e1vel <code>showCart</code> \u00e9 um booleano que controla a exibi\u00e7\u00e3o do carrinho, enquanto a vari\u00e1vel <code>cart</code> \u00e9 um objeto que armazena os itens do carrinho e o total da compra. Depois faremos a l\u00f3gica para adicionar os livros ao carrinho e calcular o total da compra.</p> <p>Agora, vamos adicionar a l\u00f3gica para abrir e fechar o carrinho. Para isso, e altere o seguinte c\u00f3digo no bloco <code>&lt;template&gt;</code>:</p> ./src/App.vue<pre><code>&lt;ul class=\"icons\"&gt;\n  &lt;li @click=\"showCart = !showCart\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>Note que adicionamos um evento <code>@click</code> no \u00edcone do carrinho, que altera o valor da vari\u00e1vel <code>showCart</code>. Quando o usu\u00e1rio clicar no \u00edcone do carrinho, a vari\u00e1vel <code>showCart</code> ser\u00e1 alterada para <code>true</code>, e o carrinho ser\u00e1 exibido. Quando o usu\u00e1rio clicar novamente no \u00edcone do carrinho, a vari\u00e1vel <code>showCart</code> ser\u00e1 alterada para <code>false</code>, e o carrinho ser\u00e1 ocultado.</p> <p>Agora, vamos adicionar o c\u00f3digo do carrinho. Para isso, adicione o seguinte c\u00f3digo no bloco <code>&lt;template&gt;</code>, substituindo a abertura da tag <code>&lt;main&gt;</code>, logo ap\u00f3s o fechamento da tag <code>&lt;header&gt;</code>:</p> ./src/App.vue<pre><code>&lt;main v-if=\"showCart\"&gt;\n  &lt;section class=\"cart\"&gt;\n    &lt;h2&gt;Carrinho&lt;/h2&gt;\n    &lt;table&gt;\n      &lt;thead&gt;\n        &lt;tr&gt;\n          &lt;th&gt;T\u00edtulo&lt;/th&gt;\n          &lt;th&gt;Quantidade&lt;/th&gt;\n          &lt;th&gt;Subtotal&lt;/th&gt;\n        &lt;/tr&gt;\n      &lt;/thead&gt;\n      &lt;tbody&gt;\n        &lt;tr v-for=\"book in cart.items\" :key=\"book.id\"&gt;\n          &lt;td class=\"cart-item\"&gt;\n            &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n            &lt;div class=\"cart-item-info\"&gt;\n              &lt;p class=\"cart-item-title\"&gt;{{ book.title }}&lt;/p&gt;\n              &lt;p class=\"cart-item-author\"&gt;{{ book.author }}&lt;/p&gt;\n              &lt;p class=\"cart-item-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n            &lt;/div&gt;\n          &lt;/td&gt;\n          &lt;td&gt;\n            &lt;div class=\"cart-item-quantity\"&gt;\n              &lt;button class=\"plain\"&gt;\n                &lt;span class=\"mdi mdi-minus\" /&gt;\n              &lt;/button&gt;\n              {{ book.quantity }}\n              &lt;button class=\"plain\"&gt;\n                &lt;span class=\"mdi mdi-plus\" /&gt;\n              &lt;/button&gt;\n            &lt;/div&gt;\n          &lt;/td&gt;\n          &lt;td class=\"cart-item-subtotal\"&gt;\n            R$ {{ book.price * book.quantity }}\n          &lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/tbody&gt;\n    &lt;/table&gt;\n    &lt;button @click=\"showCart = false\" class=\"outlined\"&gt;Voltar para loja&lt;/button&gt;\n    &lt;div class=\"cart-summary\"&gt;\n      &lt;div class=\"cupom\"&gt;\n        &lt;input type=\"text\" placeholder=\"C\u00f3digo do cupom\" /&gt;\n        &lt;button&gt;Inserir cupom&lt;/button&gt;\n      &lt;/div&gt;\n      &lt;div class=\"summary\"&gt;\n        &lt;h2&gt;Total da Compra&lt;/h2&gt;\n        &lt;div class=\"summary-items\"&gt;\n          &lt;span&gt;Produtos&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n          &lt;span&gt;Frete&lt;/span&gt; &lt;span&gt; Gr\u00e1tis&lt;/span&gt; &lt;span&gt;Total&lt;/span&gt;\n          &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;button&gt;Ir para pagamento&lt;/button&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/section&gt;\n&lt;/main&gt;\n&lt;main v-else&gt;\n</code></pre> <p>Note que j\u00e1 na abertura da tag <code>&lt;main&gt;</code> (linha 93) foi adicionada uma diretiva <code>v-if</code> que verifica se a vari\u00e1vel <code>showCart</code> \u00e9 verdadeira. Se for, o carrinho ser\u00e1 exibido. Caso contr\u00e1rio, o carrinho n\u00e3o ser\u00e1 exibido, e ser\u00e1 exibida a tag <code>&lt;main&gt;</code> que j\u00e1 existia antes (linhas 149 em diante). Isso garante que o carrinho s\u00f3 ser\u00e1 exibido quando o usu\u00e1rio clicar no \u00edcone do carrinho.</p> <p>Dentro a nova tag <code>&lt;main&gt;</code>, foi adicionado o c\u00f3digo do carrinho. O carrinho \u00e9 exibido como uma tabela, onde cada linha representa um livro no carrinho. A tabela possui tr\u00eas colunas: t\u00edtulo, quantidade e subtotal. A coluna de t\u00edtulo exibe a imagem do livro, o t\u00edtulo, o autor e o pre\u00e7o. A coluna de quantidade exibe a quantidade do livro no carrinho e dois bot\u00f5es para aumentar ou diminuir a quantidade. A coluna de subtotal exibe o subtotal do livro (pre\u00e7o * quantidade). No final da tabela, h\u00e1 um bot\u00e3o para voltar para a loja e um resumo da compra com o total.</p> <p>O bot\u00e3o adicionado para voltar para a loja tem um evento <code>@click</code> que altera o valor da vari\u00e1vel <code>showCart</code> para <code>false</code>, ocultando o carrinho. O resumo da compra exibe o total da compra, que ainda n\u00e3o foi implementado, mas ser\u00e1 feito na pr\u00f3xima se\u00e7\u00e3o. Por fim, alguns elementos como a aplica\u00e7\u00e3o do cupom e o bot\u00e3o para ir para o pagamento foram adicionados, mas ainda n\u00e3o possuem funcionalidade.</p> <p>Agora, vamos adicionar o CSS para estilizar o carrinho. Para isso, adicione o seguinte c\u00f3digo no bloco <code>&lt;style&gt;</code> do arquivo <code>src/App.vue</code>:</p> ./src/App.vue<pre><code>.cart {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 5vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    font-size: 2rem;\n    font-weight: 700;\n    color: #27ae60;\n  }\n\n  &amp; table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 40px 0;\n\n    &amp; th,\n    td {\n      padding: 10px;\n      text-align: left;\n    }\n\n    &amp; th {\n      border-bottom: 2px solid #27ae6099;\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; td {\n      border-bottom: 1px solid rgb(128, 128, 128);\n      font-size: 1rem;\n    }\n\n    &amp; .cart-item-quantity {\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .cart-item-subtotal {\n      font-size: 1.1rem;\n      font-weight: 700;\n    }\n\n    &amp; .cart-item {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      &amp; img {\n        width: 80px;\n        height: auto;\n      }\n\n      &amp; .cart-item-info {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n\n        &amp; .cart-item-title {\n          font-size: 1.2rem;\n          font-weight: 700;\n        }\n        &amp; .cart-item-author {\n          font-size: 1rem;\n        }\n        &amp; .cart-item-price {\n          font-size: 1.1rem;\n          font-weight: 600;\n        }\n      }\n    }\n  }\n\n  &amp; .cart-summary {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n\n    &amp; .cupom {\n      display: flex;\n      align-items: center;\n      margin-top: 80px;\n      gap: 10px;\n\n      &amp; input {\n        width: 350px;\n        height: 50px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 2px solid rgb(128, 128, 128);\n        padding: 5px;\n      }\n    }\n\n    &amp; .summary {\n      border: 1px solid rgb(128, 128, 128);\n      padding: 1vw;\n\n      &amp; h2 {\n        font-size: 1.2rem;\n        font-weight: 700;\n        color: black;\n      }\n\n      &amp; .summary-items {\n        display: grid;\n        grid-template-columns: 3fr 1fr;\n\n        &amp; span {\n          padding: 10px 0;\n          border-bottom: 1px solid rgb(128, 128, 128);\n        }\n      }\n\n      &amp; button {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n</code></pre> <p>Nesse caso, a estiliza\u00e7\u00e3o do carrinho \u00e9 feita de forma semelhante \u00e0 estiliza\u00e7\u00e3o das demais se\u00e7\u00f5es do projeto, sendo que a tabela do carrinho \u00e9 estilizada para ter um layout mais limpo e organizado.</p> <p>O quadro abaixo cont\u00e9m o c\u00f3digo completo do que fizemos at\u00e9 agora, atentando-se \u00e0s partes destacadas, que correspondem ao que foi adicionado ou alterado.</p>  Vers\u00e3o completa ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\nconst showCart = ref(false)\nconst cart = ref({\n    items: [],\n    total: 0,\n})\n\nconst books = [\n    {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n    },\n    {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n    },\n    {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n    },\n    {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n    },\n    {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n    },\n    {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n    },\n    {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n    },\n]\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;h1&gt;\n        &lt;a href=\"#\"&gt;\n          IFbooks\n          &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n        &lt;/a&gt;\n      &lt;/h1&gt;\n      &lt;div class=\"search-wrapper\"&gt;\n        &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n      &lt;/div&gt;\n      &lt;ul&gt;\n        &lt;li&gt;Termos&lt;/li&gt;\n        &lt;li&gt;Equipe&lt;/li&gt;\n        &lt;li&gt;Envio&lt;/li&gt;\n        &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;ul class=\"icons\"&gt;\n        &lt;li @click=\"showCart = !showCart\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n  &lt;main v-if=\"showCart\"&gt;\n    &lt;section class=\"cart\"&gt;\n      &lt;h2&gt;Carrinho&lt;/h2&gt;\n      &lt;table&gt;\n        &lt;thead&gt;\n          &lt;tr&gt;\n            &lt;th&gt;T\u00edtulo&lt;/th&gt;\n            &lt;th&gt;Quantidade&lt;/th&gt;\n            &lt;th&gt;Subtotal&lt;/th&gt;\n          &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n          &lt;tr v-for=\"book in cart.items\" :key=\"book.id\"&gt;\n            &lt;td class=\"cart-item\"&gt;\n              &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n              &lt;div class=\"cart-item-info\"&gt;\n                &lt;p class=\"cart-item-title\"&gt;{{ book.title }}&lt;/p&gt;\n                &lt;p class=\"cart-item-author\"&gt;{{ book.author }}&lt;/p&gt;\n                &lt;p class=\"cart-item-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n              &lt;div class=\"cart-item-quantity\"&gt;\n                &lt;button class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-minus\" /&gt;\n                &lt;/button&gt;\n                {{ book.quantity }}\n                &lt;button class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-plus\" /&gt;\n                &lt;/button&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td class=\"cart-item-subtotal\"&gt;R$ {{ book.price * book.quantity }}&lt;/td&gt;\n          &lt;/tr&gt;\n        &lt;/tbody&gt;\n      &lt;/table&gt;\n      &lt;button @click=\"showCart = false\" class=\"outlined\"&gt;Voltar para loja&lt;/button&gt;\n      &lt;div class=\"cart-summary\"&gt;\n        &lt;div class=\"cupom\"&gt;\n          &lt;input type=\"text\" placeholder=\"C\u00f3digo do cupom\" /&gt;\n          &lt;button&gt;Inserir cupom&lt;/button&gt;\n        &lt;/div&gt;\n        &lt;div class=\"summary\"&gt;\n          &lt;h2&gt;Total da Compra&lt;/h2&gt;\n          &lt;div class=\"summary-items\"&gt;\n            &lt;span&gt;Produtos&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt; &lt;span&gt;Frete&lt;/span&gt;\n            &lt;span&gt; Gr\u00e1tis&lt;/span&gt; &lt;span&gt;Total&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n          &lt;/div&gt;\n          &lt;button&gt;Ir para pagamento&lt;/button&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;main v-else&gt;\n    &lt;section class=\"hero\"&gt;\n      &lt;div class=\"hero-content\"&gt;\n        &lt;h3 class=\"outlined\"&gt;Livro destaque&lt;/h3&gt;\n        &lt;h2&gt;Noc Ognia&lt;/h2&gt;\n        &lt;p&gt;\n          Noc ognia \u00e9 um romance de Erich-Emmanuel Schmitt, que narra a hist\u00f3ria de um homem que\n          vive em um mundo onde as pessoas n\u00e3o podem mais sonhar. O livro \u00e9 uma reflex\u00e3o sobre a\n          import\u00e2ncia dos sonhos e da imagina\u00e7\u00e3o na vida humana. Erich-Emmanuel Schmitt \u00e9 um autor\n          franc\u00eas conhecido por suas obras que exploram temas filos\u00f3ficos e existenciais. Ele \u00e9 um\n          dos autores mais traduzidos da Fran\u00e7a e suas obras t\u00eam sido amplamente elogiadas pela\n          cr\u00edtica.\n        &lt;/p&gt;\n        &lt;button&gt;Acessar p\u00e1gina do livro&lt;/button&gt;\n      &lt;/div&gt;\n      &lt;div class=\"hero-image\"&gt;\n        &lt;img src=\"/hero.png\" alt=\"Hero Image\" /&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n    &lt;section class=\"featured\"&gt;\n      &lt;div&gt;\n        &lt;span class=\"mdi mdi-truck\"&gt;&lt;/span&gt;\n        &lt;h2&gt;Frete gr\u00e1tis para SC&lt;/h2&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;span class=\"mdi mdi-star\"&gt;&lt;/span&gt;\n        &lt;h2&gt;Livros recomendados&lt;/h2&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;span class=\"mdi mdi-book-open-page-variant\"&gt;&lt;/span&gt;\n        &lt;h2&gt;Mais vendidos&lt;/h2&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n    &lt;section class=\"books\"&gt;\n      &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n        &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n        &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n        &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n        &lt;span class=\"price-and-like\"&gt;\n          &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n          &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n        &lt;/span&gt;\n        &lt;button&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n      &lt;/article&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;footer&gt;\n    &lt;nav&gt;\n      &lt;section class=\"upper-footer\"&gt;\n        &lt;div&gt;\n          &lt;p class=\"footer-title\"&gt;\n            &lt;a href=\"#\"&gt; IFbooks &lt;/a&gt;\n          &lt;/p&gt;\n          &lt;ul&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-facebook\" /&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-instagram\" /&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-twitter\" /&gt;&lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/div&gt;\n        &lt;div&gt;\n          &lt;p class=\"contact-text\"&gt;Contato&lt;/p&gt;\n          &lt;p&gt;&lt;span class=\"mdi mdi-phone\" /&gt; +55 47 99999-9999&lt;/p&gt;\n          &lt;p&gt;&lt;span class=\"mdi mdi-clock\" /&gt; 8h \u00e0s 23h - Seg a Sex&lt;/p&gt;\n          &lt;p&gt;&lt;span class=\"mdi mdi-email\" /&gt; contato@ifbooks.com.br&lt;/p&gt;\n          &lt;div class=\"payment-methods\"&gt;\n            &lt;span class=\"mdi mdi-visa\" /&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/section&gt;\n      &lt;section class=\"lower-footer\"&gt;\n        &lt;p&gt;&amp;copy; Alguns direitos reservados. IFBooks. 2025&lt;/p&gt;\n      &lt;/section&gt;\n    &lt;/nav&gt;\n  &lt;/footer&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h1 {\n    font-size: 1.3rem;\n    color: #000;\n\n    &amp; a {\n      text-decoration: none;\n      color: #000;\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .logo-title {\n      border-left: 1px solid #27ae6099;\n      font-size: 0.8rem;\n      margin-left: 10px;\n      padding-left: 10px;\n      color: #27ae6099;\n      width: 100px;\n      line-height: 1rem;\n    }\n  }\n\n  &amp; input {\n    width: 400px;\n    height: 40px;\n    border-radius: 5px;\n    font-size: 1rem;\n    border: 0;\n    background-color: #f1f1f1;\n    padding: 5px;\n  }\n\n  &amp; ul {\n    display: flex;\n  }\n\n  &amp; ul li {\n    list-style: none;\n    margin: 0 10px;\n    font-size: 1rem;\n  }\n\n  &amp; .icons li {\n    color: #27ae60;\n    font-size: 1.3rem;\n  }\n\n  &amp; .search-wrapper {\n    position: relative;\n  }\n\n  &amp; .search-wrapper::before {\n    content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n    font-family: 'Material Design Icons';\n    font-size: 1.2rem;\n    position: absolute;\n    right: 0.75rem;\n    top: 50%;\n    transform: translateY(-50%);\n    pointer-events: none;\n  }\n\n  &amp; .search {\n    padding-right: 2rem;\n  }\n}\n\n.hero {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5vh 9vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    color: #382c2c;\n    font-size: 3rem;\n    font-weight: 700;\n  }\n\n  &amp; .hero-content {\n    width: 50%;\n    padding-right: 20px;\n    font-weight: 400;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 20px;\n\n    &amp; h3.outlined {\n      background-color: transparent;\n      color: #27ae60;\n      border: 2px solid #27ae60;\n      padding: 15px 20px;\n      border-radius: 5px;\n      font-size: 1rem;\n    }\n\n    &amp; button {\n      margin-top: 20px;\n    }\n\n    p {\n      width: 70%;\n    }\n  }\n\n  &amp; .hero-image {\n    width: 50%;\n    text-align: right;\n    padding-right: 4vw;\n\n    &amp; img {\n      max-width: 100%;\n      height: auto;\n    }\n  }\n}\n\n.featured {\n  display: flex;\n  padding: 3vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; div {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    justify-content: center;\n    gap: 10px;\n\n    &amp; span {\n      font-size: 2rem;\n    }\n\n    &amp; h2 {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n  }\n\n  &amp; article:nth-child(2) {\n    border-left: 1px solid #27ae6099;\n    border-right: 1px solid #27ae6099;\n  }\n}\n\n.books {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  padding: 5vh 8vw;\n\n  &amp; .book {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: calc(100% / 4 - 42px);\n    margin: 20px;\n\n    &amp; h2 {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n\n    &amp; .book-author {\n      font-size: 1rem;\n    }\n\n    &amp; .book-price {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; .price-and-like {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      &amp; .mdi-heart-outline {\n        font-size: 1.3rem;\n        color: #27ae60;\n      }\n    }\n  }\n}\n\n.cart {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 5vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    font-size: 2rem;\n    font-weight: 700;\n    color: #27ae60;\n  }\n\n  &amp; table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 40px 0;\n\n    &amp; th,\n    td {\n      padding: 10px;\n      text-align: left;\n    }\n\n    &amp; th {\n      border-bottom: 2px solid #27ae6099;\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; td {\n      border-bottom: 1px solid rgb(128, 128, 128);\n      font-size: 1rem;\n    }\n\n    &amp; .cart-item-quantity {\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .cart-item-subtotal {\n      font-size: 1.1rem;\n      font-weight: 700;\n    }\n\n    &amp; .cart-item {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      &amp; img {\n        width: 80px;\n        height: auto;\n      }\n\n      &amp; .cart-item-info {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n\n        &amp; .cart-item-title {\n          font-size: 1.2rem;\n          font-weight: 700;\n        }\n        &amp; .cart-item-author {\n          font-size: 1rem;\n        }\n        &amp; .cart-item-price {\n          font-size: 1.1rem;\n          font-weight: 600;\n        }\n      }\n    }\n  }\n\n  &amp; .cart-summary {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n\n    &amp; .cupom {\n      display: flex;\n      align-items: center;\n      margin-top: 80px;\n      gap: 10px;\n\n      &amp; input {\n        width: 350px;\n        height: 50px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 2px solid rgb(128, 128, 128);\n        padding: 5px;\n      }\n    }\n\n    &amp; .summary {\n      border: 1px solid rgb(128, 128, 128);\n      padding: 1vw;\n\n      &amp; h2 {\n        font-size: 1.2rem;\n        font-weight: 700;\n        color: black;\n      }\n\n      &amp; .summary-items {\n        display: grid;\n        grid-template-columns: 3fr 1fr;\n\n        &amp; span {\n          padding: 10px 0;\n          border-bottom: 1px solid rgb(128, 128, 128);\n        }\n      }\n\n      &amp; button {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n\nfooter {\n  background-color: #27ae60;\n  padding: 2vh 8vw;\n  color: #fff;\n\n  .upper-footer {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-bottom: 100px;\n    border-bottom: 2px solid #fff;\n\n    &amp; div {\n      display: flex;\n      flex-direction: column;\n      gap: 10px;\n\n      &amp; .footer-title {\n        font-size: 1.2rem;\n        font-weight: 700;\n\n        &amp; a {\n          text-decoration: none;\n          color: #fff;\n        }\n      }\n\n      &amp; .contact-text {\n        font-size: 1.1rem;\n        font-weight: 700;\n      }\n    }\n  }\n\n  .lower-footer {\n    display: flex;\n    justify-content: center;\n    padding-top: 20px;\n    font-size: 0.8rem;\n  }\n\n  ul {\n    display: flex;\n    padding: 0;\n    gap: 20px;\n\n    li {\n      list-style: none;\n      font-size: 1.2rem;\n      color: #fff;\n    }\n  }\n}\n\nbutton {\n  background-color: #27ae60;\n  color: #fff;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 5px;\n  font-size: 1rem;\n  cursor: pointer;\n  gap: 20px;\n  display: flex;\n  justify-content: center;\n\n  &amp;.outlined {\n    background-color: transparent;\n    color: #27ae60;\n    border: 2px solid #27ae60;\n  }\n\n  &amp;.plain {\n    background-color: transparent;\n    color: black;\n    border: none;\n    cursor: pointer;\n  }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"livraria-tutorial/featured/","title":"Featured","text":""},{"location":"livraria-tutorial/featured/#a-secao-featured","title":"A se\u00e7\u00e3o Featured","text":"<p>Ne sequ\u00eancia, vamos implementar a se\u00e7\u00e3o Featured, que \u00e9 uma se\u00e7\u00e3o que exibe informa\u00e7\u00f5es sobre os livros mais vendidos, livros recomendados e frete gr\u00e1tis para SC. Essa se\u00e7\u00e3o ser\u00e1 exibida logo abaixo da se\u00e7\u00e3o Hero.</p> <p>Vamos ainda editar o arquivo <code>src/App.vue</code> e adicionar o seguinte c\u00f3digo no bloco <code>&lt;template&gt;</code>, logo abaixo da se\u00e7\u00e3o Hero:</p> ./src/App.vue<pre><code>    &lt;section class=\"featured\"&gt;\n        &lt;div&gt;\n            &lt;span class=\"mdi mdi-truck\"&gt;&lt;/span&gt;\n            &lt;h2&gt;Frete gr\u00e1tis para SC&lt;/h2&gt;\n        &lt;/div&gt;\n        &lt;div&gt;\n            &lt;span class=\"mdi mdi-star\"&gt;&lt;/span&gt;\n            &lt;h2&gt;Livros recomendados&lt;/h2&gt;\n        &lt;/div&gt;\n        &lt;div&gt;\n            &lt;span class=\"mdi mdi-book-open-page-variant\"&gt;&lt;/span&gt;\n            &lt;h2&gt;Mais vendidos&lt;/h2&gt;\n        &lt;/div&gt;\n    &lt;/section&gt;\n&lt;/main&gt;\n</code></pre> <p>Note que \u00e9 um c\u00f3digo simples, que apenas exibe tr\u00eas informa\u00e7\u00f5es. A se\u00e7\u00e3o \u00e9 composta por tr\u00eas divs, cada uma contendo um \u00edcone e um t\u00edtulo. Os \u00edcones s\u00e3o representados por classes do Material Design Icons.</p> <p>Para estilizar a se\u00e7\u00e3o Featured, adicione o seguinte c\u00f3digo no arquivo <code>src/App.vue</code>, no bloco <code>&lt;style&gt;</code>(1):</p> <ol> <li>Sugiro que voc\u00ea adicione o c\u00f3digo CSS logo ap\u00f3s a defini\u00e7\u00e3o das informa\u00e7\u00f5es da se\u00e7\u00e3o Hero, para facilitar a leitura do c\u00f3digo.</li> </ol> ./src/App.vue<pre><code>.featured {\n  display: flex;\n  padding: 3vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; div {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    justify-content: center;\n    gap: 10px;\n\n    &amp; span {\n      font-size: 2rem;\n    }\n\n    &amp; h2 {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n  }\n\n  &amp; article:nth-child(2) {\n    border-left: 1px solid #27ae6099;\n    border-right: 1px solid #27ae6099;\n  }\n}\n</code></pre> <p>No c\u00f3digo acima, a se\u00e7\u00e3o Featured \u00e9 estilizada para exibir tr\u00eas informa\u00e7\u00f5es em uma linha. Cada informa\u00e7\u00e3o \u00e9 composta por um \u00edcone e um t\u00edtulo. A se\u00e7\u00e3o \u00e9 dividida em tr\u00eas partes, cada uma ocupando um espa\u00e7o igual na tela. A se\u00e7\u00e3o tamb\u00e9m possui uma borda inferior para separ\u00e1-la da se\u00e7\u00e3o Hero.</p> <p>No bloco abaixo est\u00e1 vers\u00e3o completa desenvolvida at\u00e9 aqui. Voc\u00ea pode comparar com o c\u00f3digo que voc\u00ea desenvolveu at\u00e9 agora e verificar se est\u00e1 tudo certo.</p>  Vers\u00e3o completa ./src/App.vue<pre><code>&lt;script setup&gt;\n&lt;/script&gt;\n\n&lt;template&gt;\n    &lt;header&gt;\n        &lt;nav&gt;\n        &lt;h1&gt;\n            &lt;a href=\"#\"&gt;\n            IFbooks\n            &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n            &lt;/a&gt;\n        &lt;/h1&gt;\n        &lt;div class=\"search-wrapper\"&gt;\n            &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n        &lt;/div&gt;\n        &lt;ul&gt;\n            &lt;li&gt;Termos&lt;/li&gt;\n            &lt;li&gt;Equipe&lt;/li&gt;\n            &lt;li&gt;Envio&lt;/li&gt;\n            &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n        &lt;/ul&gt;\n        &lt;ul class=\"icons\"&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n        &lt;/nav&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;section class=\"hero\"&gt;\n            &lt;div class=\"hero-content\"&gt;\n                &lt;h3 class=\"outlined\"&gt;Livro destaque&lt;/h3&gt;\n                &lt;h2&gt;Noc Ognia&lt;/h2&gt;\n                &lt;p&gt;\n                    Noc ognia \u00e9 um romance de Erich-Emmanuel Schmitt, que narra a hist\u00f3ria de um homem que\n                    vive em um mundo onde as pessoas n\u00e3o podem mais sonhar. O livro \u00e9 uma reflex\u00e3o sobre a\n                    import\u00e2ncia dos sonhos e da imagina\u00e7\u00e3o na vida humana. Erich-Emmanuel Schmitt \u00e9 um autor\n                    franc\u00eas conhecido por suas obras que exploram temas filos\u00f3ficos e existenciais. Ele \u00e9 um\n                    dos autores mais traduzidos da Fran\u00e7a e suas obras t\u00eam sido amplamente elogiadas pela\n                    cr\u00edtica.\n                &lt;/p&gt;\n                &lt;button&gt;Acessar p\u00e1gina do livro&lt;/button&gt;\n            &lt;/div&gt;\n            &lt;div class=\"hero-image\"&gt;\n                &lt;img src=\"/hero.png\" alt=\"Hero Image\" /&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n        &lt;section class=\"featured\"&gt;\n            &lt;div&gt;\n                &lt;span class=\"mdi mdi-truck\"&gt;&lt;/span&gt;\n                &lt;h2&gt;Frete gr\u00e1tis para SC&lt;/h2&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;span class=\"mdi mdi-star\"&gt;&lt;/span&gt;\n                &lt;h2&gt;Livros recomendados&lt;/h2&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;span class=\"mdi mdi-book-open-page-variant\"&gt;&lt;/span&gt;\n                &lt;h2&gt;Mais vendidos&lt;/h2&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 2vh 8vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; h1 {\n        font-size: 1.3rem;\n        color: #000;\n\n        &amp; a {\n            text-decoration: none;\n            color: #000;\n            display: flex;\n            align-items: center;\n        }\n\n        &amp; .logo-title {\n            border-left: 1px solid #27ae6099;\n            font-size: 0.8rem;\n            margin-left: 10px;\n            padding-left: 10px;\n            color: #27ae6099;\n            width: 100px;\n            line-height: 1rem;\n        }\n    }\n\n    &amp; input {\n        width: 400px;\n        height: 40px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 0;\n        background-color: #f1f1f1;\n        padding: 5px;\n    }\n\n    &amp; ul {\n        display: flex;\n    }\n\n    &amp; ul li {\n        list-style: none;\n        margin: 0 10px;\n        font-size: 1rem;\n    }\n\n    &amp; .icons li {\n        color: #27ae60;\n        font-size: 1.3rem;\n    }\n\n    &amp; .search-wrapper {\n        position: relative;\n    }\n\n    &amp; .search-wrapper::before {\n        content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n        font-family: 'Material Design Icons';\n        font-size: 1.2rem;\n        position: absolute;\n        right: 0.75rem;\n        top: 50%;\n        transform: translateY(-50%);\n        pointer-events: none;\n    }\n\n    &amp; .search {\n        padding-right: 2rem;\n    }\n}\n\n.hero {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 5vh 9vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; h2 {\n        color: #382c2c;\n        font-size: 3rem;\n        font-weight: 700;\n    }\n\n    &amp; .hero-content {\n        width: 50%;\n        padding-right: 20px;\n        font-weight: 400;\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n        gap: 20px;\n\n        &amp; h3.outlined {\n            background-color: transparent;\n            color: #27ae60;\n            border: 2px solid #27ae60;\n            padding: 15px 20px;\n            border-radius: 5px;\n            font-size: 1rem;\n        }\n\n        &amp; button {\n            margin-top: 20px;\n        }\n\n        p {\n            width: 70%;\n        }\n    }\n\n    &amp; .hero-image {\n        width: 50%;\n        text-align: right;\n        padding-right: 4vw;\n\n        &amp; img {\n            max-width: 100%;\n            height: auto;\n        }\n    }\n}\n\n.featured {\n    display: flex;\n    padding: 3vh 8vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; div {\n        display: flex;\n        align-items: center;\n        flex: 1;\n        justify-content: center;\n        gap: 10px;\n\n        &amp; span {\n            font-size: 2rem;\n        }\n\n        &amp; h2 {\n            font-size: 1.2rem;\n            font-weight: 700;\n        }\n    }\n\n    &amp; article:nth-child(2) {\n        border-left: 1px solid #27ae6099;\n        border-right: 1px solid #27ae6099;\n    }\n}\n\nbutton {\n    background-color: #27ae60;\n    color: #fff;\n    border: none;\n    padding: 15px 20px;\n    border-radius: 5px;\n    font-size: 1rem;\n    cursor: pointer;\n    gap: 20px;\n    display: flex;\n    justify-content: center;\n\n    &amp;.outlined {\n        background-color: transparent;\n        color: #27ae60;\n        border: 2px solid #27ae60;\n    }\n\n    &amp;.plain {\n        background-color: transparent;\n        color: black;\n        border: none;\n        cursor: pointer;\n    }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"livraria-tutorial/footer/","title":"Footer","text":""},{"location":"livraria-tutorial/footer/#a-secao-footer","title":"A se\u00e7\u00e3o Footer","text":"<p>Por fim, a se\u00e7\u00e3o de rodap\u00e9 (footer) \u00e9 a \u00faltima parte do layout. Ela cont\u00e9m informa\u00e7\u00f5es de contato e links para redes sociais. Ela \u00e9 estilizada para ter um fundo verde e texto branco, com uma borda inferior para separ\u00e1-la do restante da p\u00e1gina. Inicialmente, vamos fazer a estrutura do rodap\u00e9, e depois vamos estilizar. Para isso, edite o arquivo <code>src/App.vue</code> e adicione o seguinte c\u00f3digo no final do arquivo, antes da tag de fechamento <code>&lt;/template&gt;</code>, logo ap\u00f3s o fechamento da tag <code>&lt;main&gt;</code>:</p> ./src/App.vue<pre><code>&lt;footer&gt;\n  &lt;nav&gt;\n    &lt;section class=\"upper-footer\"&gt;\n      &lt;div&gt;\n        &lt;p class=\"footer-title\"&gt;\n          &lt;a href=\"#\"&gt; IFbooks &lt;/a&gt;\n        &lt;/p&gt;\n        &lt;ul&gt;\n          &lt;li&gt;&lt;span class=\"mdi mdi-facebook\" /&gt;&lt;/li&gt;\n          &lt;li&gt;&lt;span class=\"mdi mdi-instagram\" /&gt;&lt;/li&gt;\n          &lt;li&gt;&lt;span class=\"mdi mdi-twitter\" /&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;p class=\"contact-text\"&gt;Contato&lt;/p&gt;\n        &lt;p&gt;&lt;span class=\"mdi mdi-phone\" /&gt; +55 47 99999-9999&lt;/p&gt;\n        &lt;p&gt;&lt;span class=\"mdi mdi-clock\" /&gt; 8h \u00e0s 23h - Seg a Sex&lt;/p&gt;\n        &lt;p&gt;&lt;span class=\"mdi mdi-email\" /&gt; contato@ifbooks.com.br&lt;/p&gt;\n        &lt;div class=\"payment-methods\"&gt;\n          &lt;span class=\"mdi mdi-visa\" /&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n    &lt;section class=\"lower-footer\"&gt;\n      &lt;p&gt;&amp;copy; Alguns direitos reservados. IFBooks. 2025&lt;/p&gt;\n    &lt;/section&gt;\n  &lt;/nav&gt;\n&lt;/footer&gt;\n</code></pre> <p>Agora, vamos estilizar o rodap\u00e9. Para isso, adicione o seguinte c\u00f3digo no bloco <code>&lt;style&gt;</code> do arquivo <code>src/App.vue</code>:</p> ./src/App.vue<pre><code>footer {\n  background-color: #27ae60;\n  padding: 2vh 8vw;\n  color: #fff;\n\n  .upper-footer {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-bottom: 100px;\n    border-bottom: 2px solid #fff;\n\n    &amp; div {\n      display: flex;\n      flex-direction: column;\n      gap: 10px;\n\n      &amp; .footer-title {\n        font-size: 1.2rem;\n        font-weight: 700;\n\n        &amp; a {\n          text-decoration: none;\n          color: #fff;\n        }\n      }\n\n      &amp; .contact-text {\n        font-size: 1.1rem;\n        font-weight: 700;\n      }\n    }\n  }\n\n  .lower-footer {\n    display: flex;\n    justify-content: center;\n    padding-top: 20px;\n    font-size: 0.8rem;\n  }\n\n  ul {\n    display: flex;\n    padding: 0;\n    gap: 20px;\n\n    li {\n      list-style: none;\n      font-size: 1.2rem;\n      color: #fff;\n    }\n  }\n}\n</code></pre> <p>O quadro abaixo mostra o resultado final do c\u00f3digo que implementamos at\u00e9 agora.</p>  Vers\u00e3o completa ./src/App.vue<pre><code>&lt;script setup&gt;\n    const books = [\n        {\n            id: 1,\n            title: 'Comigo na livraria',\n            cover: '/covers/comigo-na-livraria.png',\n            price: 23.24,\n            author: 'Martha Medeiros',\n        },\n        {\n            id: 2,\n            title: 'Quincas Borba',\n            cover: '/covers/quincas-borba.png',\n            price: 23.24,\n            author: 'Machado de Assis',\n        },\n        {\n            id: 3,\n            title: 'A livraria',\n            cover: '/covers/a-livraria.png',\n            price: 13.94,\n            author: 'Penelope Fitzgerald',\n        },\n        {\n            id: 4,\n            title: 'A hora da estrela',\n            cover: '/covers/a-hora-da-estrela.png',\n            price: 16.84,\n            author: 'Clarice Lispector',\n        },\n        {\n            id: 5,\n            title: 'O alienista',\n            cover: '/covers/o-alienista.png',\n            price: 266.92,\n            author: 'Machado de Assis',\n        },\n        {\n            id: 6,\n            title: 'Mar morto',\n            cover: '/covers/mar-morto.png',\n            price: 13.95,\n            author: 'Jorge Amado',\n        },\n        {\n            id: 7,\n            title: 'Grande sert\u00e3o',\n            cover: '/covers/grande-sertao-veredas.png',\n            price: 26.04,\n            author: 'Guimar\u00e3es Rosa',\n        },\n        {\n            id: 8,\n            title: 'Flor de poemas',\n            cover: '/covers/flor-de-poema.png',\n            price: 15.81,\n            author: 'Cec\u00edlia Meireles',\n        }\n    ]\n&lt;/script&gt;\n\n&lt;template&gt;\n    &lt;header&gt;\n        &lt;nav&gt;\n            &lt;h1&gt;\n                &lt;a href=\"#\"&gt;\n                    IFbooks\n                    &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n                &lt;/a&gt;\n            &lt;/h1&gt;\n            &lt;div class=\"search-wrapper\"&gt;\n                &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n            &lt;/div&gt;\n            &lt;ul&gt;\n                &lt;li&gt;Termos&lt;/li&gt;\n                &lt;li&gt;Equipe&lt;/li&gt;\n                &lt;li&gt;Envio&lt;/li&gt;\n                &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;ul class=\"icons\"&gt;\n                &lt;li&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/nav&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;section class=\"hero\"&gt;\n            &lt;div class=\"hero-content\"&gt;\n                &lt;h3 class=\"outlined\"&gt;Livro destaque&lt;/h3&gt;\n                &lt;h2&gt;Noc Ognia&lt;/h2&gt;\n                &lt;p&gt;\n                    Noc ognia \u00e9 um romance de Erich-Emmanuel Schmitt, que narra a hist\u00f3ria de um homem que\n                    vive em um mundo onde as pessoas n\u00e3o podem mais sonhar. O livro \u00e9 uma reflex\u00e3o sobre a\n                    import\u00e2ncia dos sonhos e da imagina\u00e7\u00e3o na vida humana. Erich-Emmanuel Schmitt \u00e9 um autor\n                    franc\u00eas conhecido por suas obras que exploram temas filos\u00f3ficos e existenciais. Ele \u00e9 um\n                    dos autores mais traduzidos da Fran\u00e7a e suas obras t\u00eam sido amplamente elogiadas pela\n                    cr\u00edtica.\n                &lt;/p&gt;\n                &lt;button&gt;Acessar p\u00e1gina do livro&lt;/button&gt;\n            &lt;/div&gt;\n            &lt;div class=\"hero-image\"&gt;\n                &lt;img src=\"/hero.png\" alt=\"Hero Image\" /&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n        &lt;section class=\"featured\"&gt;\n            &lt;div&gt;\n                &lt;span class=\"mdi mdi-truck\"&gt;&lt;/span&gt;\n                &lt;h2&gt;Frete gr\u00e1tis para SC&lt;/h2&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;span class=\"mdi mdi-star\"&gt;&lt;/span&gt;\n                &lt;h2&gt;Livros recomendados&lt;/h2&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;span class=\"mdi mdi-book-open-page-variant\"&gt;&lt;/span&gt;\n                &lt;h2&gt;Mais vendidos&lt;/h2&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n        &lt;section class=\"books\"&gt;\n            &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n                &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n                &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n                &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n                &lt;span class=\"price-and-like\"&gt;\n                    &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n                    &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n                &lt;/span&gt;\n                &lt;button&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n            &lt;/article&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\n        &lt;nav&gt;\n            &lt;section class=\"upper-footer\"&gt;\n                &lt;div&gt;\n                    &lt;p class=\"footer-title\"&gt;\n                        &lt;a href=\"#\"&gt; IFbooks &lt;/a&gt;\n                    &lt;/p&gt;\n                    &lt;ul&gt;\n                        &lt;li&gt;&lt;span class=\"mdi mdi-facebook\" /&gt;&lt;/li&gt;\n                        &lt;li&gt;&lt;span class=\"mdi mdi-instagram\" /&gt;&lt;/li&gt;\n                        &lt;li&gt;&lt;span class=\"mdi mdi-twitter\" /&gt;&lt;/li&gt;\n                    &lt;/ul&gt;\n                &lt;/div&gt;\n                &lt;div&gt;\n                    &lt;p class=\"contact-text\"&gt;Contato&lt;/p&gt;\n                    &lt;p&gt;&lt;span class=\"mdi mdi-phone\" /&gt; +55 47 99999-9999&lt;/p&gt;\n                    &lt;p&gt;&lt;span class=\"mdi mdi-clock\" /&gt; 8h \u00e0s 23h - Seg a Sex&lt;/p&gt;\n                    &lt;p&gt;&lt;span class=\"mdi mdi-email\" /&gt; contato@ifbooks.com.br&lt;/p&gt;\n                    &lt;div class=\"payment-methods\"&gt;\n                        &lt;span class=\"mdi mdi-visa\" /&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/section&gt;\n            &lt;section class=\"lower-footer\"&gt;\n                &lt;p&gt;&amp;copy; Alguns direitos reservados. IFBooks. 2025&lt;/p&gt;\n            &lt;/section&gt;\n        &lt;/nav&gt;\n    &lt;/footer&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 2vh 8vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; h1 {\n        font-size: 1.3rem;\n        color: #000;\n\n        &amp; a {\n            text-decoration: none;\n            color: #000;\n            display: flex;\n            align-items: center;\n        }\n\n        &amp; .logo-title {\n            border-left: 1px solid #27ae6099;\n            font-size: 0.8rem;\n            margin-left: 10px;\n            padding-left: 10px;\n            color: #27ae6099;\n            width: 100px;\n            line-height: 1rem;\n        }\n    }\n\n    &amp; input {\n        width: 400px;\n        height: 40px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 0;\n        background-color: #f1f1f1;\n        padding: 5px;\n    }\n\n    &amp; ul {\n        display: flex;\n    }\n\n    &amp; ul li {\n        list-style: none;\n        margin: 0 10px;\n        font-size: 1rem;\n    }\n\n    &amp; .icons li {\n        color: #27ae60;\n        font-size: 1.3rem;\n    }\n\n    &amp; .search-wrapper {\n        position: relative;\n    }\n\n    &amp; .search-wrapper::before {\n        content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n        font-family: 'Material Design Icons';\n        font-size: 1.2rem;\n        position: absolute;\n        right: 0.75rem;\n        top: 50%;\n        transform: translateY(-50%);\n        pointer-events: none;\n    }\n\n    &amp; .search {\n        padding-right: 2rem;\n    }\n}\n\n.hero {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 5vh 9vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; h2 {\n        color: #382c2c;\n        font-size: 3rem;\n        font-weight: 700;\n    }\n\n    &amp; .hero-content {\n        width: 50%;\n        padding-right: 20px;\n        font-weight: 400;\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n        gap: 20px;\n\n        &amp; h3.outlined {\n            background-color: transparent;\n            color: #27ae60;\n            border: 2px solid #27ae60;\n            padding: 15px 20px;\n            border-radius: 5px;\n            font-size: 1rem;\n        }\n\n        &amp; button {\n            margin-top: 20px;\n        }\n\n        p {\n         width: 70%;\n        }\n    }\n\n    &amp; .hero-image {\n        width: 50%;\n        text-align: right;\n        padding-right: 4vw;\n\n        &amp; img {\n            max-width: 100%;\n            height: auto;\n        }\n    }\n}\n\n.featured {\n    display: flex;\n    padding: 3vh 8vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; div {\n        display: flex;\n        align-items: center;\n        flex: 1;\n        justify-content: center;\n        gap: 10px;\n\n        &amp; span {\n            ont-size: 2rem;\n        }\n\n        &amp; h2 {\n            font-size: 1.2rem;\n            font-weight: 700;\n        }\n    }\n\n    &amp; article:nth-child(2) {\n        border-left: 1px solid #27ae6099;\n        border-right: 1px solid #27ae6099;\n    }\n}\n\n.books {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    padding: 5vh 8vw;\n\n    &amp; .book {\n        display: flex;\n        flex-direction: column;\n        min-width: 300px;\n        width: calc(100% / 4 - 42px);\n        margin: 20px;\n\n        &amp; h2 {\n            font-size: 1.5rem;\n            font-weight: 700;\n        }\n\n        &amp; .book-author {\n            font-size: 1rem;\n        }\n\n        &amp; .book-price {\n            font-size: 1.2rem;\n            font-weight: 700;\n        }\n\n        &amp; .price-and-like {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 20px;\n\n            &amp; .mdi-heart-outline {\n                font-size: 1.3rem;\n                color: #27ae60;\n            }\n        }\n    }\n}\n\nfooter {\n    background-color: #27ae60;\n    padding: 2vh 8vw;\n    color: #fff;\n\n    .upper-footer {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding-bottom: 100px;\n        border-bottom: 2px solid #fff;\n\n        &amp; div {\n            display: flex;\n            flex-direction: column;\n            gap: 10px;\n\n            &amp; .footer-title {\n                font-size: 1.2rem;\n                font-weight: 700;\n\n                &amp; a {\n                    text-decoration: none;\n                    color: #fff;\n                }\n            }\n\n            &amp; .contact-text {\n                font-size: 1.1rem;\n                font-weight: 700;\n            }\n        }\n    }\n\n    .lower-footer {\n        display: flex;\n        justify-content: center;\n        padding-top: 20px;\n        font-size: 0.8rem;\n    }\n\n    ul {\n        display: flex;\n        padding: 0;\n        gap: 20px;\n\n        li {\n            list-style: none;\n            font-size: 1.2rem;\n            color: #fff;\n        }\n    }\n}\n\nbutton {\n    background-color: #27ae60;\n    color: #fff;\n    border: none;\n    padding: 15px 20px;\n    border-radius: 5px;\n    font-size: 1rem;\n    cursor: pointer;\n    gap: 20px;\n    display: flex;\n    justify-content: center;\n\n    &amp;.outlined {\n        background-color: transparent;\n        color: #27ae60;\n        border: 2px solid #27ae60;\n    }\n\n    &amp;.plain {\n        background-color: transparent;\n        color: black;\n        border: none;\n        cursor: pointer;\n    }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"livraria-tutorial/handle-cart-items/","title":"Handle cart items","text":""},{"location":"livraria-tutorial/handle-cart-items/#adicionando-e-removendo-itens","title":"Adicionando e removendo itens","text":"<p>Vamos agora para a parte final desse tutorial, onde vamos adicionar a funcionalidade de adicionar e remover itens do carrinho. Ainda vamos fazer tudo isso de forma simples, sem usar componentes ou gerenciamento de estados.</p> <p>Primeiramente, vamos adicionar as fun\u00e7\u00f5es para adicionar ou remover itens no carrinho. N\u00f3s faremos tr\u00eas fun\u00e7\u00f5es distintas:</p> <ul> <li><code>addToCart</code>: adiciona um livro ao carrinho.</li> <li><code>incrementBookToCart</code>: incrementa a quantidade de um livro j\u00e1 adicionado ao carrinho.</li> <li><code>decrementBookToCart</code>: decrementa a quantidade de um livro j\u00e1 adicionado ao carrinho.</li> </ul> <p>As fun\u00e7\u00f5es devem ser implementadas no arquivo <code>src/App.vue</code>, dentro do bloco <code>&lt;script setup&gt;</code>. O c\u00f3digo deve ficar assim:</p> ./src/App.vue<pre><code>function decrementBookToCart(book) {\n  const existingBook = cart.value.items.find((item) =&gt; item.id === book.id);\n  if (existingBook.quantity === 1) {\n    cart.value.items = cart.value.items.filter((item) =&gt; item.id !== book.id);\n  } else {\n    existingBook.quantity--;\n  }\n  cart.value.total -= book.price;\n}\n\nfunction incrementBookToCart(book) {\n  const existingBook = cart.value.items.find((item) =&gt; item.id === book.id);\n  existingBook.quantity++;\n  cart.value.total += book.price;\n}\n\nfunction addToCart(book) {\n  const existingBook = cart.value.items.find((item) =&gt; item.id === book.id);\n  if (existingBook) {\n    existingBook.quantity++;\n  } else {\n    cart.value.items.push({ ...book, quantity: 1 });\n  }\n  cart.value.total += book.price;\n  alert(`Adicionado ${book.title} ao carrinho!`);\n}\n</code></pre> <p>Note que em todos os casos foi recalculado o total do carrinho, que \u00e9 a soma dos pre\u00e7os de todos os livros. Tamb\u00e9m, foi adicionado um alerta para informar ao usu\u00e1rio que o livro foi adicionado ao carrinho.</p> <p>Com as fun\u00e7\u00f5es j\u00e1 desenvolvidas, vamos agora adicionar os eventos de clique nos bot\u00f5es de adicionar item ao carrinho e tamb\u00e9m de incrementar e decrementar a quantidade de livros no carrinho. Para isso, vamos editar o arquivo <code>src/App.vue</code> e adicionar os eventos de clique nos bot\u00f5es. Ser\u00e3o feitas duas altera\u00e7\u00f5es no c\u00f3digo. Na primeira, vamos usar as fun\u00e7\u00f5es <code>incrementBookToCart</code> e <code>decrementBookToCart</code> para incrementar e decrementar a quantidade de livros no carrinho. Para isso, vamos editar o arquivo <code>src/App.vue</code>, e alterar <code>&lt;div&gt;</code> que possui a classe <code>cart-item-quantity</code> para o seguinte c\u00f3digo:</p> ./src/App.vue<pre><code>&lt;div class=\"cart-item-quantity\"&gt;\n  &lt;button @click=\"decrementBookToCart(book)\" class=\"plain\"&gt;\n    &lt;span class=\"mdi mdi-minus\" /&gt;\n  &lt;/button&gt;\n  {{ book.quantity }}\n  &lt;button @click=\"incrementBookToCart(book)\" class=\"plain\"&gt;\n    &lt;span class=\"mdi mdi-plus\" /&gt;\n  &lt;/button&gt;\n&lt;/div&gt;\n</code></pre> <p>Note que foram adicionados os eventos de clique nos bot\u00f5es de incrementar e decrementar a quantidade de livros no carrinho.</p> <p>Tamb\u00e9m, vamos adicionar o evento de clique no bot\u00e3o de adicionar livro ao carrinho. Para isso, vamos editar o arquivo <code>src/App.vue</code>, e alterar o bot\u00e3o de adicionar livro ao carrinho, dentro do la\u00e7o de repeti\u00e7\u00e3o da tag <code>&lt;article&gt;</code>, para o seguinte c\u00f3digo:</p> ./src/App.vue<pre><code>&lt;button @click=\"addToCart(book)\"&gt;\n  &lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar\n&lt;/button&gt;\n</code></pre> <p>Com essas altera\u00e7\u00f5es realizadas, o c\u00f3digo do arquivo <code>src/App.vue</code> deve ficar com o apresentado no quadro abaixo.</p>  Vers\u00e3o completa ./src/App.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue'\nconst showCart = ref(false)\nconst cart = ref({\n  items: [],\n  total: 0,\n})\nconst books = [\n  {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n  },\n  {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n  },\n  {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n  },\n  {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n  },\n  {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n  },\n  {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n  },\n  {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n  },\n  {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n  },\n]\n\nfunction decrementBookToCart(book) {\n  const existingBook = cart.value.items.find((item) =&gt; item.id === book.id)\n  if (existingBook.quantity === 1) {\n    cart.value.items = cart.value.items.filter((item) =&gt; item.id !== book.id)\n  } else {\n    existingBook.quantity--\n  }\n  cart.value.total -= book.price\n}\n\nfunction incrementBookToCart(book) {\n  const existingBook = cart.value.items.find((item) =&gt; item.id === book.id)\n  existingBook.quantity++\n  cart.value.total += book.price\n}\n\nfunction addToCart(book) {\n  const existingBook = cart.value.items.find((item) =&gt; item.id === book.id)\n  if (existingBook) {\n    existingBook.quantity++\n  } else {\n    cart.value.items.push({ ...book, quantity: 1 })\n  }\n  cart.value.total += book.price\n  alert(`Adicionado ${book.title} ao carrinho!`)\n}\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;h1&gt;\n        &lt;a href=\"#\"&gt;\n          IFbooks\n          &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n        &lt;/a&gt;\n      &lt;/h1&gt;\n      &lt;div class=\"search-wrapper\"&gt;\n        &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n      &lt;/div&gt;\n      &lt;ul&gt;\n        &lt;li&gt;Termos&lt;/li&gt;\n        &lt;li&gt;Equipe&lt;/li&gt;\n        &lt;li&gt;Envio&lt;/li&gt;\n        &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;ul class=\"icons\"&gt;\n        &lt;li @click=\"showCart = !showCart\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n  &lt;main v-if=\"showCart\"&gt;\n    &lt;section class=\"cart\"&gt;\n      &lt;h2&gt;Carrinho&lt;/h2&gt;\n      &lt;table&gt;\n        &lt;thead&gt;\n          &lt;tr&gt;\n            &lt;th&gt;T\u00edtulo&lt;/th&gt;\n            &lt;th&gt;Quantidade&lt;/th&gt;\n            &lt;th&gt;Subtotal&lt;/th&gt;\n          &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n          &lt;tr v-for=\"book in cart.items\" :key=\"book.id\"&gt;\n            &lt;td class=\"cart-item\"&gt;\n              &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n              &lt;div class=\"cart-item-info\"&gt;\n                &lt;p class=\"cart-item-title\"&gt;{{ book.title }}&lt;/p&gt;\n                &lt;p class=\"cart-item-author\"&gt;{{ book.author }}&lt;/p&gt;\n                &lt;p class=\"cart-item-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td&gt;\n              &lt;div class=\"cart-item-quantity\"&gt;\n                &lt;button @click=\"decrementBookToCart(book)\" class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-minus\" /&gt;\n                &lt;/button&gt;\n                {{ book.quantity }}\n                &lt;button @click=\"incrementBookToCart(book)\" class=\"plain\"&gt;\n                  &lt;span class=\"mdi mdi-plus\" /&gt;\n                &lt;/button&gt;\n              &lt;/div&gt;\n            &lt;/td&gt;\n            &lt;td class=\"cart-item-subtotal\"&gt;R$ {{ book.price * book.quantity }}&lt;/td&gt;\n          &lt;/tr&gt;\n        &lt;/tbody&gt;\n      &lt;/table&gt;\n      &lt;button @click=\"showCart = false\" class=\"outlined\"&gt;Voltar para loja&lt;/button&gt;\n      &lt;div class=\"cart-summary\"&gt;\n        &lt;div class=\"cupom\"&gt;\n          &lt;input type=\"text\" placeholder=\"C\u00f3digo do cupom\" /&gt;\n          &lt;button&gt;Inserir cupom&lt;/button&gt;\n        &lt;/div&gt;\n        &lt;div class=\"summary\"&gt;\n          &lt;h2&gt;Total da Compra&lt;/h2&gt;\n          &lt;div class=\"summary-items\"&gt;\n            &lt;span&gt;Produtos&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt; &lt;span&gt;Frete&lt;/span&gt;\n            &lt;span&gt; Gr\u00e1tis&lt;/span&gt; &lt;span&gt;Total&lt;/span&gt; &lt;span&gt;R$ {{ cart.total.toFixed(2) }}&lt;/span&gt;\n          &lt;/div&gt;\n          &lt;button&gt;Ir para pagamento&lt;/button&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;main v-else&gt;\n    &lt;section class=\"hero\"&gt;\n      &lt;div class=\"hero-content\"&gt;\n        &lt;h3 class=\"outlined\"&gt;Livro destaque&lt;/h3&gt;\n        &lt;h2&gt;Noc Ognia&lt;/h2&gt;\n        &lt;p&gt;\n          Noc ognia \u00e9 um romance de Erich-Emmanuel Schmitt, que narra a hist\u00f3ria de um homem que\n          vive em um mundo onde as pessoas n\u00e3o podem mais sonhar. O livro \u00e9 uma reflex\u00e3o sobre a\n          import\u00e2ncia dos sonhos e da imagina\u00e7\u00e3o na vida humana. Erich-Emmanuel Schmitt \u00e9 um autor\n          franc\u00eas conhecido por suas obras que exploram temas filos\u00f3ficos e existenciais. Ele \u00e9 um\n          dos autores mais traduzidos da Fran\u00e7a e suas obras t\u00eam sido amplamente elogiadas pela\n          cr\u00edtica.\n        &lt;/p&gt;\n        &lt;button&gt;Acessar p\u00e1gina do livro&lt;/button&gt;\n      &lt;/div&gt;\n      &lt;div class=\"hero-image\"&gt;\n        &lt;img src=\"/hero.png\" alt=\"Hero Image\" /&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n    &lt;section class=\"featured\"&gt;\n      &lt;div&gt;\n        &lt;span class=\"mdi mdi-truck\"&gt;&lt;/span&gt;\n        &lt;h2&gt;Frete gr\u00e1tis para SC&lt;/h2&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;span class=\"mdi mdi-star\"&gt;&lt;/span&gt;\n        &lt;h2&gt;Livros recomendados&lt;/h2&gt;\n      &lt;/div&gt;\n      &lt;div&gt;\n        &lt;span class=\"mdi mdi-book-open-page-variant\"&gt;&lt;/span&gt;\n        &lt;h2&gt;Mais vendidos&lt;/h2&gt;\n      &lt;/div&gt;\n    &lt;/section&gt;\n    &lt;section class=\"books\"&gt;\n      &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n        &lt;img :src=\"book.cover\" :alt=\"book.title\" /&gt;\n        &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n        &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n        &lt;span class=\"price-and-like\"&gt;\n          &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n          &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n        &lt;/span&gt;\n        &lt;button @click=\"addToCart(book)\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n      &lt;/article&gt;\n    &lt;/section&gt;\n  &lt;/main&gt;\n  &lt;footer&gt;\n    &lt;nav&gt;\n      &lt;section class=\"upper-footer\"&gt;\n        &lt;div&gt;\n          &lt;p class=\"footer-title\"&gt;\n            &lt;a href=\"#\"&gt; IFbooks &lt;/a&gt;\n          &lt;/p&gt;\n          &lt;ul&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-facebook\" /&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-instagram\" /&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-twitter\" /&gt;&lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/div&gt;\n        &lt;div&gt;\n          &lt;p class=\"contact-text\"&gt;Contato&lt;/p&gt;\n          &lt;p&gt;&lt;span class=\"mdi mdi-phone\" /&gt; +55 47 99999-9999&lt;/p&gt;\n          &lt;p&gt;&lt;span class=\"mdi mdi-clock\" /&gt; 8h \u00e0s 23h - Seg a Sex&lt;/p&gt;\n          &lt;p&gt;&lt;span class=\"mdi mdi-email\" /&gt; contato@ifbooks.com.br&lt;/p&gt;\n          &lt;div class=\"payment-methods\"&gt;\n            &lt;span class=\"mdi mdi-visa\" /&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/section&gt;\n      &lt;section class=\"lower-footer\"&gt;\n        &lt;p&gt;&amp;copy; Alguns direitos reservados. IFBooks. 2025&lt;/p&gt;\n      &lt;/section&gt;\n    &lt;/nav&gt;\n  &lt;/footer&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h1 {\n    font-size: 1.3rem;\n    color: #000;\n\n    &amp; a {\n      text-decoration: none;\n      color: #000;\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .logo-title {\n      border-left: 1px solid #27ae6099;\n      font-size: 0.8rem;\n      margin-left: 10px;\n      padding-left: 10px;\n      color: #27ae6099;\n      width: 100px;\n      line-height: 1rem;\n    }\n  }\n\n  &amp; input {\n    width: 400px;\n    height: 40px;\n    border-radius: 5px;\n    font-size: 1rem;\n    border: 0;\n    background-color: #f1f1f1;\n    padding: 5px;\n  }\n\n  &amp; ul {\n    display: flex;\n  }\n\n  &amp; ul li {\n    list-style: none;\n    margin: 0 10px;\n    font-size: 1rem;\n  }\n\n  &amp; .icons li {\n    color: #27ae60;\n    font-size: 1.3rem;\n  }\n\n  &amp; .search-wrapper {\n    position: relative;\n  }\n\n  &amp; .search-wrapper::before {\n    content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n    font-family: 'Material Design Icons';\n    font-size: 1.2rem;\n    position: absolute;\n    right: 0.75rem;\n    top: 50%;\n    transform: translateY(-50%);\n    pointer-events: none;\n  }\n\n  &amp; .search {\n    padding-right: 2rem;\n  }\n}\n\n.hero {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5vh 9vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    color: #382c2c;\n    font-size: 3rem;\n    font-weight: 700;\n  }\n\n  &amp; .hero-content {\n    width: 50%;\n    padding-right: 20px;\n    font-weight: 400;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 20px;\n\n    &amp; h3.outlined {\n      background-color: transparent;\n      color: #27ae60;\n      border: 2px solid #27ae60;\n      padding: 15px 20px;\n      border-radius: 5px;\n      font-size: 1rem;\n    }\n\n    &amp; button {\n      margin-top: 20px;\n    }\n\n    p {\n      width: 70%;\n    }\n  }\n\n  &amp; .hero-image {\n    width: 50%;\n    text-align: right;\n    padding-right: 4vw;\n\n    &amp; img {\n      max-width: 100%;\n      height: auto;\n    }\n  }\n}\n\n.featured {\n  display: flex;\n  padding: 3vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; div {\n    display: flex;\n    align-items: center;\n    flex: 1;\n    justify-content: center;\n    gap: 10px;\n\n    &amp; span {\n      font-size: 2rem;\n    }\n\n    &amp; h2 {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n  }\n\n  &amp; article:nth-child(2) {\n    border-left: 1px solid #27ae6099;\n    border-right: 1px solid #27ae6099;\n  }\n}\n\n.books {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  padding: 5vh 8vw;\n\n  &amp; .book {\n    display: flex;\n    flex-direction: column;\n    min-width: 300px;\n    width: calc(100% / 4 - 42px);\n    margin: 20px;\n\n    &amp; h2 {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n\n    &amp; .book-author {\n      font-size: 1rem;\n    }\n\n    &amp; .book-price {\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; .price-and-like {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      &amp; .mdi-heart-outline {\n        font-size: 1.3rem;\n        color: #27ae60;\n      }\n    }\n  }\n}\n\n.cart {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 5vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    font-size: 2rem;\n    font-weight: 700;\n    color: #27ae60;\n  }\n\n  &amp; table {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 40px 0;\n\n    &amp; th,\n    td {\n      padding: 10px;\n      text-align: left;\n    }\n\n    &amp; th {\n      border-bottom: 2px solid #27ae6099;\n      font-size: 1.2rem;\n      font-weight: 700;\n    }\n\n    &amp; td {\n      border-bottom: 1px solid rgb(128, 128, 128);\n      font-size: 1rem;\n    }\n\n    &amp; .cart-item-quantity {\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .cart-item-subtotal {\n      font-size: 1.1rem;\n      font-weight: 700;\n    }\n\n    &amp; .cart-item {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n\n      &amp; img {\n        width: 80px;\n        height: auto;\n      }\n\n      &amp; .cart-item-info {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n\n        &amp; .cart-item-title {\n          font-size: 1.2rem;\n          font-weight: 700;\n        }\n        &amp; .cart-item-author {\n          font-size: 1rem;\n        }\n        &amp; .cart-item-price {\n          font-size: 1.1rem;\n          font-weight: 600;\n        }\n      }\n    }\n  }\n\n  &amp; .cart-summary {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n\n    &amp; .cupom {\n      display: flex;\n      align-items: center;\n      margin-top: 80px;\n      gap: 10px;\n\n      &amp; input {\n        width: 350px;\n        height: 50px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 2px solid rgb(128, 128, 128);\n        padding: 5px;\n      }\n    }\n\n    &amp; .summary {\n      border: 1px solid rgb(128, 128, 128);\n      padding: 1vw;\n\n      &amp; h2 {\n        font-size: 1.2rem;\n        font-weight: 700;\n        color: black;\n      }\n\n      &amp; .summary-items {\n        display: grid;\n        grid-template-columns: 3fr 1fr;\n\n        &amp; span {\n          padding: 10px 0;\n          border-bottom: 1px solid rgb(128, 128, 128);\n        }\n      }\n\n      &amp; button {\n        margin-top: 20px;\n      }\n    }\n  }\n}\n\nfooter {\n  background-color: #27ae60;\n  padding: 2vh 8vw;\n  color: #fff;\n\n  .upper-footer {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-bottom: 100px;\n    border-bottom: 2px solid #fff;\n\n    &amp; div {\n      display: flex;\n      flex-direction: column;\n      gap: 10px;\n\n      &amp; .footer-title {\n        font-size: 1.2rem;\n        font-weight: 700;\n\n        &amp; a {\n          text-decoration: none;\n          color: #fff;\n        }\n      }\n\n      &amp; .contact-text {\n        font-size: 1.1rem;\n        font-weight: 700;\n      }\n    }\n  }\n\n  .lower-footer {\n    display: flex;\n    justify-content: center;\n    padding-top: 20px;\n    font-size: 0.8rem;\n  }\n\n  ul {\n    display: flex;\n    padding: 0;\n    gap: 20px;\n\n    li {\n      list-style: none;\n      font-size: 1.2rem;\n      color: #fff;\n    }\n  }\n}\n\nbutton {\n  background-color: #27ae60;\n  color: #fff;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 5px;\n  font-size: 1rem;\n  cursor: pointer;\n  gap: 20px;\n  display: flex;\n  justify-content: center;\n\n  &amp;.outlined {\n    background-color: transparent;\n    color: #27ae60;\n    border: 2px solid #27ae60;\n  }\n\n  &amp;.plain {\n    background-color: transparent;\n    color: black;\n    border: none;\n    cursor: pointer;\n  }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"livraria-tutorial/header/","title":"Header","text":""},{"location":"livraria-tutorial/header/#criando-o-cabecalho","title":"Criando o cabe\u00e7alho","text":"<p>Vamos inicialmente criar a estrutura principal do cabe\u00e7alho, ainda sem a funcionalidade de abrir o carrinho. Para isso, vamos editar o arquivo <code>src/App.vue</code> e adicionar o seguinte c\u00f3digo:</p> ./src/App.vue<pre><code>&lt;template&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;h1&gt;\n        &lt;a href=\"#\"&gt;\n          IFbooks\n          &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n        &lt;/a&gt;\n      &lt;/h1&gt;\n      &lt;div class=\"search-wrapper\"&gt;\n        &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n      &lt;/div&gt;\n      &lt;ul&gt;\n        &lt;li&gt;Termos&lt;/li&gt;\n        &lt;li&gt;Equipe&lt;/li&gt;\n        &lt;li&gt;Envio&lt;/li&gt;\n        &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;ul class=\"icons\"&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n&lt;/template&gt;\n</code></pre> <p>Note, no c\u00f3digo acima, os seguintes detalhes:</p> <ul> <li>O cabe\u00e7alho \u00e9 composto por um <code>nav</code> que cont\u00e9m o t\u00edtulo da aplica\u00e7\u00e3o, um campo de busca e uma lista de links.</li> <li>O cabe\u00e7alho tamb\u00e9m cont\u00e9m uma lista de \u00edcones, que s\u00e3o representados por classes do Material Design Icons. Esses \u00edcones s\u00e3o usados para representar a\u00e7\u00f5es como abrir o carrinho, visualizar favoritos e acessar a conta do usu\u00e1rio.</li> <li>Os \u00edcones do Material Design Icons s\u00e3o representados por classes CSS. Por exemplo, o \u00edcone do carrinho \u00e9 representado pela classe <code>mdi mdi-cart</code>. Para usar um \u00edcone, basta adicionar a classe correspondente ao elemento HTML desejado. Uma lista completa de \u00edcones pode ser encontrada aqui.</li> <li>O cabe\u00e7alho j\u00e1 possui v\u00e1rias classes definidas que facilitar\u00e1 a estiliza\u00e7\u00e3o. Em seguida vamos adicionar o CSS para estilizar o cabe\u00e7alho.</li> <li>O cabe\u00e7alho possui um link que leva \u00e0 p\u00e1gina inicial da aplica\u00e7\u00e3o. O link \u00e9 representado pela tag <code>&lt;a&gt;</code> e cont\u00e9m o t\u00edtulo da aplica\u00e7\u00e3o. O t\u00edtulo \u00e9 estilizado com a classe <code>logo-title</code>, que pode ser usada para aplicar estilos espec\u00edficos ao t\u00edtulo.</li> <li>O cabe\u00e7alho possui uma barra de pesquisa, que \u00e9 representada pelo elemento <code>&lt;input&gt;</code>. A barra de pesquisa \u00e9 estilizada com a classe <code>search</code>, que pode ser usada para aplicar estilos espec\u00edficos \u00e0 barra de pesquisa.</li> <li>O cabe\u00e7alho possui uma lista de links, que s\u00e3o representados pelos elementos <code>&lt;li&gt;</code>. Os links s\u00e3o estilizados com a classe <code>icons</code>, que pode ser usada para aplicar estilos espec\u00edficos aos \u00edcones.</li> </ul> <p>Agora, vamos adicionar a estiliza\u00e7\u00e3o no pr\u00f3prio componente. Para isso, adicione o seguinte c\u00f3digo no arquivo <code>src/App.vue</code>:</p> ./src/App.vue<pre><code>&lt;style scoped&gt;\nheader nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h1 {\n    font-size: 1.3rem;\n    color: #000;\n\n    &amp; a {\n      text-decoration: none;\n      color: #000;\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .logo-title {\n      border-left: 1px solid #27ae6099;\n      font-size: 0.8rem;\n      margin-left: 10px;\n      padding-left: 10px;\n      color: #27ae6099;\n      width: 100px;\n      line-height: 1rem;\n    }\n  }\n\n  &amp; input {\n    width: 400px;\n    height: 40px;\n    border-radius: 5px;\n    font-size: 1rem;\n    border: 0;\n    background-color: #f1f1f1;\n    padding: 5px;\n  }\n\n  &amp; ul {\n    display: flex;\n  }\n\n  &amp; ul li {\n    list-style: none;\n    margin: 0 10px;\n    font-size: 1rem;\n  }\n\n  &amp; .icons li {\n    color: #27ae60;\n    font-size: 1.3rem;\n  }\n\n  &amp; .search-wrapper {\n    position: relative;\n  }\n\n  &amp; .search-wrapper::before {\n    content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n    font-family: 'Material Design Icons';\n    font-size: 1.2rem;\n    position: absolute;\n    right: 0.75rem;\n    top: 50%;\n    transform: translateY(-50%);\n    pointer-events: none;\n  }\n\n  &amp; .search {\n    padding-right: 2rem;\n  }\n}\n&lt;/style&gt;\n</code></pre> <p>Note que o c\u00f3digo acima utiliza uma caracter\u00edstica do CSS chamado de <code>nesting</code>, que permite aninhar seletores CSS dentro de outros seletores. Isso torna o c\u00f3digo mais leg\u00edvel e organizado. O <code>&amp;</code> \u00e9 um seletor especial que representa o elemento pai. Por exemplo, <code>&amp; h1</code> representa o elemento <code>&lt;h1&gt;</code> dentro do elemento pai.</p> <p>O c\u00f3digo acima estiliza o cabe\u00e7alho da aplica\u00e7\u00e3o, definindo a apar\u00eancia do t\u00edtulo, da barra de pesquisa e dos \u00edcones. O cabe\u00e7alho \u00e9 exibido na parte superior da p\u00e1gina e cont\u00e9m um link para a p\u00e1gina inicial, uma barra de pesquisa e uma lista de \u00edcones. A barra de pesquisa \u00e9 estilizada com um fundo cinza claro e um tamanho fixo. Os \u00edcones s\u00e3o exibidos em verde e t\u00eam um tamanho maior que o texto normal.</p>  Vers\u00e3o completa ./src/App.vue<pre><code>&lt;script setup&gt;\n&lt;/script&gt;\n\n&lt;template&gt;\n    &lt;header&gt;\n        &lt;nav&gt;\n        &lt;h1&gt;\n            &lt;a href=\"#\"&gt;\n            IFbooks\n            &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n            &lt;/a&gt;\n        &lt;/h1&gt;\n        &lt;div class=\"search-wrapper\"&gt;\n            &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n        &lt;/div&gt;\n        &lt;ul&gt;\n            &lt;li&gt;Termos&lt;/li&gt;\n            &lt;li&gt;Equipe&lt;/li&gt;\n            &lt;li&gt;Envio&lt;/li&gt;\n            &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n        &lt;/ul&gt;\n        &lt;ul class=\"icons\"&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n        &lt;/nav&gt;\n    &lt;/header&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 2vh 8vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; h1 {\n        font-size: 1.3rem;\n        color: #000;\n\n        &amp; a {\n        text-decoration: none;\n        color: #000;\n        display: flex;\n        align-items: center;\n        }\n\n        &amp; .logo-title {\n        border-left: 1px solid #27ae6099;\n        font-size: 0.8rem;\n        margin-left: 10px;\n        padding-left: 10px;\n        color: #27ae6099;\n        width: 100px;\n        line-height: 1rem;\n        }\n    }\n\n    &amp; input {\n        width: 400px;\n        height: 40px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 0;\n        background-color: #f1f1f1;\n        padding: 5px;\n    }\n\n    &amp; ul {\n        display: flex;\n    }\n\n    &amp; ul li {\n        list-style: none;\n        margin: 0 10px;\n        font-size: 1rem;\n    }\n\n    &amp; .icons li {\n        color: #27ae60;\n        font-size: 1.3rem;\n    }\n\n    &amp; .search-wrapper {\n      position: relative;\n    }\n\n    &amp; .search-wrapper::before {\n      content: '\udb80\udf49'; /_ Code glyph para mdi-magnify _/\n      font-family: 'Material Design Icons';\n      font-size: 1.2rem;\n      position: absolute;\n      right: 0.75rem;\n      top: 50%;\n      transform: translateY(-50%);\n      pointer-events: none;\n    }\n\n    &amp; .search {\n      padding-right: 2rem;\n    }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"livraria-tutorial/hero/","title":"Hero","text":""},{"location":"livraria-tutorial/hero/#a-secao-hero","title":"A se\u00e7\u00e3o Hero","text":"<p>A se\u00e7\u00e3o Hero vai apresentar uma imagem e um texto que descreve o livro e autor do m\u00eas. Essa se\u00e7\u00e3o \u00e9 uma parte importante do layout, pois \u00e9 a primeira que os visitantes ver\u00e3o ao acessar a p\u00e1gina. Neste momento faremos uma implementa\u00e7\u00e3o simples, com um livro est\u00e1tico, mas que pode ser facilmente adaptada para receber dados din\u00e2micos.</p> <p>Inicialmente, vamos editar o arquivo <code>src/App.vue</code> para adicionar a se\u00e7\u00e3o Hero. Para isso, adicione o seguinte c\u00f3digo no arquivo <code>src/App.vue</code>, no bloco <code>&lt;template&gt;</code>:</p> ./scr/App.vue<pre><code>&lt;main&gt;\n  &lt;section class=\"hero\"&gt;\n    &lt;div class=\"hero-content\"&gt;\n      &lt;h3 class=\"outlined\"&gt;Livro destaque&lt;/h3&gt;\n      &lt;h2&gt;Noc Ognia&lt;/h2&gt;\n      &lt;p&gt;\n        Noc ognia \u00e9 um romance de Erich-Emmanuel Schmitt, que narra a hist\u00f3ria\n        de um homem que vive em um mundo onde as pessoas n\u00e3o podem mais sonhar.\n        O livro \u00e9 uma reflex\u00e3o sobre a import\u00e2ncia dos sonhos e da imagina\u00e7\u00e3o na\n        vida humana. Erich-Emmanuel Schmitt \u00e9 um autor franc\u00eas conhecido por\n        suas obras que exploram temas filos\u00f3ficos e existenciais. Ele \u00e9 um dos\n        autores mais traduzidos da Fran\u00e7a e suas obras t\u00eam sido amplamente\n        elogiadas pela cr\u00edtica.\n      &lt;/p&gt;\n      &lt;button&gt;Acessar p\u00e1gina do livro&lt;/button&gt;\n    &lt;/div&gt;\n    &lt;div class=\"hero-image\"&gt;\n      &lt;img src=\"/imgs/hero.png\" alt=\"Hero Image\" /&gt;\n    &lt;/div&gt;\n  &lt;/section&gt;\n&lt;/main&gt;\n</code></pre> <p>Note que o c\u00f3digo acima adiciona uma nova se\u00e7\u00e3o chamada \"hero\" ao layout. Essa se\u00e7\u00e3o cont\u00e9m um t\u00edtulo, uma descri\u00e7\u00e3o e uma imagem. O t\u00edtulo e a descri\u00e7\u00e3o s\u00e3o estilizados com classes CSS espec\u00edficas, que ser\u00e3o definidas a seguir.</p> <p>A defini\u00e7\u00e3o do estilo da se\u00e7\u00e3o Hero ser\u00e1 feita no pr\u00f3prio componente. Para isso, adicione o seguinte c\u00f3digo no arquivo <code>src/App.vue</code>, no bloco <code>&lt;style&gt;</code>:</p> ./scr/App.vue<pre><code>.hero {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5vh 9vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; h2 {\n    color: #382c2c;\n    font-size: 3rem;\n    font-weight: 700;\n  }\n\n  &amp; .hero-content {\n    width: 50%;\n    padding-right: 20px;\n    font-weight: 400;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 20px;\n\n    &amp; h3.outlined {\n      background-color: transparent;\n      color: #27ae60;\n      border: 2px solid #27ae60;\n      padding: 15px 20px;\n      border-radius: 5px;\n      font-size: 1rem;\n    }\n\n    &amp; button {\n      margin-top: 20px;\n    }\n\n    p {\n      width: 70%;\n    }\n  }\n\n  &amp; .hero-image {\n    width: 50%;\n    text-align: right;\n    padding-right: 4vw;\n\n    &amp; img {\n      max-width: 100%;\n      height: auto;\n    }\n  }\n}\n\nbutton {\n  background-color: #27ae60;\n  color: #fff;\n  border: none;\n  padding: 15px 20px;\n  border-radius: 5px;\n  font-size: 1rem;\n  cursor: pointer;\n  gap: 20px;\n  display: flex;\n  justify-content: center;\n\n  &amp;.outlined {\n    background-color: transparent;\n    color: #27ae60;\n    border: 2px solid #27ae60;\n  }\n\n  &amp;.plain {\n    background-color: transparent;\n    color: black;\n    border: none;\n    cursor: pointer;\n  }\n}\n</code></pre> <p>Neste caso, foi adicionado um estilo para a se\u00e7\u00e3o Hero, que inclui um layout flex\u00edvel para alinhar o conte\u00fado e a imagem. O t\u00edtulo e a descri\u00e7\u00e3o tamb\u00e9m foram estilizados com cores e tamanhos de fonte espec\u00edficos. Note que n\u00e3o deve ter sido exclu\u00eddo o c\u00f3digo do cabe\u00e7alho, pois ele \u00e9 necess\u00e1rio para a renderiza\u00e7\u00e3o correta da p\u00e1gina.</p> <p>No quadro abaixo, voc\u00ea pode ver como est\u00e1, neste ponto, o arquivo <code>src/App.vue</code>.</p>  Vers\u00e3o completa ./src/App.vue<pre><code>&lt;script setup&gt;\n&lt;/script&gt;\n\n&lt;template&gt;\n    &lt;header&gt;\n        &lt;nav&gt;\n        &lt;h1&gt;\n            &lt;a href=\"#\"&gt;\n            IFbooks\n            &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n            &lt;/a&gt;\n        &lt;/h1&gt;\n        &lt;div class=\"search-wrapper\"&gt;\n            &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n        &lt;/div&gt;\n        &lt;ul&gt;\n            &lt;li&gt;Termos&lt;/li&gt;\n            &lt;li&gt;Equipe&lt;/li&gt;\n            &lt;li&gt;Envio&lt;/li&gt;\n            &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n        &lt;/ul&gt;\n        &lt;ul class=\"icons\"&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n        &lt;/nav&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n        &lt;section class=\"hero\"&gt;\n            &lt;div class=\"hero-content\"&gt;\n                &lt;h2&gt;Noc Ognia&lt;/h2&gt;\n                &lt;p&gt;\n                    Noc ognia \u00e9 um romance de Erich-Emmanuel Schmitt, que narra a hist\u00f3ria de um homem que vive\n                    em um mundo onde as pessoas n\u00e3o podem mais sonhar. O livro \u00e9 uma reflex\u00e3o sobre a\n                    import\u00e2ncia dos sonhos e da imagina\u00e7\u00e3o na vida humana. Erich-Emmanuel Schmitt \u00e9 um autor\n                    franc\u00eas conhecido por suas obras que exploram temas filos\u00f3ficos e existenciais. Ele \u00e9 um dos\n                    autores mais traduzidos da Fran\u00e7a e suas obras t\u00eam sido amplamente elogiadas pela cr\u00edtica.\n                &lt;/p&gt;\n                &lt;button&gt;Acessar p\u00e1gina do livro&lt;/button&gt;\n            &lt;/div&gt;\n            &lt;div class=\"hero-image\"&gt;\n                &lt;img src=\"/imgs/hero.png\" alt=\"Hero Image\" /&gt;\n            &lt;/div&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n\nheader nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 2vh 8vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; h1 {\n        font-size: 1.3rem;\n        color: #000;\n\n        &amp; a {\n            text-decoration: none;\n            color: #000;\n            display: flex;\n            align-items: center;\n        }\n\n        &amp; .logo-title {\n            border-left: 1px solid #27ae6099;\n            font-size: 0.8rem;\n            margin-left: 10px;\n            padding-left: 10px;\n            color: #27ae6099;\n            width: 100px;\n            line-height: 1rem;\n        }\n    }\n\n    &amp; input {\n        width: 400px;\n        height: 40px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 0;\n        background-color: #f1f1f1;\n        padding: 5px;\n    }\n\n    &amp; ul {\n        display: flex;\n    }\n\n    &amp; ul li {\n        list-style: none;\n        margin: 0 10px;\n        font-size: 1rem;\n    }\n\n    &amp; .icons li {\n        color: #27ae60;\n        font-size: 1.3rem;\n    }\n\n    &amp; .search-wrapper {\n        position: relative;\n    }\n\n    &amp; .search-wrapper::before {\n        content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n        font-family: 'Material Design Icons';\n        font-size: 1.2rem;\n        position: absolute;\n        right: 0.75rem;\n        top: 50%;\n        transform: translateY(-50%);\n        pointer-events: none;\n    }\n\n    &amp; .search {\n        padding-right: 2rem;\n    }\n}\n\n.hero {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 5vh 9vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; h2 {\n        color: #382c2c;\n        font-size: 3rem;\n        font-weight: 700;\n    }\n\n    &amp; .hero-content {\n        width: 50%;\n        padding-right: 20px;\n        font-weight: 400;\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n        gap: 20px;\n\n        &amp; h3.outlined {\n            background-color: transparent;\n            color: #27ae60;\n            border: 2px solid #27ae60;\n            padding: 15px 20px;\n            border-radius: 5px;\n            font-size: 1rem;\n        }\n\n        &amp; button {\n            margin-top: 20px;\n        }\n\n        p {\n            width: 70%;\n        }\n    }\n\n    &amp; .hero-image {\n        width: 50%;\n        text-align: right;\n        padding-right: 4vw;\n\n        &amp; img {\n            max-width: 100%;\n            height: auto;\n        }\n    }\n}\n\nbutton {\n    background-color: #27ae60;\n    color: #fff;\n    border: none;\n    padding: 15px 20px;\n    border-radius: 5px;\n    font-size: 1rem;\n    cursor: pointer;\n    gap: 20px;\n    display: flex;\n    justify-content: center;\n\n    &amp;.outlined {\n        background-color: transparent;\n        color: #27ae60;\n        border: 2px solid #27ae60;\n    }\n\n    &amp;.plain {\n        background-color: transparent;\n        color: black;\n        border: none;\n        cursor: pointer;\n    }\n}\n\n&lt;/style&gt;\n</code></pre>"},{"location":"reatividade/","title":"Reatividade","text":"<p>Uma das caracter\u00edsticas mais importantes do VueJS \u00e9 a reatividade, que define que quando o estado de um objeto \u00e9 alterado, os objetos que dependem desse estado s\u00e3o atualizados automaticamente. No VueJS, a reatividade \u00e9 implementada atrav\u00e9s de um sistema de observa\u00e7\u00e3o de dados. Assim, quando um dado \u00e9 alterado, o VueJS atualiza automaticamente a interface do usu\u00e1rio.</p> <p>De forma bem simplificada, podemos considerar que a reatividade \u00e9 a forma de criar vari\u00e1veis no VueJs. \u00c9 fato que uma vari\u00e1vel no VueJS pode ser criada usando os usuais comando <code>let</code> ou <code>const</code>, mas isso n\u00e3o \u00e9 o suficiente para que o VueJS entenda que aquela vari\u00e1vel \u00e9 reativa. Para que o VueJS entenda que uma vari\u00e1vel \u00e9 reativa, \u00e9 necess\u00e1rio que ela seja declarada usando a fun\u00e7\u00e3o <code>reactive</code> ou<code>ref</code>, que s\u00e3o conhecidas como fun\u00e7\u00f5es reativas.</p> <p>Recapitulando, podemos dizer que a reatividade, no VueJS, \u00e9 a forma de criar vari\u00e1veis que, quando alteradas, o seu valor \u00e9 atualizado automaticamente na interface do usu\u00e1rio, e vice-versa.</p> <p>Outro conceito importante \u00e9 o de propriedades computadas, que s\u00e3o fun\u00e7\u00f5es que s\u00e3o executadas automaticamente quando uma vari\u00e1vel reativa \u00e9 alterada. Essas fun\u00e7\u00f5es tamb\u00e9m ser\u00e3o apresentadas nesta aula.</p>"},{"location":"reatividade/#declarando-variaveis-reativas","title":"Declarando vari\u00e1veis reativas","text":"<p>Como vimos anteriormente, existem duas formas de declarar reatividade em um componente VueJS: <code>reactive</code> e <code>ref</code>. Nesta etapa, vamos estudar cada uma dessas formas. A primeira forma, <code>reactive</code>, embora seja muito comum n\u00e3o \u00e9 a mais recomendada, embora seja interessante em alguns cen\u00e1rios. Por isso, neste curso, vamos focar no uso da fun\u00e7\u00e3o <code>ref()</code>.</p>"},{"location":"reatividade/#declarando-variavel-reativas-usando-ref","title":"Declarando vari\u00e1vel reativas usando ref","text":"<p>A fun\u00e7\u00e3o <code>ref</code> \u00e9 a forma mais usual de declarar uma vari\u00e1vel reativa. Ela recebe um valor como par\u00e2metro e retorna um objeto que possui uma propriedade <code>value</code> que cont\u00e9m o valor passado como par\u00e2metro. Veja o exemplo abaixo:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { ref } from 'vue';\n\n  const contador = ref(0);\n\n  function incrementar() {\n    contador.value++;\n  }\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;button @click=\"incrementar\"&gt;{{ contador }}&lt;/button&gt;\n&lt;/template&gt;\n</code></pre> <p>No exemplo acima, a vari\u00e1vel <code>contador</code> \u00e9 declarada usando a fun\u00e7\u00e3o <code>ref</code>. A vari\u00e1vel <code>contador</code> \u00e9 um objeto que possui uma propriedade <code>value</code> que cont\u00e9m o valor passado como par\u00e2metro. Quando o bot\u00e3o \u00e9 clicado, a fun\u00e7\u00e3o <code>incrementar</code> \u00e9 chamada e o valor da propriedade <code>value</code> do objeto <code>contador</code> \u00e9 incrementado. Como o objeto <code>contador</code> \u00e9 reativo, o valor do bot\u00e3o \u00e9 atualizado automaticamente.</p> <p>Abaixo, alguns exemplos de declara\u00e7\u00e3o de vari\u00e1veis reativas usando a fun\u00e7\u00e3o <code>ref</code>:</p> <pre><code>import { ref } from 'vue';\nconst nome = ref('Jo\u00e3o'); // string\nconst idade = ref(30); // number\nconst preco = ref(10.5); // number\nconst ativo = ref(true); // boolean\nconst frutas = ref(['ma\u00e7\u00e3', 'banana']); // array de strings\n</code></pre>"},{"location":"reatividade/#o-uso-da-funcao-reactive","title":"O uso da fun\u00e7\u00e3o reactive","text":"<p>Embora seja poss\u00edvel declarar objetos reativos usando <code>ref</code>, a fun\u00e7\u00e3o <code>reactive</code> \u00e9 mais recomendada para esse tipo de situa\u00e7\u00e3o. Nesse caso, para acessar o valor do atributo n\u00e3o \u00e9 necess\u00e1rio usar a propriedade <code>value</code>. Veja o exemplo do objeto <code>pessoa</code> com uma fun\u00e7\u00e3o para alterar a idade:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { reactive } from 'vue';\n\n  const pessoa = reactive({\n    nome: 'Jo\u00e3o',\n    idade: 30,\n    ativo: true,\n  });\n\n  function aniversario() {\n    pessoa.idade++;\n  }\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;p&gt;{{ pessoa.nome }} tem {{ pessoa.idade }} anos&lt;/p&gt;\n    &lt;button @click=\"aniversario\"&gt;Fazer anivers\u00e1rio&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre> <p>No exemplo acima, a vari\u00e1vel <code>pessoa</code> \u00e9 declarada usando a fun\u00e7\u00e3o <code>reactive</code>. A vari\u00e1vel <code>pessoa</code> \u00e9 um objeto que possui tr\u00eas propriedades: <code>nome</code>, <code>idade</code> e <code>ativo</code>. Quando o bot\u00e3o \u00e9 clicado, a fun\u00e7\u00e3o <code>aniversario</code> \u00e9 chamada e a propriedade <code>idade</code> do objeto <code>pessoa</code> \u00e9 incrementada. Como o objeto <code>pessoa</code> \u00e9 reativo, o valor da propriedade <code>idade</code> \u00e9 atualizado automaticamente.</p>"},{"location":"reatividade/#uso-nas-templates-e-outras-consideracoes","title":"Uso nas templates e outras considera\u00e7\u00f5es","text":"<p>Embora j\u00e1 tenhamos apresentado exemplos anteriormente, note que para acessar o valor de uma vari\u00e1vel reativa, \u00e9 necess\u00e1rio usar simplesmente a sintaxe <code>{{ variavel }</code>, como qualquer vari\u00e1vel. Mesmo no caso das vari\u00e1veis definidas usando <code>ref()</code>, n\u00e3o \u00e9 necess\u00e1rio acessar a propriedade <code>value</code> para acessar o valor da vari\u00e1vel reativa, na parte de template.</p>"},{"location":"reatividade/#propriedades-computadas","title":"Propriedades computadas","text":"<p>As propriedades computadas s\u00e3o fun\u00e7\u00f5es que s\u00e3o executadas automaticamente sempre que uma de suas depend\u00eancias \u00e9 alterada. Elas s\u00e3o declaradas usando a fun\u00e7\u00e3o <code>computed</code> do VueJS. Veja o exemplo abaixo:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { reactive, computed } from 'vue';\n\n  const professor = reactive({\n    nome: 'Eduardo da Silva',\n    disciplinas: [\n      'Desenvolvimento Web II',\n      'Desenvolvimento de Aplicativos para Dispositivos M\u00f3veis',\n    ],\n  });\n\n  const possuiDisciplinas = computed(() =&gt; {\n    return professor.disciplinas.length &gt; 0;\n  });\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;Professor&lt;/h1&gt;\n    &lt;p&gt;Nome: {{ professor.nome }}&lt;/p&gt;\n    &lt;p v-if=\"!possuiDisciplinas\"&gt;O professor n\u00e3o possui disciplinas.&lt;/p&gt;\n    &lt;div v-else&gt;\n      &lt;p&gt;O professor possui disciplinas.&lt;/p&gt;\n      &lt;ul&gt;\n        &lt;li v-for=\"disciplina in professor.disciplinas\" :key=\"disciplina\"&gt;\n          {{ disciplina }}\n        &lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre> <p>Neste exemplo, alguns pontos importantes precisam ser destacados:</p> <ul> <li>a propriedade computada <code>possuiDisciplinas</code> \u00e9 declarada usando a fun\u00e7\u00e3o <code>computed</code> do componente VueJS.</li> <li>a fun\u00e7\u00e3o <code>computed</code> recebe como par\u00e2metro uma fun\u00e7\u00e3o que retorna o valor da propriedade computada.</li> <li><code>possuiDisciplinas</code> depende da propriedade <code>disciplinas</code> do objeto <code>professor</code>.</li> <li>portanto, a propriedade computada <code>possuiDisciplinas</code> \u00e9 executada automaticamente sempre que a propriedade <code>disciplinas</code> do objeto <code>professor</code> for alterada. Note que <code>professor</code> \u00e9 um dado reativo, como visto anteriormente;</li> </ul> <p>Ainda, o resultado da propriedade computada <code>possuiDisciplinas</code> \u00e9 exibido na interface do usu\u00e1rio. Note que o valor da propriedade computada <code>possuiDisciplinas</code> \u00e9 exibido na interface do usu\u00e1rio sempre que a propriedade <code>disciplinas</code> do objeto <code>professor</code> for alterada. Neste exemplo, o resultado ser\u00e1:</p> <pre><code>&lt;h1&gt;Professor&lt;/h1&gt;\n&lt;p&gt;Nome: Eduardo da Silva&lt;/p&gt;\n&lt;div&gt;\n  &lt;p&gt;O professor possui disciplinas.&lt;/p&gt;\n  &lt;ul&gt;\n    &lt;li&gt;Desenvolvimento Web II&lt;/li&gt;\n    &lt;li&gt;Desenvolvimento de Aplicativos para Dispositivos M\u00f3veis&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre> <p>Note que se a propriedade <code>disciplinas</code> do objeto <code>professor</code> for alterada para um array vazio, o resultado da propriedade computada <code>possuiDisciplinas</code> ser\u00e1 alterado automaticamente para <code>N\u00e3o</code>, como o exemplo abaixo.</p> <pre><code>&lt;h1&gt;Professor&lt;/h1&gt;\n&lt;p&gt;Nome: Eduardo da Silva&lt;/p&gt;\n&lt;p&gt;O professor n\u00e3o possui disciplinas.&lt;/p&gt;\n</code></pre> <p>Por que usar propriedades computadas e n\u00e3o m\u00e9todos?</p> <p>A principal diferen\u00e7a entre propriedades computadas e m\u00e9todos \u00e9 que as propriedades computadas s\u00e3o executadas automaticamente sempre que uma de suas depend\u00eancias \u00e9 alterada. J\u00e1 os m\u00e9todos s\u00e3o executados quando s\u00e3o chamados. Veja o exemplo abaixo, muito similar ao exemplo anterior.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { ref } from 'vue';\n\n  const professor = ref({\n    nome: 'Eduardo da Silva',\n    disciplinas: [\n      'Desenvolvimento Web II',\n      'Desenvolvimento de Aplicativos para Dispositivos M\u00f3veis',\n    ],\n  });\n\n  function possuiDisciplinas() {\n    return professor.value.disciplinas.length &gt; 0;\n  }\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;Professor&lt;/h1&gt;\n    &lt;p&gt;Nome: {{ professor.nome }}&lt;/p&gt;\n    &lt;p v-if=\"!possuiDisciplinas\"&gt;O professor n\u00e3o possui disciplinas.&lt;/p&gt;\n    &lt;div v-else&gt;\n      &lt;p&gt;O professor possui disciplinas.&lt;/p&gt;\n      &lt;ul&gt;\n        &lt;li v-for=\"disciplina in professor.disciplinas\" :key=\"disciplina\"&gt;\n          {{ disciplina }}\n        &lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre> <p>Neste exemplo, a propriedade computada <code>possuiDisciplinas</code> foi substitu\u00edda por um m\u00e9todo. O resultado ao executar o exemplo \u00e9 o mesmo do exemplo anterior. Contudo, o resultado de um propriedade computada \u00e9 mantido em cache, enquanto o resultado de um m\u00e9todo \u00e9 sempre recalculado. Em outras palavras, o resultado de uma propriedade computada \u00e9 recalculado apenas quando uma de suas depend\u00eancias \u00e9 alterada. J\u00e1 o resultado de um m\u00e9todo \u00e9 recalculado sempre que o m\u00e9todo \u00e9 chamado, o que no exemplo anterior acontecer\u00e1 sempre que acontecer uma re-renderiza\u00e7\u00e3o da interface do usu\u00e1rio.</p> <p>Mas porque isso \u00e9 importante? Imagine que voc\u00ea tenham uma outra propriedade com um Array armazenado, n\u00e3o referente \u00e0s disciplinas, mas aos <code>projetos</code> de um professor. Nesse caso, o resultado do m\u00e9todo <code>possuiDisciplinas</code> ser\u00e1 recalculado sempre que a interface do usu\u00e1rio for re-renderizada, por exemplo, ao adicionar um novo <code>projeto</code> mesmo que a propriedade <code>disciplinas</code> do objeto <code>professor</code> n\u00e3o tenha sido alterada. Isso pode causar um impacto negativo no desempenho da aplica\u00e7\u00e3o, pois o m\u00e9todo <code>possuiDisciplinas</code> pode ser executado in\u00fameras vezes sem necessidade.</p>"},{"location":"reatividade/#exercicios","title":"Exerc\u00edcios","text":"<p>Para fixar o conte\u00fado apresentado, resolva os exerc\u00edcios abaixo:</p> <ol> <li>Fa\u00e7a dois contadores (com bot\u00f5es de incrementar e decrementar). Mostre uma <code>div</code> com a soma dos dois valores. Tamb\u00e9m, usando propriedades computadas, fa\u00e7a uma <code>div</code> aparecer quando o valor da soma for maior que 10 e outra quando for menor que 10.</li> <li>Seguindo o mesmo exemplo anterior, fa\u00e7a uma <code>div</code> que seja apresentada se o resultado da soma for par e outra se a soma for \u00edmpar. Tamb\u00e9m usando propriedades computadas.</li> <li>Fa\u00e7a uma vari\u00e1vel reativa para guardar um valor booleano. Mostre uma <code>div</code> com o texto \"Verdadeiro\" quando o valor for verdadeiro e \"Falso\" quando o valor for falso.</li> </ol>"},{"location":"reatividade/#correcao-dos-exercicios","title":"Corre\u00e7\u00e3o dos exerc\u00edcios","text":"<p>Faremos a corre\u00e7\u00e3o dos exerc\u00edcios usando a API de composi\u00e7\u00e3o. Vamos, al\u00e9m disso, corrigir todos os itens num s\u00f3 exemplo. Sugiro que voc\u00ea tente resolver os exerc\u00edcios antes de ver a corre\u00e7\u00e3o.</p> Corre\u00e7\u00e3o dos exerc\u00edcios ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { computed, ref } from 'vue';\n\n  const contador1 = ref(0);\n  const contador2 = ref(0);\n  const valorBooleano = ref(true);\n\n  function incrementar(contador) {\n    eval(contador).value++;\n  }\n\n  function decrementar(contador) {\n    if (eval(contador).value &gt; 0) {\n      eval(contador).value--;\n    }\n  }\n\n  const soma = computed(() =&gt; contador1.value + contador2.value);\n  const somaPar = computed(() =&gt; soma.value % 2 === 0);\n  const somaMaiorQue10 = computed(() =&gt; soma.value &gt; 10);\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;h1&gt;Corre\u00e7\u00e3o dos exerc\u00edcios&lt;/h1&gt;\n  &lt;div class=\"booleano\"&gt;\n    &lt;button @click=\"valorBooleano = !valorBooleano\"&gt;\n       {{ valorBooleano ? 'Esconder Resultado' : 'Mostrar Resultado' }}\n\n    &lt;/button&gt;\n  &lt;/div&gt;\n  &lt;div v-if=\"valorBooleano\"&gt;\n    &lt;div class=\"contador\"&gt;\n      &lt;h2&gt;Contador 1&lt;/h2&gt;\n      &lt;button @click=\"incrementar('contador1')\"&gt;Incrementar&lt;/button&gt;\n      &lt;button @click=\"decrementar('contador1')\"&gt;Decrementar&lt;/button&gt;\n      &lt;p&gt;Valor: {{ contador1 }}&lt;/p&gt;\n    &lt;/div&gt;\n    &lt;div class=\"contador\"&gt;\n      &lt;h2&gt;Contador 2&lt;/h2&gt;\n      &lt;button @click=\"incrementar('contador2')\"&gt;Incrementar&lt;/button&gt;\n      &lt;button @click=\"decrementar('contador2')\"&gt;Decrementar&lt;/button&gt;\n      &lt;p&gt;Valor: {{ contador2 }}&lt;/p&gt;\n    &lt;/div&gt;\n    &lt;div class=\"soma\"&gt;\n      &lt;h2&gt;Soma&lt;/h2&gt;\n      &lt;p&gt;Valor:  {{ soma }} &lt;/p&gt;\n      &lt;div v-if=\"somaMaiorQue10\"&gt;\n        &lt;p&gt;A soma \u00e9 maior que 10&lt;/p&gt;\n      &lt;/div&gt;\n      &lt;div v-else&gt;\n        &lt;p&gt;A soma \u00e9 menor que 10&lt;/p&gt;\n      &lt;/div&gt;\n      &lt;div v-if=\"somaPar\"&gt;\n        &lt;p&gt;A soma \u00e9 par&lt;/p&gt;\n      &lt;/div&gt;\n      &lt;div v-else&gt;\n        &lt;p&gt;A soma \u00e9 \u00edmpar&lt;/p&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre> <p>Note que esta \u00e9 uma das formas de corrigir os exerc\u00edcios. Existem outras formas de fazer a mesma coisa. O importante \u00e9 entender o conceito e a sintaxe de templates do Vue 3.</p>"},{"location":"reatividade/correcao-exercicios/","title":"Correcao exercicios","text":""},{"location":"reatividade/correcao-exercicios/#correcao-dos-exercicios","title":"Corre\u00e7\u00e3o dos exerc\u00edcios","text":"<p>Faremos a corre\u00e7\u00e3o dos exerc\u00edcios usando a API de composi\u00e7\u00e3o. Vamos, al\u00e9m disso, corrigir todos os itens num s\u00f3 exemplo. Sugiro que voc\u00ea tente resolver os exerc\u00edcios antes de ver a corre\u00e7\u00e3o.</p> Corre\u00e7\u00e3o dos exerc\u00edcios ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { computed, ref } from 'vue';\n\n  const contador1 = ref(0);\n  const contador2 = ref(0);\n  const valorBooleano = ref(true);\n\n  function incrementar(contador) {\n    eval(contador).value++;\n  }\n\n  function decrementar(contador) {\n    if (eval(contador).value &gt; 0) {\n      eval(contador).value--;\n    }\n  }\n\n  const soma = computed(() =&gt; contador1.value + contador2.value);\n  const somaPar = computed(() =&gt; soma.value % 2 === 0);\n  const somaMaiorQue10 = computed(() =&gt; soma.value &gt; 10);\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;h1&gt;Corre\u00e7\u00e3o dos exerc\u00edcios&lt;/h1&gt;\n  &lt;div class=\"booleano\"&gt;\n    &lt;button @click=\"valorBooleano = !valorBooleano\"&gt;\n       {{ valorBooleano ? 'Esconder Resultado' : 'Mostrar Resultado' }}\n\n    &lt;/button&gt;\n  &lt;/div&gt;\n  &lt;div v-if=\"valorBooleano\"&gt;\n    &lt;div class=\"contador\"&gt;\n      &lt;h2&gt;Contador 1&lt;/h2&gt;\n      &lt;button @click=\"incrementar('contador1')\"&gt;Incrementar&lt;/button&gt;\n      &lt;button @click=\"decrementar('contador1')\"&gt;Decrementar&lt;/button&gt;\n      &lt;p&gt;Valor: {{ contador1 }}&lt;/p&gt;\n    &lt;/div&gt;\n    &lt;div class=\"contador\"&gt;\n      &lt;h2&gt;Contador 2&lt;/h2&gt;\n      &lt;button @click=\"incrementar('contador2')\"&gt;Incrementar&lt;/button&gt;\n      &lt;button @click=\"decrementar('contador2')\"&gt;Decrementar&lt;/button&gt;\n      &lt;p&gt;Valor: {{ contador2 }}&lt;/p&gt;\n    &lt;/div&gt;\n    &lt;div class=\"soma\"&gt;\n      &lt;h2&gt;Soma&lt;/h2&gt;\n      &lt;p&gt;Valor:  {{ soma }} &lt;/p&gt;\n      &lt;div v-if=\"somaMaiorQue10\"&gt;\n        &lt;p&gt;A soma \u00e9 maior que 10&lt;/p&gt;\n      &lt;/div&gt;\n      &lt;div v-else&gt;\n        &lt;p&gt;A soma \u00e9 menor que 10&lt;/p&gt;\n      &lt;/div&gt;\n      &lt;div v-if=\"somaPar\"&gt;\n        &lt;p&gt;A soma \u00e9 par&lt;/p&gt;\n      &lt;/div&gt;\n      &lt;div v-else&gt;\n        &lt;p&gt;A soma \u00e9 \u00edmpar&lt;/p&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre> <p>Note que esta \u00e9 uma das formas de corrigir os exerc\u00edcios. Existem outras formas de fazer a mesma coisa. O importante \u00e9 entender o conceito e a sintaxe de templates do Vue 3.</p>"},{"location":"reatividade/exercicios/","title":"Exercicios","text":""},{"location":"reatividade/exercicios/#exercicios","title":"Exerc\u00edcios","text":"<p>Para fixar o conte\u00fado apresentado, resolva os exerc\u00edcios abaixo:</p> <ol> <li>Fa\u00e7a dois contadores (com bot\u00f5es de incrementar e decrementar). Mostre uma <code>div</code> com a soma dos dois valores. Tamb\u00e9m, usando propriedades computadas, fa\u00e7a uma <code>div</code> aparecer quando o valor da soma for maior que 10 e outra quando for menor que 10.</li> <li>Seguindo o mesmo exemplo anterior, fa\u00e7a uma <code>div</code> que seja apresentada se o resultado da soma for par e outra se a soma for \u00edmpar. Tamb\u00e9m usando propriedades computadas.</li> <li>Fa\u00e7a uma vari\u00e1vel reativa para guardar um valor booleano. Mostre uma <code>div</code> com o texto \"Verdadeiro\" quando o valor for verdadeiro e \"Falso\" quando o valor for falso.</li> </ol>"},{"location":"reatividade/propriedades-computadas/","title":"Propriedades computadas","text":""},{"location":"reatividade/propriedades-computadas/#propriedades-computadas","title":"Propriedades computadas","text":"<p>As propriedades computadas s\u00e3o fun\u00e7\u00f5es que s\u00e3o executadas automaticamente sempre que uma de suas depend\u00eancias \u00e9 alterada. Elas s\u00e3o declaradas usando a fun\u00e7\u00e3o <code>computed</code> do VueJS. Veja o exemplo abaixo:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { reactive, computed } from 'vue';\n\n  const professor = reactive({\n    nome: 'Eduardo da Silva',\n    disciplinas: [\n      'Desenvolvimento Web II',\n      'Desenvolvimento de Aplicativos para Dispositivos M\u00f3veis',\n    ],\n  });\n\n  const possuiDisciplinas = computed(() =&gt; {\n    return professor.disciplinas.length &gt; 0;\n  });\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;Professor&lt;/h1&gt;\n    &lt;p&gt;Nome: {{ professor.nome }}&lt;/p&gt;\n    &lt;p v-if=\"!possuiDisciplinas\"&gt;O professor n\u00e3o possui disciplinas.&lt;/p&gt;\n    &lt;div v-else&gt;\n      &lt;p&gt;O professor possui disciplinas.&lt;/p&gt;\n      &lt;ul&gt;\n        &lt;li v-for=\"disciplina in professor.disciplinas\" :key=\"disciplina\"&gt;\n          {{ disciplina }}\n        &lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre> <p>Neste exemplo, alguns pontos importantes precisam ser destacados:</p> <ul> <li>a propriedade computada <code>possuiDisciplinas</code> \u00e9 declarada usando a fun\u00e7\u00e3o <code>computed</code> do componente VueJS.</li> <li>a fun\u00e7\u00e3o <code>computed</code> recebe como par\u00e2metro uma fun\u00e7\u00e3o que retorna o valor da propriedade computada.</li> <li><code>possuiDisciplinas</code> depende da propriedade <code>disciplinas</code> do objeto <code>professor</code>.</li> <li>portanto, a propriedade computada <code>possuiDisciplinas</code> \u00e9 executada automaticamente sempre que a propriedade <code>disciplinas</code> do objeto <code>professor</code> for alterada. Note que <code>professor</code> \u00e9 um dado reativo, como visto anteriormente;</li> </ul> <p>Ainda, o resultado da propriedade computada <code>possuiDisciplinas</code> \u00e9 exibido na interface do usu\u00e1rio. Note que o valor da propriedade computada <code>possuiDisciplinas</code> \u00e9 exibido na interface do usu\u00e1rio sempre que a propriedade <code>disciplinas</code> do objeto <code>professor</code> for alterada. Neste exemplo, o resultado ser\u00e1:</p> <pre><code>&lt;h1&gt;Professor&lt;/h1&gt;\n&lt;p&gt;Nome: Eduardo da Silva&lt;/p&gt;\n&lt;div&gt;\n  &lt;p&gt;O professor possui disciplinas.&lt;/p&gt;\n  &lt;ul&gt;\n    &lt;li&gt;Desenvolvimento Web II&lt;/li&gt;\n    &lt;li&gt;Desenvolvimento de Aplicativos para Dispositivos M\u00f3veis&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre> <p>Note que se a propriedade <code>disciplinas</code> do objeto <code>professor</code> for alterada para um array vazio, o resultado da propriedade computada <code>possuiDisciplinas</code> ser\u00e1 alterado automaticamente para <code>N\u00e3o</code>, como o exemplo abaixo.</p> <pre><code>&lt;h1&gt;Professor&lt;/h1&gt;\n&lt;p&gt;Nome: Eduardo da Silva&lt;/p&gt;\n&lt;p&gt;O professor n\u00e3o possui disciplinas.&lt;/p&gt;\n</code></pre> <p>Por que usar propriedades computadas e n\u00e3o m\u00e9todos?</p> <p>A principal diferen\u00e7a entre propriedades computadas e m\u00e9todos \u00e9 que as propriedades computadas s\u00e3o executadas automaticamente sempre que uma de suas depend\u00eancias \u00e9 alterada. J\u00e1 os m\u00e9todos s\u00e3o executados quando s\u00e3o chamados. Veja o exemplo abaixo, muito similar ao exemplo anterior.</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { ref } from 'vue';\n\n  const professor = ref({\n    nome: 'Eduardo da Silva',\n    disciplinas: [\n      'Desenvolvimento Web II',\n      'Desenvolvimento de Aplicativos para Dispositivos M\u00f3veis',\n    ],\n  });\n\n  function possuiDisciplinas() {\n    return professor.value.disciplinas.length &gt; 0;\n  }\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;Professor&lt;/h1&gt;\n    &lt;p&gt;Nome: {{ professor.nome }}&lt;/p&gt;\n    &lt;p v-if=\"!possuiDisciplinas\"&gt;O professor n\u00e3o possui disciplinas.&lt;/p&gt;\n    &lt;div v-else&gt;\n      &lt;p&gt;O professor possui disciplinas.&lt;/p&gt;\n      &lt;ul&gt;\n        &lt;li v-for=\"disciplina in professor.disciplinas\" :key=\"disciplina\"&gt;\n          {{ disciplina }}\n        &lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre> <p>Neste exemplo, a propriedade computada <code>possuiDisciplinas</code> foi substitu\u00edda por um m\u00e9todo. O resultado ao executar o exemplo \u00e9 o mesmo do exemplo anterior. Contudo, o resultado de um propriedade computada \u00e9 mantido em cache, enquanto o resultado de um m\u00e9todo \u00e9 sempre recalculado. Em outras palavras, o resultado de uma propriedade computada \u00e9 recalculado apenas quando uma de suas depend\u00eancias \u00e9 alterada. J\u00e1 o resultado de um m\u00e9todo \u00e9 recalculado sempre que o m\u00e9todo \u00e9 chamado, o que no exemplo anterior acontecer\u00e1 sempre que acontecer uma re-renderiza\u00e7\u00e3o da interface do usu\u00e1rio.</p> <p>Mas porque isso \u00e9 importante? Imagine que voc\u00ea tenham uma outra propriedade com um Array armazenado, n\u00e3o referente \u00e0s disciplinas, mas aos <code>projetos</code> de um professor. Nesse caso, o resultado do m\u00e9todo <code>possuiDisciplinas</code> ser\u00e1 recalculado sempre que a interface do usu\u00e1rio for re-renderizada, por exemplo, ao adicionar um novo <code>projeto</code> mesmo que a propriedade <code>disciplinas</code> do objeto <code>professor</code> n\u00e3o tenha sido alterada. Isso pode causar um impacto negativo no desempenho da aplica\u00e7\u00e3o, pois o m\u00e9todo <code>possuiDisciplinas</code> pode ser executado in\u00fameras vezes sem necessidade.</p>"},{"location":"reatividade/variaveis-reativas/","title":"Variaveis reativas","text":""},{"location":"reatividade/variaveis-reativas/#declarando-variaveis-reativas","title":"Declarando vari\u00e1veis reativas","text":"<p>Como vimos anteriormente, existem duas formas de declarar reatividade em um componente VueJS: <code>reactive</code> e <code>ref</code>. Nesta etapa, vamos estudar cada uma dessas formas. A primeira forma, <code>reactive</code>, embora seja muito comum n\u00e3o \u00e9 a mais recomendada, embora seja interessante em alguns cen\u00e1rios. Por isso, neste curso, vamos focar no uso da fun\u00e7\u00e3o <code>ref()</code>.</p>"},{"location":"reatividade/variaveis-reativas/#declarando-variavel-reativas-usando-ref","title":"Declarando vari\u00e1vel reativas usando ref","text":"<p>A fun\u00e7\u00e3o <code>ref</code> \u00e9 a forma mais usual de declarar uma vari\u00e1vel reativa. Ela recebe um valor como par\u00e2metro e retorna um objeto que possui uma propriedade <code>value</code> que cont\u00e9m o valor passado como par\u00e2metro. Veja o exemplo abaixo:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { ref } from 'vue';\n\n  const contador = ref(0);\n\n  function incrementar() {\n    contador.value++;\n  }\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;button @click=\"incrementar\"&gt;{{ contador }}&lt;/button&gt;\n&lt;/template&gt;\n</code></pre> <p>No exemplo acima, a vari\u00e1vel <code>contador</code> \u00e9 declarada usando a fun\u00e7\u00e3o <code>ref</code>. A vari\u00e1vel <code>contador</code> \u00e9 um objeto que possui uma propriedade <code>value</code> que cont\u00e9m o valor passado como par\u00e2metro. Quando o bot\u00e3o \u00e9 clicado, a fun\u00e7\u00e3o <code>incrementar</code> \u00e9 chamada e o valor da propriedade <code>value</code> do objeto <code>contador</code> \u00e9 incrementado. Como o objeto <code>contador</code> \u00e9 reativo, o valor do bot\u00e3o \u00e9 atualizado automaticamente.</p> <p>Abaixo, alguns exemplos de declara\u00e7\u00e3o de vari\u00e1veis reativas usando a fun\u00e7\u00e3o <code>ref</code>:</p> <pre><code>import { ref } from 'vue';\nconst nome = ref('Jo\u00e3o'); // string\nconst idade = ref(30); // number\nconst preco = ref(10.5); // number\nconst ativo = ref(true); // boolean\nconst frutas = ref(['ma\u00e7\u00e3', 'banana']); // array de strings\n</code></pre>"},{"location":"reatividade/variaveis-reativas/#o-uso-da-funcao-reactive","title":"O uso da fun\u00e7\u00e3o reactive","text":"<p>Embora seja poss\u00edvel declarar objetos reativos usando <code>ref</code>, a fun\u00e7\u00e3o <code>reactive</code> \u00e9 mais recomendada para esse tipo de situa\u00e7\u00e3o. Nesse caso, para acessar o valor do atributo n\u00e3o \u00e9 necess\u00e1rio usar a propriedade <code>value</code>. Veja o exemplo do objeto <code>pessoa</code> com uma fun\u00e7\u00e3o para alterar a idade:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { reactive } from 'vue';\n\n  const pessoa = reactive({\n    nome: 'Jo\u00e3o',\n    idade: 30,\n    ativo: true,\n  });\n\n  function aniversario() {\n    pessoa.idade++;\n  }\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;p&gt;{{ pessoa.nome }} tem {{ pessoa.idade }} anos&lt;/p&gt;\n    &lt;button @click=\"aniversario\"&gt;Fazer anivers\u00e1rio&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre> <p>No exemplo acima, a vari\u00e1vel <code>pessoa</code> \u00e9 declarada usando a fun\u00e7\u00e3o <code>reactive</code>. A vari\u00e1vel <code>pessoa</code> \u00e9 um objeto que possui tr\u00eas propriedades: <code>nome</code>, <code>idade</code> e <code>ativo</code>. Quando o bot\u00e3o \u00e9 clicado, a fun\u00e7\u00e3o <code>aniversario</code> \u00e9 chamada e a propriedade <code>idade</code> do objeto <code>pessoa</code> \u00e9 incrementada. Como o objeto <code>pessoa</code> \u00e9 reativo, o valor da propriedade <code>idade</code> \u00e9 atualizado automaticamente.</p>"},{"location":"reatividade/variaveis-reativas/#uso-nas-templates-e-outras-consideracoes","title":"Uso nas templates e outras considera\u00e7\u00f5es","text":"<p>Embora j\u00e1 tenhamos apresentado exemplos anteriormente, note que para acessar o valor de uma vari\u00e1vel reativa, \u00e9 necess\u00e1rio usar simplesmente a sintaxe <code>{{ variavel }</code>, como qualquer vari\u00e1vel. Mesmo no caso das vari\u00e1veis definidas usando <code>ref()</code>, n\u00e3o \u00e9 necess\u00e1rio acessar a propriedade <code>value</code> para acessar o valor da vari\u00e1vel reativa, na parte de template.</p>"},{"location":"router/","title":"Roteamento","text":""},{"location":"router/#conceitos-de-roteamento","title":"Conceitos de roteamento","text":"<p>Quando desenvolvemos aplica\u00e7\u00f5es web, \u00e9 comum que elas tenham mais de uma p\u00e1gina. Para facilitar a navega\u00e7\u00e3o entre essas p\u00e1ginas, utilizamos o conceito de roteamento. O roteamento \u00e9 o processo de determinar qual conte\u00fado deve ser exibido em uma p\u00e1gina web com base na URL acessada pelo usu\u00e1rio.</p> <p>Vale lembrar que quando usamos o VueJS estamos desenvolvendo uma Single Page Application (SPA), ou seja, uma aplica\u00e7\u00e3o web que carrega uma \u00fanica p\u00e1gina HTML e atualiza o conte\u00fado dinamicamente, sem a necessidade de recarregar a p\u00e1gina. O roteamento em uma SPA \u00e9 feito de forma din\u00e2mica, sem a necessidade de recarregar a p\u00e1gina.</p> <p>No VueJS, o roteamento \u00e9 feito com o Vue Router, uma biblioteca oficial que nos permite adicionar rotas \u00e0 nossa aplica\u00e7\u00e3o. Com o Vue Router, podemos definir diferentes rotas para a nossa aplica\u00e7\u00e3o e associar cada rota a um componente espec\u00edfico. Dessa forma, quando o usu\u00e1rio acessa uma determinada URL, o Vue Router carrega o componente correspondente e exibe o conte\u00fado na p\u00e1gina.</p> <p>Neste cap\u00edtulo, vamos aprender a utilizar o Vue Router para adicionar rotas \u00e0 nossa aplica\u00e7\u00e3o VueJS. Vamos criar um projeto VueJS com o Vue Router e adicionar rotas para diferentes p\u00e1ginas. Al\u00e9m disso, vamos aprender a navegar entre as p\u00e1ginas da aplica\u00e7\u00e3o e a passar par\u00e2metros para as rotas.</p>"},{"location":"router/#instalacao-e-configuracao-basica","title":"Instala\u00e7\u00e3o e configura\u00e7\u00e3o b\u00e1sica","text":"<p>Note</p> <p>Faremos todos os c\u00f3digo na continua\u00e7\u00e3o do projeto que j\u00e1 estamos desenvolvendo com o carrinho de compras da livraria. Poder\u00edamos ter feito a cria\u00e7\u00e3o do projeto j\u00e1 com o Vue-Router</p> <p>Para instalar o Vue Router em um projeto VueJS, voc\u00ea pode usar o seguinte comando:</p> <pre><code>npm install vue-router@4\n</code></pre> <p>Ap\u00f3s a instala\u00e7\u00e3o, voc\u00ea pode configurar o Vue Router no seu projeto. Para isso, crie um arquivo chamado <code>index.js</code> na pasta <code>src/router</code> (1) do seu projeto e adicione o seguinte c\u00f3digo:</p> <ol> <li> Crie a pasta <code>src/router</code> caso ela n\u00e3o exista.</li> </ol> ./src/router/index.js<pre><code>import { createRouter, createWebHistory } from 'vue-router';\n\nconst routes = [];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nexport default router;\n</code></pre> <p>Nesse c\u00f3digo, estamos importando as fun\u00e7\u00f5es <code>createRouter</code> e <code>createWebHistory</code> do Vue Router. Em seguida, definimos um array <code>routes</code> que ser\u00e1 usado para armazenar as rotas da nossa aplica\u00e7\u00e3o. Por enquanto, deixamos esse array vazio. Depois disso, criamos uma inst\u00e2ncia do roteador usando a fun\u00e7\u00e3o <code>createRouter</code>, passando o hist\u00f3rico de navega\u00e7\u00e3o e as rotas definidas. Por fim, exportamos o roteador para que possamos us\u00e1-lo em outros arquivos.</p> <p>Agora, precisamos importar o roteador no arquivo principal da nossa aplica\u00e7\u00e3o, que \u00e9 o arquivo <code>main.js</code>. Abra esse arquivo e adicione o seguinte c\u00f3digo:</p> ./src/main.js<pre><code>import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\n\ncreateApp(App).use(router).mount('#app');\n</code></pre> <p>Nesse c\u00f3digo, estamos importando o roteador que acabamos de criar e usando o m\u00e9todo <code>use</code> para registr\u00e1-lo na inst\u00e2ncia da aplica\u00e7\u00e3o Vue. Isso permite que o Vue Router gerencie as rotas da nossa aplica\u00e7\u00e3o.</p>"},{"location":"router/#criando-a-pagina-principal","title":"Criando a p\u00e1gina principal","text":"<p>Agora que configuramos o Vue Router, podemos come\u00e7ar a definir as rotas da nossa aplica\u00e7\u00e3o. Inicialmente, vamos criar um componente que ser\u00e1 a p\u00e1gina principal da nossa aplica\u00e7\u00e3o. Crie um arquivo chamado <code>HomeView.vue</code> na pasta <code>src/views</code> (1) do seu projeto e adicione o seguinte c\u00f3digo:</p> <ol> <li> Crie a pasta <code>src/views</code> caso ela n\u00e3o exista.</li> </ol> ./src/views/HomeView.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue';\nimport FeaturedComponent from '@/components/FeaturedComponent.vue';\nimport HeroBanner from '@/components/HeroBanner.vue';\nimport CartComponent from '@/components/CartComponent.vue';\nimport BooksListing from '@/components/BooksListing.vue';\n\nconst showCart = ref(false);\nconst cart = ref({\n  items: [],\n  total: 0,\n});\nconst books = [\n  {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n  },\n  {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n  },\n  {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n  },\n  {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n  },\n  {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n  },\n  {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n  },\n  {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n  },\n  {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n  },\n];\n\nfunction decrementBookToCart(book) {\n  const existingBook = cart.value.items.find((item) =&gt; item.id === book.id);\n  if (existingBook.quantity === 1) {\n    cart.value.items = cart.value.items.filter((item) =&gt; item.id !== book.id);\n  } else {\n    existingBook.quantity--;\n  }\n  cart.value.total -= book.price;\n}\n\nfunction incrementBookToCart(book) {\n  const existingBook = cart.value.items.find((item) =&gt; item.id === book.id);\n  existingBook.quantity++;\n  cart.value.total += book.price;\n}\n\nfunction addToCart(book) {\n  const existingBook = cart.value.items.find((item) =&gt; item.id === book.id);\n  if (existingBook) {\n    existingBook.quantity++;\n  } else {\n    cart.value.items.push({ ...book, quantity: 1 });\n  }\n  cart.value.total += book.price;\n  alert(`Adicionado ${book.title} ao carrinho!`);\n}\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;CartComponent\n    v-if=\"showCart\"\n    :cart=\"cart\"\n    @hide-cart=\"showCart = false\"\n    @increment-book=\"incrementBookToCart\"\n    @decrement-book=\"decrementBookToCart\"\n  /&gt;\n  &lt;template v-else&gt;\n    &lt;button @click=\"showCart = true\"&gt;Ir para carrinho&lt;/button&gt;&gt;\n    &lt;HeroBanner /&gt;\n    &lt;FeaturedComponent /&gt;\n    &lt;BooksListing :books=\"books\" @add-to-cart=\"addToCart\" /&gt;\n  &lt;/template&gt;\n&lt;/template&gt;\n</code></pre> <p>Note que praticamente copiamos o c\u00f3digo do componente <code>App.vue</code> que j\u00e1 hav\u00edamos criado anteriormente. A diferen\u00e7a \u00e9 que agora estamos usando o Vue Router para gerenciar as rotas da nossa aplica\u00e7\u00e3o. O componente <code>HomeView.vue</code> ser\u00e1 a p\u00e1gina principal da nossa aplica\u00e7\u00e3o e ser\u00e1 exibido quando o usu\u00e1rio acessar a rota <code>/</code>. Tamb\u00e9m n\u00e3o precisamos importar o componente <code>HeaderComponent</code> e <code>FooterComponent</code>, pois eles ser\u00e3o parte do layout da nossa aplica\u00e7\u00e3o e ficar\u00e3o fora do componente <code>HomeView.vue</code>.</p> <p>Ainda, criamos um bot\u00e3o que, quando clicado, exibe o carrinho de compras. O carrinho de compras \u00e9 um componente separado que ser\u00e1 exibido quando o usu\u00e1rio clicar no bot\u00e3o \"Ir para carrinho\". Note que tivemos que fazer isso pois a funcionalidade de abrir o carrinho a partir do <code>HeaderComponent</code> n\u00e3o estar\u00e1 dispon\u00edvel, j\u00e1 que n\u00e3o estamos mais usando o <code>App.vue</code> como componente raiz. Isso ser\u00e1 resolvido mais adiante, em outros conceitos que vamos adquirir.</p>"},{"location":"router/#criando-uma-pagina-para-a-equipe","title":"Criando uma p\u00e1gina para a equipe","text":"<p>Vamos tamb\u00e9m criar um componente que ter\u00e1 as informa\u00e7\u00f5es da equipe de desenvolvimento. Crie um arquivo chamado <code>TeamView.vue</code> na pasta <code>src/views</code> do seu projeto e adicione o seguinte c\u00f3digo:</p> ./src/views/TeamView.vue<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;Equipe de Desenvolvimento&lt;/h1&gt;\n    &lt;ul&gt;\n      &lt;li&gt;Desenvolvedor 1&lt;/li&gt;\n      &lt;li&gt;Desenvolvedor 2&lt;/li&gt;\n      &lt;li&gt;Desenvolvedor 3&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"router/#configurando-as-rotas","title":"Configurando as rotas","text":"<p>Agora que temos os componentes <code>HomeView.vue</code> e <code>TeamView.vue</code>, podemos configurar as rotas da nossa aplica\u00e7\u00e3o. Abra o arquivo <code>src/router/index.js</code> e adicione as seguintes rotas:</p> ./src/router/index.js<pre><code>import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '@/views/HomeView.vue';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: HomeView,\n  },\n  {\n    path: '/equipe',\n    name: 'Team',\n    component: () =&gt; import('@/views/TeamView.vue'),\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nexport default router;\n</code></pre> <p>Note que usamos duas formas de importar os componentes. Para a rota da p\u00e1gina inicial, importamos o componente <code>HomeView</code> diretamente. J\u00e1 para a rota da equipe, usamos uma importa\u00e7\u00e3o ass\u00edncrona. Voc\u00ea pode usar essa abordagem para carregar componentes sob demanda, o que pode melhorar o desempenho da sua aplica\u00e7\u00e3o, especialmente se voc\u00ea tiver muitos componentes ou p\u00e1ginas.</p>"},{"location":"router/#os-comandos-routerlink-e-routerview","title":"Os comandos RouterLink e RouterView","text":"<p>Agora que temos as rotas configuradas, precisamos usar os componentes <code>&lt;RouterLink /&gt;</code> e <code>&lt;RouterView /&gt;</code> do Vue Router para navegar entre as p\u00e1ginas da nossa aplica\u00e7\u00e3o.</p> <p>O comando RouterView \u00e9 usado para renderizar o componente correspondente \u00e0 rota atual. Ele deve ser usado no componente raiz da sua aplica\u00e7\u00e3o, geralmente no arquivo <code>App.vue</code>. O Vue Router ir\u00e1 renderizar o componente correspondente \u00e0 rota atual dentro do <code>&lt;RouterView /&gt;</code>.</p> <p>O comando RouterLink \u00e9 usado para criar links que, quando clicados, navegam para a rota especificada. Ele deve ser usado dentro do componente <code>&lt;template /&gt;</code> para criar links de navega\u00e7\u00e3o entre as p\u00e1ginas da sua aplica\u00e7\u00e3o. O Vue Router ir\u00e1 interceptar os cliques nos links criados com <code>&lt;RouterLink /&gt;</code> e navegar para a rota especificada, sem recarregar a p\u00e1gina.</p> <p>Vamos ajustar o nosso projeto para usar esses componentes.</p>"},{"location":"router/#ajustando-o-arquivo-appvue","title":"Ajustando o arquivo <code>App.vue</code>","text":"<p>Agora, precisamos ajustar o arquivo <code>App.vue</code> para usar o Vue Router e exibir as rotas corretamente. Abra o arquivo <code>src/App.vue</code> e substitua o conte\u00fado pelo seguinte:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport HeaderComponent from './components/HeaderComponent.vue';\nimport FooterComponent from '@/components/FooterComponent.vue';\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;HeaderComponent @click-cart=\"showCart = !showCart\" /&gt;\n  &lt;main&gt;\n    &lt;RouterView /&gt;\n  &lt;/main&gt;\n  &lt;footer-component /&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;&lt;/style&gt;\n</code></pre> <p>Nesse c\u00f3digo, estamos importando o componente <code>HeaderComponent</code> e <code>FooterComponent</code>, e usando o componente <code>&lt;RouterView /&gt;</code> para renderizar as rotas definidas no Vue Router. O <code>&lt;RouterView /&gt;</code> \u00e9 um componente especial do Vue Router que renderiza o componente correspondente \u00e0 rota atual.</p> <p>Dessa forma, no local onde est\u00e1 definido o componente <code>&lt;RouterView&gt;</code>, o Vue Router ir\u00e1 renderizar o componente correspondente \u00e0 rota atual. Por exemplo, se o usu\u00e1rio acessar a rota <code>/</code>, o componente <code>HomeView</code> ser\u00e1 exibido. Se o usu\u00e1rio acessar a rota <code>/equipe</code>, o componente <code>TeamView</code> ser\u00e1 exibido.</p>"},{"location":"router/#criando-um-link-para-a-pagina-da-equipe-e-home","title":"Criando um link para a p\u00e1gina da equipe e Home","text":"<p>Para navegar entre as p\u00e1ginas da nossa aplica\u00e7\u00e3o, podemos usar o componente <code>&lt;RouterLink /&gt;</code> do Vue Router. Esse componente permite criar links que, quando clicados, navegam para a rota especificada.</p> <p>Abra o arquivo <code>src/components/HeaderComponent.vue</code> e altere o bloco de <code>template</code> para o seguinte c\u00f3digo:</p> ./src/components/HeaderComponent.vue<pre><code>&lt;template&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;h1&gt;\n        &lt;RouterLink to=\"/\"&gt;\n          IFbooks\n          &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n        &lt;/RouterLink&gt;\n      &lt;/h1&gt;\n      &lt;div class=\"search-wrapper\"&gt;\n        &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n      &lt;/div&gt;\n      &lt;ul&gt;\n        &lt;li&gt;Termos&lt;/li&gt;\n        &lt;li&gt;&lt;RouterLink to=\"/equipe\"&gt;Equipe&lt;/RouterLink&gt;&lt;/li&gt;\n        &lt;li&gt;Envio&lt;/li&gt;\n        &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;ul class=\"icons\"&gt;\n        &lt;li @click=\"$emit('click-cart')\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n&lt;/template&gt;\n</code></pre> <p>Note as altera\u00e7\u00f5es que fizemos nas linhas destacadas (linhas 9 a 12 e linha 19). A vers\u00e3o completa do arquivo <code>HeaderComponent.vue</code> est\u00e1 no bloco abaixo.</p>  Vers\u00e3o completa ./src/components/HeaderComponent.vue<pre><code>&lt;script setup&gt;\n    defineEmits(['click-cart'])\n&lt;/script&gt;\n\n&lt;template&gt;\n    &lt;header&gt;\n        &lt;nav&gt;\n            &lt;h1&gt;\n                &lt;RouterLink to=\"/\"&gt;\n                    IFbooks\n                    &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n                &lt;/RouterLink&gt;\n            &lt;/h1&gt;\n            &lt;div class=\"search-wrapper\"&gt;\n            &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n            &lt;/div&gt;\n            &lt;ul&gt;\n                &lt;li&gt;Termos&lt;/li&gt;\n                &lt;li&gt;&lt;RouterLink to=\"/equipe\"&gt;Equipe&lt;/RouterLink&gt;&lt;/li&gt;\n                &lt;li&gt;Envio&lt;/li&gt;\n                &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;ul class=\"icons\"&gt;\n                &lt;li @click=\"$emit('click-cart')\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/nav&gt;\n    &lt;/header&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n    header nav {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 2vh 8vw;\n        border-bottom: 2px solid #27ae6099;\n\n        &amp; a {\n            text-decoration: none;\n            color: rgb(44, 62, 80);\n        }\n\n        &amp; h1 {\n            font-size: 1.3rem;\n            color: #000;\n\n            &amp; a {\n            text-decoration: none;\n            color: #000;\n            display: flex;\n            align-items: center;\n            }\n\n            &amp; .logo-title {\n            border-left: 1px solid #27ae6099;\n            font-size: 0.8rem;\n            margin-left: 10px;\n            padding-left: 10px;\n            color: #27ae6099;\n            width: 100px;\n            line-height: 1rem;\n            }\n        }\n\n        &amp; input {\n            width: 400px;\n            height: 40px;\n            border-radius: 5px;\n            font-size: 1rem;\n            border: 0;\n            background-color: #f1f1f1;\n            padding: 5px;\n        }\n\n        &amp; ul {\n            display: flex;\n        }\n\n        &amp; ul li {\n            list-style: none;\n            margin: 0 10px;\n            font-size: 1rem;\n        }\n\n        &amp; .icons li {\n            color: #27ae60;\n            font-size: 1.3rem;\n        }\n\n        &amp; .search-wrapper {\n            position: relative;\n        }\n\n        &amp; .search-wrapper::before {\n            content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n            font-family: 'Material Design Icons';\n            font-size: 1.2rem;\n            position: absolute;\n            right: 0.75rem;\n            top: 50%;\n            transform: translateY(-50%);\n            pointer-events: none;\n        }\n\n        &amp; .search {\n            padding-right: 2rem;\n        }\n }\n&lt;/style&gt;\n</code></pre> <p>Agora a nossa aplica\u00e7\u00e3o est\u00e1 pronta para ser testada.</p>"},{"location":"router/#rotas-dinamicas","title":"Rotas din\u00e2micas","text":"<p>Agora, vamos aprender como criar rotas din\u00e2micas no Vue Router. As rotas din\u00e2micas s\u00e3o \u00fateis quando precisamos exibir conte\u00fado baseado em par\u00e2metros que podem variar, como IDs de usu\u00e1rios, nomes de produtos, etc.</p>"},{"location":"router/#definindo-rotas-dinamicas","title":"Definindo rotas din\u00e2micas","text":"<p>Para definir uma rota din\u00e2mica, usamos dois pontos (<code>:</code>) antes do nome do par\u00e2metro na defini\u00e7\u00e3o da rota. Para exemplificar, no exemplo da nossa livraria, vamos fazer uma rota que exibe detalhes de um livro espec\u00edfico. A rota pode ser definida da seguinte forma, inserindo mais uma rota na vari\u00e1vel <code>routes</code>, no arquivo <code>src/router/index.js</code>:</p> <p>Cuidado</p> <p>Note que nos exemplos, em geral, estamos sempre alterando alguma vari\u00e1vel j\u00e1 existente. Cuide para n\u00e3o sobrescrever vari\u00e1veis importantes e nem redefinir vari\u00e1veis que j\u00e1 existem nos exemplos anteriores.</p> src/router/index.js<pre><code>  {\n    path: '/livro/:id',\n    name: 'Book',\n    component: () =&gt; import('@/views/BookView.vue'),\n    props: true,\n  },\n];\n</code></pre> <p>Nossa vers\u00e3o completa do arquivo <code>src/router/index.js</code> ficaria assim:</p>  Vers\u00e3o completa src/router/index.js<pre><code>import { createRouter, createWebHistory } from 'vue-router'\n\nimport HomeView from '@/views/HomeView.vue'\n\nconst routes = [\n    {\n        path: '/',\n        name: 'Home',\n        component: HomeView,\n    },\n    {\n        path: '/equipe',\n        name: 'Team',\n        component: () =&gt; import('@/views/TeamView.vue'),\n    },\n    {\n        path: '/livro/:id',\n        name: 'Book',\n        component: () =&gt; import('@/views/BookView.vue'),\n        props: true,\n    },\n]\n\nconst router = createRouter({\nhistory: createWebHistory(import.meta.env.BASE_URL),\nroutes,\n})\n\nexport default router\n</code></pre> <p>Note que a rota <code>/livro/:id</code> define um par\u00e2metro din\u00e2mico chamado <code>id</code>. Isso significa que quando o usu\u00e1rio acessar uma URL como <code>/livro/123</code>, o Vue Router ir\u00e1 capturar o valor <code>123</code> e pass\u00e1-lo para o componente associado \u00e0 rota. Tamb\u00e9m, definimos a propriedade <code>props: true</code>, que permite que o par\u00e2metro seja passado como uma propriedade para o componente. Por fim, o componente associado \u00e0 rota \u00e9 o <code>BookView.vue</code>, que ser\u00e1 respons\u00e1vel por exibir os detalhes do livro.</p>"},{"location":"router/#criando-o-componente-para-a-rota-dinamica","title":"Criando o componente para a rota din\u00e2mica","text":"<p>Agora, precisamos criar o componente <code>BookView.vue</code> que ir\u00e1 exibir os detalhes do livro. Crie um novo arquivo chamado <code>BookView.vue</code> na pasta <code>src/views/</code>. O conte\u00fado do arquivo pode ser algo como:</p> src/views/BookView.vue<pre><code>&lt;script setup&gt;\ndefineProps(['id']);\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;h1&gt;Detalhes do livro: {{ id }}&lt;/h1&gt;\n&lt;/template&gt;\n</code></pre> <p>Note que estamos usando a diretiva <code>defineProps</code> para receber o par\u00e2metro <code>id</code> passado pela rota. No template, exibimos o ID do livro. Este \u00e9 um exemplo simples, mas voc\u00ea pode expandir esse componente para buscar informa\u00e7\u00f5es de um livro espec\u00edfico em uma API ou em um banco de dados, por exemplo.</p> <p>Agora, se voc\u00ea quiser testar a rota din\u00e2mica, voc\u00ea pode acessar a URL <code>/livro/123</code> (ou qualquer outro ID) e ver\u00e1 o componente <code>BookView.vue</code> renderizando o ID do livro.</p> <p>No sequ\u00eancia, vamos integrar isso com a listagem de livros que criamos anteriormente, para que possamos clicar em um livro e ser redirecionado para a p\u00e1gina de detalhes desse livro.</p>"},{"location":"router/#rotas-programaticas","title":"Rotas program\u00e1ticas","text":"<p>At\u00e9 ent\u00e3o, vimos como navegar entre as rotas utilizando o componente <code>&lt;RouterLink /&gt;</code>. No entanto, em alguns casos, pode ser necess\u00e1rio realizar a navega\u00e7\u00e3o de forma program\u00e1tica, ou seja, sem a intera\u00e7\u00e3o direta do usu\u00e1rio. Isso pode ser \u00fatil em situa\u00e7\u00f5es como:</p> <ul> <li>Redirecionamento ap\u00f3s uma a\u00e7\u00e3o do usu\u00e1rio (por exemplo, ap\u00f3s o envio de um formul\u00e1rio).</li> <li>Navega\u00e7\u00e3o com base em uma l\u00f3gica de neg\u00f3cio (por exemplo, ap\u00f3s a autentica\u00e7\u00e3o do usu\u00e1rio).</li> <li>Navega\u00e7\u00e3o com base em eventos externos (por exemplo, ap\u00f3s a conclus\u00e3o de uma requisi\u00e7\u00e3o ass\u00edncrona).</li> </ul> <p>Dessa forma, al\u00e9m de usar os componentes <code>&lt;RouterLink /&gt;</code> e <code>&lt;RouterView /&gt;</code>, tamb\u00e9m podemos navegar entre as rotas programaticamente usando a inst\u00e2ncia do roteador. Para isso, podemos usar o m\u00e9todo <code>router.push()</code> para navegar para uma nova rota.</p> <p>Vamos ver como realizar a navega\u00e7\u00e3o program\u00e1tica entre rotas no Vue Router.</p>"},{"location":"router/#ajustando-o-componente-de-listagem-de-livros","title":"Ajustando o componente de listagem de livros","text":"<p>Para demonstrar a navega\u00e7\u00e3o program\u00e1tica, vamos ajustar o componente de listagem de livros que criamos anteriormente. Vamos adicionar um evento de clique em cada livro que redireciona o usu\u00e1rio para a p\u00e1gina de detalhes do livro selecionado. Vamos modificar o componente <code>BookListing.vue</code> para incluir a navega\u00e7\u00e3o program\u00e1tica.</p> <p>Primeiro, vamos inserir uma fun\u00e7\u00e3o para fazer a rota program\u00e1tica. No arquivo <code>src/components/BookListing.vue</code>, adicione o seguinte c\u00f3digo, no bloco <code>&lt;script setup&gt;</code>:</p> ./src/components/BookListing.vue<pre><code>import { useRouter } from 'vue-router';\nconst router = useRouter();\n\nfunction openBook(id) {\n  router.push({ name: 'Book', params: { id } });\n}\n</code></pre> <p>Agora, no bloco <code>&lt;template&gt;</code>, vamos adicionar um evento de clique no elemento que representa cada livro. No exemplo, farei isso na tag <code>&lt;img&gt;</code>, mas poder\u00edamos fazer em qualquer outro local ou elemento. Modifique o c\u00f3digo para incluir o evento <code>@click</code> que chama a fun\u00e7\u00e3o <code>openBook</code>:</p> src/components/BookListing.vue<pre><code>&lt;img :src=\"book.cover\" :alt=\"book.title\" @click=\"openBook(book.id)\" /&gt;\n</code></pre> <p>Para confirmar, a vers\u00e3o completa do arquivo <code>src/components/BookListing.vue</code> ficar\u00e1 assim:</p>  Vers\u00e3o completa ./src/components/BookListing.vue<pre><code>&lt;script setup&gt;\n    defineEmits(['add-to-cart'])\n    defineProps(['books'])\n    import { useRouter } from 'vue-router'\n    const router = useRouter()\n\n    function openBook(id) {\n        router.push({ name: 'Book', params: { id } })\n    }\n&lt;/script&gt;\n\n&lt;template&gt;\n    &lt;section class=\"books\"&gt;\n        &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n            &lt;img :src=\"book.cover\" :alt=\"book.title\" @click=\"openBook(book.id)\" /&gt;\n            &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n            &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n            &lt;span class=\"price-and-like\"&gt;\n                &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n                &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n            &lt;/span&gt;\n            &lt;button @click=\"$emit('add-to-cart', book)\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n        &lt;/article&gt;\n    &lt;/section&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.books {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    padding: 5vh 8vw;\n\n    &amp; .book {\n        display: flex;\n        flex-direction: column;\n        min-width: 300px;\n        width: calc(100% / 4 - 42px);\n        margin: 20px;\n\n        &amp; h2 {\n            font-size: 1.5rem;\n            font-weight: 700;\n        }\n\n        &amp; .book-author {\n            font-size: 1rem;\n        }\n\n        &amp; .book-price {\n            font-size: 1.2rem;\n            font-weight: 700;\n        }\n\n        &amp; .price-and-like {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 20px;\n\n            &amp; .mdi-heart-outline {\n                font-size: 1.3rem;\n                color: #27ae60;\n            }\n        }\n    }\n}\n&lt;/style&gt;\n</code></pre> <p>Agora, quando o usu\u00e1rio clicar em um livro, ele ser\u00e1 redirecionado para a p\u00e1gina de detalhes do livro correspondente, utilizando a navega\u00e7\u00e3o program\u00e1tica.</p>"},{"location":"router/basic/","title":"Basic","text":""},{"location":"router/basic/#instalacao-e-configuracao-basica","title":"Instala\u00e7\u00e3o e configura\u00e7\u00e3o b\u00e1sica","text":"<p>Note</p> <p>Faremos todos os c\u00f3digo na continua\u00e7\u00e3o do projeto que j\u00e1 estamos desenvolvendo com o carrinho de compras da livraria. Poder\u00edamos ter feito a cria\u00e7\u00e3o do projeto j\u00e1 com o Vue-Router</p> <p>Para instalar o Vue Router em um projeto VueJS, voc\u00ea pode usar o seguinte comando:</p> <pre><code>npm install vue-router@4\n</code></pre> <p>Ap\u00f3s a instala\u00e7\u00e3o, voc\u00ea pode configurar o Vue Router no seu projeto. Para isso, crie um arquivo chamado <code>index.js</code> na pasta <code>src/router</code> (1) do seu projeto e adicione o seguinte c\u00f3digo:</p> <ol> <li> Crie a pasta <code>src/router</code> caso ela n\u00e3o exista.</li> </ol> ./src/router/index.js<pre><code>import { createRouter, createWebHistory } from 'vue-router';\n\nconst routes = [];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nexport default router;\n</code></pre> <p>Nesse c\u00f3digo, estamos importando as fun\u00e7\u00f5es <code>createRouter</code> e <code>createWebHistory</code> do Vue Router. Em seguida, definimos um array <code>routes</code> que ser\u00e1 usado para armazenar as rotas da nossa aplica\u00e7\u00e3o. Por enquanto, deixamos esse array vazio. Depois disso, criamos uma inst\u00e2ncia do roteador usando a fun\u00e7\u00e3o <code>createRouter</code>, passando o hist\u00f3rico de navega\u00e7\u00e3o e as rotas definidas. Por fim, exportamos o roteador para que possamos us\u00e1-lo em outros arquivos.</p> <p>Agora, precisamos importar o roteador no arquivo principal da nossa aplica\u00e7\u00e3o, que \u00e9 o arquivo <code>main.js</code>. Abra esse arquivo e adicione o seguinte c\u00f3digo:</p> ./src/main.js<pre><code>import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\n\ncreateApp(App).use(router).mount('#app');\n</code></pre> <p>Nesse c\u00f3digo, estamos importando o roteador que acabamos de criar e usando o m\u00e9todo <code>use</code> para registr\u00e1-lo na inst\u00e2ncia da aplica\u00e7\u00e3o Vue. Isso permite que o Vue Router gerencie as rotas da nossa aplica\u00e7\u00e3o.</p>"},{"location":"router/basic/#criando-a-pagina-principal","title":"Criando a p\u00e1gina principal","text":"<p>Agora que configuramos o Vue Router, podemos come\u00e7ar a definir as rotas da nossa aplica\u00e7\u00e3o. Inicialmente, vamos criar um componente que ser\u00e1 a p\u00e1gina principal da nossa aplica\u00e7\u00e3o. Crie um arquivo chamado <code>HomeView.vue</code> na pasta <code>src/views</code> (1) do seu projeto e adicione o seguinte c\u00f3digo:</p> <ol> <li> Crie a pasta <code>src/views</code> caso ela n\u00e3o exista.</li> </ol> ./src/views/HomeView.vue<pre><code>&lt;script setup&gt;\nimport { ref } from 'vue';\nimport FeaturedComponent from '@/components/FeaturedComponent.vue';\nimport HeroBanner from '@/components/HeroBanner.vue';\nimport CartComponent from '@/components/CartComponent.vue';\nimport BooksListing from '@/components/BooksListing.vue';\n\nconst showCart = ref(false);\nconst cart = ref({\n  items: [],\n  total: 0,\n});\nconst books = [\n  {\n    id: 1,\n    title: 'Comigo na livraria',\n    cover: '/covers/comigo-na-livraria.png',\n    price: 23.24,\n    author: 'Martha Medeiros',\n  },\n  {\n    id: 2,\n    title: 'Quincas Borba',\n    cover: '/covers/quincas-borba.png',\n    price: 23.24,\n    author: 'Machado de Assis',\n  },\n  {\n    id: 3,\n    title: 'A livraria',\n    cover: '/covers/a-livraria.png',\n    price: 13.94,\n    author: 'Penelope Fitzgerald',\n  },\n  {\n    id: 4,\n    title: 'A hora da estrela',\n    cover: '/covers/a-hora-da-estrela.png',\n    price: 16.84,\n    author: 'Clarice Lispector',\n  },\n  {\n    id: 5,\n    title: 'O alienista',\n    cover: '/covers/o-alienista.png',\n    price: 266.92,\n    author: 'Machado de Assis',\n  },\n  {\n    id: 6,\n    title: 'Mar morto',\n    cover: '/covers/mar-morto.png',\n    price: 13.95,\n    author: 'Jorge Amado',\n  },\n  {\n    id: 7,\n    title: 'Grande sert\u00e3o',\n    cover: '/covers/grande-sertao-veredas.png',\n    price: 26.04,\n    author: 'Guimar\u00e3es Rosa',\n  },\n  {\n    id: 8,\n    title: 'Flor de poemas',\n    cover: '/covers/flor-de-poema.png',\n    price: 15.81,\n    author: 'Cec\u00edlia Meireles',\n  },\n];\n\nfunction decrementBookToCart(book) {\n  const existingBook = cart.value.items.find((item) =&gt; item.id === book.id);\n  if (existingBook.quantity === 1) {\n    cart.value.items = cart.value.items.filter((item) =&gt; item.id !== book.id);\n  } else {\n    existingBook.quantity--;\n  }\n  cart.value.total -= book.price;\n}\n\nfunction incrementBookToCart(book) {\n  const existingBook = cart.value.items.find((item) =&gt; item.id === book.id);\n  existingBook.quantity++;\n  cart.value.total += book.price;\n}\n\nfunction addToCart(book) {\n  const existingBook = cart.value.items.find((item) =&gt; item.id === book.id);\n  if (existingBook) {\n    existingBook.quantity++;\n  } else {\n    cart.value.items.push({ ...book, quantity: 1 });\n  }\n  cart.value.total += book.price;\n  alert(`Adicionado ${book.title} ao carrinho!`);\n}\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;CartComponent\n    v-if=\"showCart\"\n    :cart=\"cart\"\n    @hide-cart=\"showCart = false\"\n    @increment-book=\"incrementBookToCart\"\n    @decrement-book=\"decrementBookToCart\"\n  /&gt;\n  &lt;template v-else&gt;\n    &lt;button @click=\"showCart = true\"&gt;Ir para carrinho&lt;/button&gt;&gt;\n    &lt;HeroBanner /&gt;\n    &lt;FeaturedComponent /&gt;\n    &lt;BooksListing :books=\"books\" @add-to-cart=\"addToCart\" /&gt;\n  &lt;/template&gt;\n&lt;/template&gt;\n</code></pre> <p>Note que praticamente copiamos o c\u00f3digo do componente <code>App.vue</code> que j\u00e1 hav\u00edamos criado anteriormente. A diferen\u00e7a \u00e9 que agora estamos usando o Vue Router para gerenciar as rotas da nossa aplica\u00e7\u00e3o. O componente <code>HomeView.vue</code> ser\u00e1 a p\u00e1gina principal da nossa aplica\u00e7\u00e3o e ser\u00e1 exibido quando o usu\u00e1rio acessar a rota <code>/</code>. Tamb\u00e9m n\u00e3o precisamos importar o componente <code>HeaderComponent</code> e <code>FooterComponent</code>, pois eles ser\u00e3o parte do layout da nossa aplica\u00e7\u00e3o e ficar\u00e3o fora do componente <code>HomeView.vue</code>.</p> <p>Ainda, criamos um bot\u00e3o que, quando clicado, exibe o carrinho de compras. O carrinho de compras \u00e9 um componente separado que ser\u00e1 exibido quando o usu\u00e1rio clicar no bot\u00e3o \"Ir para carrinho\". Note que tivemos que fazer isso pois a funcionalidade de abrir o carrinho a partir do <code>HeaderComponent</code> n\u00e3o estar\u00e1 dispon\u00edvel, j\u00e1 que n\u00e3o estamos mais usando o <code>App.vue</code> como componente raiz. Isso ser\u00e1 resolvido mais adiante, em outros conceitos que vamos adquirir.</p>"},{"location":"router/basic/#criando-uma-pagina-para-a-equipe","title":"Criando uma p\u00e1gina para a equipe","text":"<p>Vamos tamb\u00e9m criar um componente que ter\u00e1 as informa\u00e7\u00f5es da equipe de desenvolvimento. Crie um arquivo chamado <code>TeamView.vue</code> na pasta <code>src/views</code> do seu projeto e adicione o seguinte c\u00f3digo:</p> ./src/views/TeamView.vue<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;Equipe de Desenvolvimento&lt;/h1&gt;\n    &lt;ul&gt;\n      &lt;li&gt;Desenvolvedor 1&lt;/li&gt;\n      &lt;li&gt;Desenvolvedor 2&lt;/li&gt;\n      &lt;li&gt;Desenvolvedor 3&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"router/basic/#configurando-as-rotas","title":"Configurando as rotas","text":"<p>Agora que temos os componentes <code>HomeView.vue</code> e <code>TeamView.vue</code>, podemos configurar as rotas da nossa aplica\u00e7\u00e3o. Abra o arquivo <code>src/router/index.js</code> e adicione as seguintes rotas:</p> ./src/router/index.js<pre><code>import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '@/views/HomeView.vue';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: HomeView,\n  },\n  {\n    path: '/equipe',\n    name: 'Team',\n    component: () =&gt; import('@/views/TeamView.vue'),\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nexport default router;\n</code></pre> <p>Note que usamos duas formas de importar os componentes. Para a rota da p\u00e1gina inicial, importamos o componente <code>HomeView</code> diretamente. J\u00e1 para a rota da equipe, usamos uma importa\u00e7\u00e3o ass\u00edncrona. Voc\u00ea pode usar essa abordagem para carregar componentes sob demanda, o que pode melhorar o desempenho da sua aplica\u00e7\u00e3o, especialmente se voc\u00ea tiver muitos componentes ou p\u00e1ginas.</p>"},{"location":"router/basic/#os-comandos-routerlink-e-routerview","title":"Os comandos RouterLink e RouterView","text":"<p>Agora que temos as rotas configuradas, precisamos usar os componentes <code>&lt;RouterLink /&gt;</code> e <code>&lt;RouterView /&gt;</code> do Vue Router para navegar entre as p\u00e1ginas da nossa aplica\u00e7\u00e3o.</p> <p>O comando RouterView \u00e9 usado para renderizar o componente correspondente \u00e0 rota atual. Ele deve ser usado no componente raiz da sua aplica\u00e7\u00e3o, geralmente no arquivo <code>App.vue</code>. O Vue Router ir\u00e1 renderizar o componente correspondente \u00e0 rota atual dentro do <code>&lt;RouterView /&gt;</code>.</p> <p>O comando RouterLink \u00e9 usado para criar links que, quando clicados, navegam para a rota especificada. Ele deve ser usado dentro do componente <code>&lt;template /&gt;</code> para criar links de navega\u00e7\u00e3o entre as p\u00e1ginas da sua aplica\u00e7\u00e3o. O Vue Router ir\u00e1 interceptar os cliques nos links criados com <code>&lt;RouterLink /&gt;</code> e navegar para a rota especificada, sem recarregar a p\u00e1gina.</p> <p>Vamos ajustar o nosso projeto para usar esses componentes.</p>"},{"location":"router/basic/#ajustando-o-arquivo-appvue","title":"Ajustando o arquivo <code>App.vue</code>","text":"<p>Agora, precisamos ajustar o arquivo <code>App.vue</code> para usar o Vue Router e exibir as rotas corretamente. Abra o arquivo <code>src/App.vue</code> e substitua o conte\u00fado pelo seguinte:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nimport HeaderComponent from './components/HeaderComponent.vue';\nimport FooterComponent from '@/components/FooterComponent.vue';\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;HeaderComponent @click-cart=\"showCart = !showCart\" /&gt;\n  &lt;main&gt;\n    &lt;RouterView /&gt;\n  &lt;/main&gt;\n  &lt;footer-component /&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;&lt;/style&gt;\n</code></pre> <p>Nesse c\u00f3digo, estamos importando o componente <code>HeaderComponent</code> e <code>FooterComponent</code>, e usando o componente <code>&lt;RouterView /&gt;</code> para renderizar as rotas definidas no Vue Router. O <code>&lt;RouterView /&gt;</code> \u00e9 um componente especial do Vue Router que renderiza o componente correspondente \u00e0 rota atual.</p> <p>Dessa forma, no local onde est\u00e1 definido o componente <code>&lt;RouterView&gt;</code>, o Vue Router ir\u00e1 renderizar o componente correspondente \u00e0 rota atual. Por exemplo, se o usu\u00e1rio acessar a rota <code>/</code>, o componente <code>HomeView</code> ser\u00e1 exibido. Se o usu\u00e1rio acessar a rota <code>/equipe</code>, o componente <code>TeamView</code> ser\u00e1 exibido.</p>"},{"location":"router/basic/#criando-um-link-para-a-pagina-da-equipe-e-home","title":"Criando um link para a p\u00e1gina da equipe e Home","text":"<p>Para navegar entre as p\u00e1ginas da nossa aplica\u00e7\u00e3o, podemos usar o componente <code>&lt;RouterLink /&gt;</code> do Vue Router. Esse componente permite criar links que, quando clicados, navegam para a rota especificada.</p> <p>Abra o arquivo <code>src/components/HeaderComponent.vue</code> e altere o bloco de <code>template</code> para o seguinte c\u00f3digo:</p> ./src/components/HeaderComponent.vue<pre><code>&lt;template&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;h1&gt;\n        &lt;RouterLink to=\"/\"&gt;\n          IFbooks\n          &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n        &lt;/RouterLink&gt;\n      &lt;/h1&gt;\n      &lt;div class=\"search-wrapper\"&gt;\n        &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n      &lt;/div&gt;\n      &lt;ul&gt;\n        &lt;li&gt;Termos&lt;/li&gt;\n        &lt;li&gt;&lt;RouterLink to=\"/equipe\"&gt;Equipe&lt;/RouterLink&gt;&lt;/li&gt;\n        &lt;li&gt;Envio&lt;/li&gt;\n        &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;ul class=\"icons\"&gt;\n        &lt;li @click=\"$emit('click-cart')\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n&lt;/template&gt;\n</code></pre> <p>Note as altera\u00e7\u00f5es que fizemos nas linhas destacadas (linhas 9 a 12 e linha 19). A vers\u00e3o completa do arquivo <code>HeaderComponent.vue</code> est\u00e1 no bloco abaixo.</p>  Vers\u00e3o completa ./src/components/HeaderComponent.vue<pre><code>&lt;script setup&gt;\n    defineEmits(['click-cart'])\n&lt;/script&gt;\n\n&lt;template&gt;\n    &lt;header&gt;\n        &lt;nav&gt;\n            &lt;h1&gt;\n                &lt;RouterLink to=\"/\"&gt;\n                    IFbooks\n                    &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n                &lt;/RouterLink&gt;\n            &lt;/h1&gt;\n            &lt;div class=\"search-wrapper\"&gt;\n            &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n            &lt;/div&gt;\n            &lt;ul&gt;\n                &lt;li&gt;Termos&lt;/li&gt;\n                &lt;li&gt;&lt;RouterLink to=\"/equipe\"&gt;Equipe&lt;/RouterLink&gt;&lt;/li&gt;\n                &lt;li&gt;Envio&lt;/li&gt;\n                &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;ul class=\"icons\"&gt;\n                &lt;li @click=\"$emit('click-cart')\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/nav&gt;\n    &lt;/header&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n    header nav {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 2vh 8vw;\n        border-bottom: 2px solid #27ae6099;\n\n        &amp; a {\n            text-decoration: none;\n            color: rgb(44, 62, 80);\n        }\n\n        &amp; h1 {\n            font-size: 1.3rem;\n            color: #000;\n\n            &amp; a {\n            text-decoration: none;\n            color: #000;\n            display: flex;\n            align-items: center;\n            }\n\n            &amp; .logo-title {\n            border-left: 1px solid #27ae6099;\n            font-size: 0.8rem;\n            margin-left: 10px;\n            padding-left: 10px;\n            color: #27ae6099;\n            width: 100px;\n            line-height: 1rem;\n            }\n        }\n\n        &amp; input {\n            width: 400px;\n            height: 40px;\n            border-radius: 5px;\n            font-size: 1rem;\n            border: 0;\n            background-color: #f1f1f1;\n            padding: 5px;\n        }\n\n        &amp; ul {\n            display: flex;\n        }\n\n        &amp; ul li {\n            list-style: none;\n            margin: 0 10px;\n            font-size: 1rem;\n        }\n\n        &amp; .icons li {\n            color: #27ae60;\n            font-size: 1.3rem;\n        }\n\n        &amp; .search-wrapper {\n            position: relative;\n        }\n\n        &amp; .search-wrapper::before {\n            content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n            font-family: 'Material Design Icons';\n            font-size: 1.2rem;\n            position: absolute;\n            right: 0.75rem;\n            top: 50%;\n            transform: translateY(-50%);\n            pointer-events: none;\n        }\n\n        &amp; .search {\n            padding-right: 2rem;\n        }\n }\n&lt;/style&gt;\n</code></pre> <p>Agora a nossa aplica\u00e7\u00e3o est\u00e1 pronta para ser testada.</p>"},{"location":"router/dynamic/","title":"Dynamic","text":""},{"location":"router/dynamic/#rotas-dinamicas","title":"Rotas din\u00e2micas","text":"<p>Agora, vamos aprender como criar rotas din\u00e2micas no Vue Router. As rotas din\u00e2micas s\u00e3o \u00fateis quando precisamos exibir conte\u00fado baseado em par\u00e2metros que podem variar, como IDs de usu\u00e1rios, nomes de produtos, etc.</p>"},{"location":"router/dynamic/#definindo-rotas-dinamicas","title":"Definindo rotas din\u00e2micas","text":"<p>Para definir uma rota din\u00e2mica, usamos dois pontos (<code>:</code>) antes do nome do par\u00e2metro na defini\u00e7\u00e3o da rota. Para exemplificar, no exemplo da nossa livraria, vamos fazer uma rota que exibe detalhes de um livro espec\u00edfico. A rota pode ser definida da seguinte forma, inserindo mais uma rota na vari\u00e1vel <code>routes</code>, no arquivo <code>src/router/index.js</code>:</p> <p>Cuidado</p> <p>Note que nos exemplos, em geral, estamos sempre alterando alguma vari\u00e1vel j\u00e1 existente. Cuide para n\u00e3o sobrescrever vari\u00e1veis importantes e nem redefinir vari\u00e1veis que j\u00e1 existem nos exemplos anteriores.</p> src/router/index.js<pre><code>  {\n    path: '/livro/:id',\n    name: 'Book',\n    component: () =&gt; import('@/views/BookView.vue'),\n    props: true,\n  },\n];\n</code></pre> <p>Nossa vers\u00e3o completa do arquivo <code>src/router/index.js</code> ficaria assim:</p>  Vers\u00e3o completa src/router/index.js<pre><code>import { createRouter, createWebHistory } from 'vue-router'\n\nimport HomeView from '@/views/HomeView.vue'\n\nconst routes = [\n    {\n        path: '/',\n        name: 'Home',\n        component: HomeView,\n    },\n    {\n        path: '/equipe',\n        name: 'Team',\n        component: () =&gt; import('@/views/TeamView.vue'),\n    },\n    {\n        path: '/livro/:id',\n        name: 'Book',\n        component: () =&gt; import('@/views/BookView.vue'),\n        props: true,\n    },\n]\n\nconst router = createRouter({\nhistory: createWebHistory(import.meta.env.BASE_URL),\nroutes,\n})\n\nexport default router\n</code></pre> <p>Note que a rota <code>/livro/:id</code> define um par\u00e2metro din\u00e2mico chamado <code>id</code>. Isso significa que quando o usu\u00e1rio acessar uma URL como <code>/livro/123</code>, o Vue Router ir\u00e1 capturar o valor <code>123</code> e pass\u00e1-lo para o componente associado \u00e0 rota. Tamb\u00e9m, definimos a propriedade <code>props: true</code>, que permite que o par\u00e2metro seja passado como uma propriedade para o componente. Por fim, o componente associado \u00e0 rota \u00e9 o <code>BookView.vue</code>, que ser\u00e1 respons\u00e1vel por exibir os detalhes do livro.</p>"},{"location":"router/dynamic/#criando-o-componente-para-a-rota-dinamica","title":"Criando o componente para a rota din\u00e2mica","text":"<p>Agora, precisamos criar o componente <code>BookView.vue</code> que ir\u00e1 exibir os detalhes do livro. Crie um novo arquivo chamado <code>BookView.vue</code> na pasta <code>src/views/</code>. O conte\u00fado do arquivo pode ser algo como:</p> src/views/BookView.vue<pre><code>&lt;script setup&gt;\ndefineProps(['id']);\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;h1&gt;Detalhes do livro: {{ id }}&lt;/h1&gt;\n&lt;/template&gt;\n</code></pre> <p>Note que estamos usando a diretiva <code>defineProps</code> para receber o par\u00e2metro <code>id</code> passado pela rota. No template, exibimos o ID do livro. Este \u00e9 um exemplo simples, mas voc\u00ea pode expandir esse componente para buscar informa\u00e7\u00f5es de um livro espec\u00edfico em uma API ou em um banco de dados, por exemplo.</p> <p>Agora, se voc\u00ea quiser testar a rota din\u00e2mica, voc\u00ea pode acessar a URL <code>/livro/123</code> (ou qualquer outro ID) e ver\u00e1 o componente <code>BookView.vue</code> renderizando o ID do livro.</p> <p>No sequ\u00eancia, vamos integrar isso com a listagem de livros que criamos anteriormente, para que possamos clicar em um livro e ser redirecionado para a p\u00e1gina de detalhes desse livro.</p>"},{"location":"router/programmatic/","title":"Programmatic","text":""},{"location":"router/programmatic/#rotas-programaticas","title":"Rotas program\u00e1ticas","text":"<p>At\u00e9 ent\u00e3o, vimos como navegar entre as rotas utilizando o componente <code>&lt;RouterLink /&gt;</code>. No entanto, em alguns casos, pode ser necess\u00e1rio realizar a navega\u00e7\u00e3o de forma program\u00e1tica, ou seja, sem a intera\u00e7\u00e3o direta do usu\u00e1rio. Isso pode ser \u00fatil em situa\u00e7\u00f5es como:</p> <ul> <li>Redirecionamento ap\u00f3s uma a\u00e7\u00e3o do usu\u00e1rio (por exemplo, ap\u00f3s o envio de um formul\u00e1rio).</li> <li>Navega\u00e7\u00e3o com base em uma l\u00f3gica de neg\u00f3cio (por exemplo, ap\u00f3s a autentica\u00e7\u00e3o do usu\u00e1rio).</li> <li>Navega\u00e7\u00e3o com base em eventos externos (por exemplo, ap\u00f3s a conclus\u00e3o de uma requisi\u00e7\u00e3o ass\u00edncrona).</li> </ul> <p>Dessa forma, al\u00e9m de usar os componentes <code>&lt;RouterLink /&gt;</code> e <code>&lt;RouterView /&gt;</code>, tamb\u00e9m podemos navegar entre as rotas programaticamente usando a inst\u00e2ncia do roteador. Para isso, podemos usar o m\u00e9todo <code>router.push()</code> para navegar para uma nova rota.</p> <p>Vamos ver como realizar a navega\u00e7\u00e3o program\u00e1tica entre rotas no Vue Router.</p>"},{"location":"router/programmatic/#ajustando-o-componente-de-listagem-de-livros","title":"Ajustando o componente de listagem de livros","text":"<p>Para demonstrar a navega\u00e7\u00e3o program\u00e1tica, vamos ajustar o componente de listagem de livros que criamos anteriormente. Vamos adicionar um evento de clique em cada livro que redireciona o usu\u00e1rio para a p\u00e1gina de detalhes do livro selecionado. Vamos modificar o componente <code>BookListing.vue</code> para incluir a navega\u00e7\u00e3o program\u00e1tica.</p> <p>Primeiro, vamos inserir uma fun\u00e7\u00e3o para fazer a rota program\u00e1tica. No arquivo <code>src/components/BookListing.vue</code>, adicione o seguinte c\u00f3digo, no bloco <code>&lt;script setup&gt;</code>:</p> ./src/components/BookListing.vue<pre><code>import { useRouter } from 'vue-router';\nconst router = useRouter();\n\nfunction openBook(id) {\n  router.push({ name: 'Book', params: { id } });\n}\n</code></pre> <p>Agora, no bloco <code>&lt;template&gt;</code>, vamos adicionar um evento de clique no elemento que representa cada livro. No exemplo, farei isso na tag <code>&lt;img&gt;</code>, mas poder\u00edamos fazer em qualquer outro local ou elemento. Modifique o c\u00f3digo para incluir o evento <code>@click</code> que chama a fun\u00e7\u00e3o <code>openBook</code>:</p> src/components/BookListing.vue<pre><code>&lt;img :src=\"book.cover\" :alt=\"book.title\" @click=\"openBook(book.id)\" /&gt;\n</code></pre> <p>Para confirmar, a vers\u00e3o completa do arquivo <code>src/components/BookListing.vue</code> ficar\u00e1 assim:</p>  Vers\u00e3o completa ./src/components/BookListing.vue<pre><code>&lt;script setup&gt;\n    defineEmits(['add-to-cart'])\n    defineProps(['books'])\n    import { useRouter } from 'vue-router'\n    const router = useRouter()\n\n    function openBook(id) {\n        router.push({ name: 'Book', params: { id } })\n    }\n&lt;/script&gt;\n\n&lt;template&gt;\n    &lt;section class=\"books\"&gt;\n        &lt;article class=\"book\" v-for=\"book in books\" :key=\"book.id\"&gt;\n            &lt;img :src=\"book.cover\" :alt=\"book.title\" @click=\"openBook(book.id)\" /&gt;\n            &lt;h2&gt;{{ book.title }}&lt;/h2&gt;\n            &lt;p class=\"book-author\"&gt;{{ book.author }}&lt;/p&gt;\n            &lt;span class=\"price-and-like\"&gt;\n                &lt;p class=\"book-price\"&gt;R$ {{ book.price.toFixed(2) }}&lt;/p&gt;\n                &lt;span class=\"mdi mdi-heart-outline\"&gt;&lt;/span&gt;\n            &lt;/span&gt;\n            &lt;button @click=\"$emit('add-to-cart', book)\"&gt;&lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;Comprar&lt;/button&gt;\n        &lt;/article&gt;\n    &lt;/section&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.books {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    padding: 5vh 8vw;\n\n    &amp; .book {\n        display: flex;\n        flex-direction: column;\n        min-width: 300px;\n        width: calc(100% / 4 - 42px);\n        margin: 20px;\n\n        &amp; h2 {\n            font-size: 1.5rem;\n            font-weight: 700;\n        }\n\n        &amp; .book-author {\n            font-size: 1rem;\n        }\n\n        &amp; .book-price {\n            font-size: 1.2rem;\n            font-weight: 700;\n        }\n\n        &amp; .price-and-like {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 20px;\n\n            &amp; .mdi-heart-outline {\n                font-size: 1.3rem;\n                color: #27ae60;\n            }\n        }\n    }\n}\n&lt;/style&gt;\n</code></pre> <p>Agora, quando o usu\u00e1rio clicar em um livro, ele ser\u00e1 redirecionado para a p\u00e1gina de detalhes do livro correspondente, utilizando a navega\u00e7\u00e3o program\u00e1tica.</p>"},{"location":"sintaxe-templates/","title":"Sintaxe de templates","text":"<p>O VueJs permite a cria\u00e7\u00e3o de templates HTML que s\u00e3o renderizados dinamicamente com base nos dados da aplica\u00e7\u00e3o. Essa renderiza\u00e7\u00e3o \u00e9 feita de forma declarativa, ou seja, o desenvolvedor declara o que deve ser renderizado, e n\u00e3o como deve ser renderizado. Isso permite que o VueJs fa\u00e7a o trabalho de atualizar a interface do usu\u00e1rio de forma eficiente. Todas as templates s\u00e3o sintaticamente v\u00e1lidas no HTML, e podem ser usadas em qualquer lugar que aceite HTML.</p> <p>Em linhas gerais, todas as templates do VueJs s\u00e3o compiladas para fun\u00e7\u00f5es JavaScript puras, o que as torna muito r\u00e1pidas. A seguir, veremos alguns exemplos de templates e o seu uso.</p>"},{"location":"sintaxe-templates/#interpolacoes","title":"Interpola\u00e7\u00f5es","text":"<p>Esta se\u00e7\u00e3o apresenta as interpola\u00e7\u00f5es de texto, HTML puro e express\u00f5es JavaScript.</p>"},{"location":"sintaxe-templates/#interpolacao-de-texto","title":"Interpola\u00e7\u00e3o de texto","text":"<p>A interpola\u00e7\u00e3o de texto \u00e9 a forma mais b\u00e1sica de renderiza\u00e7\u00e3o de dados. Ela permite a renderiza\u00e7\u00e3o de dados em texto simples. Para isso, basta usar a sintaxe <code>{{ variavel }}</code>, tamb\u00e9m conhecida como mustache. Considere o exemplo abaixo:</p> <pre><code>&lt;span&gt;Valor do contador: {{contador}}&lt;/span&gt;\n</code></pre> <p>O c\u00f3digo acima renderiza o valor da vari\u00e1vel <code>contador</code> no elemento <code>&lt;span&gt;</code>. Se o valor da vari\u00e1vel <code>contador</code> for <code>10</code>, o c\u00f3digo acima ser\u00e1 renderizado como:</p> <pre><code>&lt;span&gt;Valor do contador: 10&lt;/span&gt;\n</code></pre>"},{"location":"sintaxe-templates/#html-puro","title":"HTML puro","text":"<p>O padr\u00e3o de interpola\u00e7\u00e3o de texto n\u00e3o \u00e9 adequado para renderizar HTML puro. Para isso, o VueJs oferece a diretiva <code>v-html</code>. Considere o exemplo abaixo:</p> <pre><code>&lt;script setup&gt;\n  const rawHtml = '&lt;span style=\"color: red\"&gt;Este \u00e9 um texto em vermelho&lt;/span&gt;';\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;p&gt;Usando interpola\u00e7\u00e3o de textos: {{rawHtml}}&lt;/p&gt;\n  &lt;p&gt;Usando v-html: &lt;span v-html=\"rawHtml\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/template&gt;\n</code></pre> <p>O c\u00f3digo acima renderiza o seguinte HTML:</p>  Usando interpola\u00e7\u00e3o de textos: &lt;span style=\"color: red\"&gt; Este \u00e9 um texto em vermelho &lt;/span&gt; <p>Usando v-html: Este \u00e9 um texto em vermelho</p> <p>Neste exemplo, a interpola\u00e7\u00e3o de texto renderiza o HTML como texto, enquanto a diretiva <code>v-html</code> renderiza o HTML como HTML. No segundo caso, o conte\u00fado do elemento <code>&lt;span&gt;</code> \u00e9 renderizado com o valor de <code>rawHtml</code> e interpretado como HTML puro.</p> <p>Uma observa\u00e7\u00e3o</p> <p>No VueJS, o atributo <code>v-html</code> \u00e9 chamado de diretiva. Diretivas s\u00e3o atributos especiais que come\u00e7am com <code>v-</code> e que s\u00e3o usados para modificar o comportamento de um elemento. Diretivas s\u00e3o usadas para renderizar dados, modificar o comportamento de um elemento, ou modificar o comportamento de um elemento de acordo com o estado da aplica\u00e7\u00e3o. As diretivas ser\u00e3o abordadas em detalhes em outro momento.</p>"},{"location":"sintaxe-templates/#expressoes-javascript","title":"Express\u00f5es JavaScript","text":"<p>O VueJs permite a renderiza\u00e7\u00e3o de express\u00f5es JavaScript. Para isso, basta usar a sintaxe <code>{{ expressao }}</code>. As express\u00f5es JavaScript s\u00e3o avaliadas em tempo de execu\u00e7\u00e3o, ou seja, o resultado \u00e9 renderizado no template de acordo com o valor da express\u00e3o no momento da renderiza\u00e7\u00e3o. Considere o exemplo abaixo:</p> <pre><code>&lt;script setup&gt;\n  const numero = 1;\n  const ok = true;\n  const mensagem = 'programar';\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;p&gt;{{ numero + 1 }}&lt;/p&gt;\n  &lt;p&gt;{{ ok ? 'Sim' : 'N\u00e3o' }}&lt;/p&gt;\n  &lt;p&gt;{{mensagem.split('').reverse().join('') }}&lt;/p&gt;\n&lt;/template&gt;\n</code></pre> <p>As express\u00f5es acima s\u00e3o avaliadas como uma express\u00e3o Javascript e o resultado \u00e9 renderizado no template. No primeiro caso, o resultado \u00e9 <code>2</code>, no segundo caso, o resultado \u00e9 <code>Sim</code>, e no terceiro caso, o resultado \u00e9 <code>ramargorp</code>.</p> <p>Nos templates, voc\u00ea pode usar qualquer express\u00e3o JavaScript v\u00e1lida. Isso inclui operadores aritm\u00e9ticos, l\u00f3gicos, condicionais, at\u00e9 fun\u00e7\u00f5es JavaScript, como <code>Math.max()</code>, <code>Math.min()</code>, etc. As express\u00f5es JavaScript podem ser usadas nos seguintes lugares:</p> <ul> <li>Interpola\u00e7\u00e3o de texto</li> <li>Em qualquer diretiva Vue (atributos que come\u00e7am com <code>v-</code>)</li> </ul> <p>Note que s\u00e3o permitidas apenas express\u00f5es JavaScript simples. N\u00e3o \u00e9 poss\u00edvel usar declara\u00e7\u00f5es de vari\u00e1veis, bem como controles de fluxo como <code>if</code>, <code>for</code>, etc.</p> <p>Por fim, \u00e9 poss\u00edvel invocar fun\u00e7\u00f5es JavaScript em templates. Considere o exemplo abaixo:</p> <pre><code>&lt;script setup&gt;\n  const mensagem = 'programar';\n\n  function inverter(texto) {\n    return texto.split('').reverse().join('');\n  }\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;p&gt;{{ inverter(mensagem) }}&lt;/p&gt;\n&lt;/template&gt;\n</code></pre> <p>No exemplo acima, a fun\u00e7\u00e3o <code>inverter()</code> \u00e9 invocada em um template. O resultado \u00e9 renderizado no elemento <code>&lt;p&gt;</code>. Nesse caso, o resultado \u00e9 <code>ramargorp</code>.</p>"},{"location":"sintaxe-templates/#diretivas","title":"Diretivas","text":"<p>As diretivas s\u00e3o atributos especiais que come\u00e7am com <code>v-</code>. Elas s\u00e3o usadas para modificar o comportamento de um elemento ou componente. Por exemplo, a diretiva <code>v-if</code> \u00e9 usada para mostrar ou esconder um elemento baseado em uma express\u00e3o. Os valores das diretivas s\u00e3o avaliados em tempo de execu\u00e7\u00e3o, ou seja, o resultado \u00e9 renderizado no template de acordo com o valor da express\u00e3o no momento da renderiza\u00e7\u00e3o.</p> <p>Em geral, os valores das diretivas s\u00e3o express\u00f5es JavaScript. No entanto, algumas diretivas permitem outros valores, como <code>v-for</code>, <code>v-bind</code>, <code>v-on</code> e <code>v-slot</code>, que ser\u00e3o abordados em detalhes em outro momento.</p> <p>Considere o exemplo abaixo:</p> <pre><code>&lt;script setup&gt;\n  const ok = true;\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div v-if=\"ok\"&gt;Mostrar&lt;/div&gt;\n&lt;/template&gt;\n</code></pre> <p>Nesse exemplo, o elemento <code>&lt;div&gt;</code> ser\u00e1 renderizado se a vari\u00e1vel <code>ok</code> for avaliada como <code>true</code>. Caso contr\u00e1rio, o elemento n\u00e3o ser\u00e1 renderizado.</p> <p>A seguir, veremos algumas diretivas que s\u00e3o usadas com mais frequ\u00eancia.</p>"},{"location":"sintaxe-templates/#parametros-ou-argumentos","title":"Par\u00e2metros ou argumentos","text":"<p>Algumas diretivas permitem que sejam passados par\u00e2metros ou argumentos. Por exemplo, a diretiva <code>v-bind</code> \u00e9 usada para associar um atributo de um elemento a uma express\u00e3o. O valor do atributo \u00e9 atualizado sempre que a express\u00e3o for atualizada. Por exemplo:</p> <pre><code>&lt;script setup&gt;\n  const url = 'https://vuejs.org/';\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;a v-bind:href=\"url\"&gt;Mais informa\u00e7\u00f5es...&lt;/a&gt;\n&lt;/template&gt;\n</code></pre> <p>Nesse exemplo, o atributo <code>href</code> do elemento <code>&lt;a&gt;</code> \u00e9 atualizado sempre que a vari\u00e1vel <code>url</code> for atualizada. Inicialmente, o valor do atributo \u00e9 <code>https://vuejs.org/</code>, mas se o valor da vari\u00e1vel for alterado, o atributo tamb\u00e9m ser\u00e1 atualizado.</p> <p>A diretiva <code>v-bind</code> pode ser usada de forma abreviada, usando apenas o prefixo <code>:</code>. Por exemplo:</p> <pre><code>&lt;script setup&gt;\n  const url = 'https://vuejs.org/';\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;a :href=\"url\"&gt;Mais informa\u00e7\u00f5es...&lt;/a&gt;\n&lt;/template&gt;\n</code></pre> <p>Outro exemplo de diretiva que permite par\u00e2metros \u00e9 a diretiva <code>v-on</code>. Essa diretiva \u00e9 usada para associar um evento de um elemento a uma express\u00e3o. Por exemplo:</p> <pre><code>&lt;script setup&gt;\n  function mostrarAlerta {\n    alert('Bot\u00e3o clicado!');\n  };\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;button v-on:click=\"mostrarAlerta\"&gt;Clique aqui&lt;/button&gt;\n&lt;/template&gt;\n</code></pre> <p>Nesse exemplo, a fun\u00e7\u00e3o <code>mostrarAlerta</code> \u00e9 executada sempre que o bot\u00e3o for clicado. A diretiva <code>v-on</code> pode ser usada de forma abreviada, usando apenas o prefixo <code>@</code>. Por exemplo:</p> <pre><code>&lt;script setup&gt;\n  function mostrarAlerta {\n    alert('Bot\u00e3o clicado!');\n  };\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;button @click=\"mostrarAlerta\"&gt;Clique aqui&lt;/button&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"sintaxe-templates/#argumentos-dinamicos","title":"Argumentos din\u00e2micos","text":"<p>Algumas diretivas permitem que sejam passados argumentos din\u00e2micos. Por exemplo, a diretiva <code>v-bind</code> permite que sejam passados argumentos din\u00e2micos, como no exemplo abaixo:</p> <pre><code>&lt;script setup&gt;\n  const url = 'https://vuejs.org/';\n  const nomeAtributo = 'href';\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;a v-bind:[atribnomeAtributouto]=\"url\"&gt;Mais informa\u00e7\u00f5es...&lt;/a&gt;\n&lt;/template&gt;\n</code></pre> <p>Aqui, <code>nomeAtributo</code> \u00e9 uma vari\u00e1vel que cont\u00e9m o nome do atributo que ser\u00e1 associado \u00e0 express\u00e3o. Nesse caso, o valor da vari\u00e1vel \u00e9 <code>href</code>, mas poderia ser qualquer outro valor, como <code>src</code>, <code>title</code>, etc. O valor do atributo ser\u00e1 atualizado sempre que a vari\u00e1vel <code>nomeAtributo</code> for atualizada. No caso do exemplo, essa associa\u00e7\u00e3o ser\u00e1 equivalente a <code>v-bind:href=\"url\"</code>.</p> <p>Esse tipo de associa\u00e7\u00e3o \u00e9 muito \u00fatil quando se deseja associar um atributo a uma express\u00e3o, mas o nome do atributo \u00e9 din\u00e2mico. Da mesma forma, a diretiva <code>v-on</code> permite que sejam passados argumentos din\u00e2micos, como no exemplo abaixo:</p> <pre><code>&lt;script setup&gt;\n  const nomeEvento = 'click';\n\n  function mostrarAlerta {\n    alert('Bot\u00e3o clicado!');\n  };\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;button v-on:[nomeEvento]=\"mostrarAlerta\"&gt;Clique aqui&lt;/button&gt;\n&lt;/template&gt;\n</code></pre> <p>Aqui, <code>nomeEvento</code> \u00e9 uma vari\u00e1vel que cont\u00e9m o nome do evento que ser\u00e1 associado \u00e0 express\u00e3o. Nesse caso, o valor da vari\u00e1vel \u00e9 <code>click</code>, mas poderia ser qualquer outro valor, como <code>mouseover</code>, <code>mouseout</code>, etc. A fun\u00e7\u00e3o <code>mostrarAlerta</code> ser\u00e1 executada sempre que o evento for disparado. No caso do exemplo, essa associa\u00e7\u00e3o ser\u00e1 equivalente a <code>v-on:click=\"mostrarAlerta\"</code>.</p>"},{"location":"sintaxe-templates/#modificadores","title":"Modificadores","text":"<p>Algumas diretivas permitem que sejam passados modificadores. Por exemplo, a diretiva <code>v-on</code> permite que sejam passados modificadores, como no exemplo abaixo:</p> <pre><code>&lt;script setup&gt;\n  function mostrarAlerta {\n    alert('Bot\u00e3o clicado!');\n  };\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;button v-on:click.stop=\"mostrarAlerta\"&gt;Clique aqui&lt;/button&gt;\n&lt;/template&gt;\n</code></pre> <p>Nesse exemplo, a fun\u00e7\u00e3o <code>mostrarAlerta</code> \u00e9 executada sempre que o bot\u00e3o for clicado. No entanto, o evento <code>click</code> n\u00e3o ser\u00e1 propagado para os elementos pais. Isso significa que o evento n\u00e3o ser\u00e1 disparado para os elementos pais, mesmo que esses elementos tenham um evento associado ao evento <code>click</code>.</p> <p>Um outro exemplo comum \u00e9 o uso do modificador <code>.prevent</code>:</p> <pre><code>&lt;template&gt;\n  &lt;form v-on:submit.prevent=\"mostrarAlerta\"&gt;...&lt;/form&gt;\n&lt;/template&gt;\n</code></pre> <p>Nesse exemplo, a fun\u00e7\u00e3o <code>mostrarAlerta</code> \u00e9 executada sempre que o formul\u00e1rio for submetido. Contudo, o modificador <code>.prevent</code> informa ao Vue para chamar o m\u00e9todo <code>event.preventDefault()</code> no evento <code>submit</code>, evitando que o formul\u00e1rio seja submetido.</p>"},{"location":"sintaxe-templates/#exemplos-praticos","title":"Exemplos pr\u00e1ticos","text":"<p>Nesta se\u00e7\u00e3o, vamos ver alguns exemplos pr\u00e1ticos do uso de sintaxe de templates. Aqui, considero que voc\u00ea esteja iniciando um novo projeto VueJS para cada exemplo pr\u00e1tico que estamos vendo. Ao longo do texto, eu apenas informo o que foi adicionado ou alterado ao projeto.</p> <p>Exemplo 1 - Mostrando informa\u00e7\u00f5es</p> <p>Nesse exemplo, vamos mostrar informa\u00e7\u00f5es na tela. Para isso, vamos editar o arquivo <code>App.vue</code> e adicionar o seguinte c\u00f3digo:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nconst nome = 'Jo\u00e3o';\nconst idade = 25;\n\nfunction inverter(texto) {\n    return texto.split('').reverse().join('');\n}\n\nfunction saudacao() {\n    return `Ol\u00e1, ${nome}!`;\n}\n&lt;/script&gt;\n\n&lt;template&gt;\n&lt;div class=\"info\"&gt;\n    &lt;h1&gt;Exemplo 1 - Mostrando informa\u00e7\u00f5es na tela&lt;/h1&gt;\n    &lt;p&gt;Nome: {{ nome }}&lt;/p&gt;\n    &lt;p&gt;Idade: {{ idade }} anos&lt;/p&gt;\n    &lt;hr /&gt;\n    &lt;p&gt;Para completar 50 anos faltam: {{ 50 - idade }} anos&lt;/p&gt;\n    &lt;p&gt;O nome tem {{ nome.length }} caracteres&lt;/p&gt;\n    &lt;p&gt;O nome invertido \u00e9: {{ inverter(nome) }}&lt;/p&gt;\n    &lt;hr /&gt;\n    &lt;p&gt;Exemplo de sauda\u00e7\u00e3o usando fun\u00e7\u00e3o&lt;/p&gt;\n    &lt;p&gt;{{ saudacao() }}&lt;/p&gt;\n&lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.info {\n    background-color: rgba(35, 12, 22, 1);\n    padding: 20px 30px;\n    color: rgb(183, 210, 219);\n    border-radius: 10px;\n}\n\nh1 {\n    color: white;\n    font-weight: bold;\n    font-size: 1.5em;\n}\n&lt;/style&gt;\n</code></pre> <p>Este \u00e9 um exemplo completo com v\u00e1rios exemplos de uso de sintaxe de templates. O nosso c\u00f3digo est\u00e1 dividido em tr\u00eas partes: script, template e style. Vamos ver cada uma delas.</p> <p>Primeiramente na parte de script:</p> <ul> <li><code>const nome = 'Jo\u00e3o'</code> - declara\u00e7\u00e3o de uma constante chamada <code>nome</code> com o valor <code>'Jo\u00e3o'</code></li> <li><code>const idade = 25</code> - declara\u00e7\u00e3o de uma constante chamada <code>idade</code> com o valor <code>25</code></li> <li><code>function inverter(texto) { ... }</code> - declara\u00e7\u00e3o de uma fun\u00e7\u00e3o chamada <code>inverter</code> que recebe um par\u00e2metro chamado <code>texto</code>. Essa fun\u00e7\u00e3o inverte o texto recebido e retorna o texto invertido.</li> <li><code>function saudacao() { ... }</code> - declara\u00e7\u00e3o de uma fun\u00e7\u00e3o chamada <code>saudacao</code> que n\u00e3o recebe par\u00e2metros. Essa fun\u00e7\u00e3o retorna uma sauda\u00e7\u00e3o com o nome da pessoa.</li> </ul> <p>No bloco de template, temos:</p> <ul> <li><code>&lt;div class=\"info\"&gt;</code> - declara\u00e7\u00e3o de um elemento <code>div</code> com a classe <code>info</code>. Essa classe \u00e9 utilizada no bloco de style.</li> <li><code>&lt;h1&gt;Exemplo 1 - Mostrando informa\u00e7\u00f5es na tela&lt;/h1&gt;</code> - declara\u00e7\u00e3o de um elemento <code>h1</code> com o texto <code>Exemplo 1 - Mostrando informa\u00e7\u00f5es na tela</code>. Essa tag tamb\u00e9m \u00e9 personalizada no bloco de style.</li> <li><code>&lt;p&gt;Nome: {{ nome }}&lt;/p&gt;</code> - declara\u00e7\u00e3o de um elemento <code>p</code> com o texto <code>Nome:</code> e o valor da vari\u00e1vel <code>nome</code>. O valor da vari\u00e1vel <code>nome</code> \u00e9 mostrado entre chaves duplas <code>{{ }}</code>. Isso indica que o valor da vari\u00e1vel <code>nome</code> ser\u00e1 mostrado na tela.</li> <li><code>&lt;p&gt;Idade: {{ idade }} anos&lt;/p&gt;</code> - declara\u00e7\u00e3o de um elemento <code>p</code> com o texto <code>Idade:</code> e o valor da vari\u00e1vel <code>idade</code>.</li> <li><code>&lt;hr /&gt;</code> - declara\u00e7\u00e3o de uma linha horizontal.</li> <li><code>&lt;p&gt;Para completar 50 anos faltam: {{ 50 - idade }} anos&lt;/p&gt;</code> - declara\u00e7\u00e3o de um elemento <code>p</code> com o texto <code>Para completar 50 anos faltam:</code> e o valor da subtra\u00e7\u00e3o entre 50 e a vari\u00e1vel <code>idade</code>. Esse \u00e9 um exemplo de uma express\u00e3o JavaScript realizando uma opera\u00e7\u00e3o matem\u00e1tica.</li> <li><code>&lt;p&gt;O nome tem {{ nome.length }} caracteres&lt;/p&gt;</code> - declara\u00e7\u00e3o de um elemento <code>p</code> com o texto <code>O nome tem</code> e o valor da propriedade <code>length</code> da vari\u00e1vel <code>nome</code>. Esse \u00e9 um exemplo de uma express\u00e3o JavaScript acessando uma propriedade de um objeto.</li> <li><code>&lt;p&gt;O nome invertido \u00e9: {{ inverter(nome) }}&lt;/p&gt;</code> - declara\u00e7\u00e3o de um elemento <code>p</code> com o texto <code>O nome invertido \u00e9:</code> e o valor da fun\u00e7\u00e3o <code>inverter</code> passando a vari\u00e1vel <code>nome</code> como par\u00e2metro. Esse \u00e9 um exemplo de uma express\u00e3o JavaScript chamando uma fun\u00e7\u00e3o definida no bloco de script.</li> <li><code>&lt;p&gt; Exemplo de sauda\u00e7\u00e3o usando fun\u00e7\u00e3o&lt;/p&gt;</code> - declara\u00e7\u00e3o de um elemento <code>p</code> com o texto <code>Exemplo de sauda\u00e7\u00e3o usando fun\u00e7\u00e3o</code>.</li> <li><code>&lt;p&gt; {{ saudacao() }} &lt;/p&gt;</code> - declara\u00e7\u00e3o de um elemento <code>p</code> com o valor da fun\u00e7\u00e3o <code>saudacao</code>. Essa fun\u00e7\u00e3o foi definida no bloco de script e n\u00e3o recebe par\u00e2metros.</li> </ul> <p>Por fim, no bloco de style, temos:</p> <ul> <li><code>.info { ... }</code> - declara\u00e7\u00e3o de uma classe chamada <code>info</code>. Essa classe \u00e9 utilizada no bloco de template.</li> <li><code>background-color: rgba(35,12,22,1);</code> - declara\u00e7\u00e3o da cor de fundo do elemento com a classe <code>info</code>.</li> <li><code>padding: 20px 30px;</code> - declara\u00e7\u00e3o do espa\u00e7amento interno do elemento com a classe <code>info</code>.</li> <li><code>color: rgb(183, 210, 219);</code> - declara\u00e7\u00e3o da cor do texto do elemento com a classe <code>info</code>.</li> <li><code>border-radius: 10px;</code> - declara\u00e7\u00e3o do raio das bordas do elemento com a classe <code>info</code>.</li> <li><code>h1 { ... }</code> - declara\u00e7\u00e3o de uma tag <code>h1</code>. Essa tag \u00e9 personalizada no bloco de template.</li> <li><code>color: white;</code> - declara\u00e7\u00e3o da cor do texto do elemento <code>h1</code>.</li> <li><code>font-weight: bold;</code> - declara\u00e7\u00e3o do peso da fonte do elemento <code>h1</code>.</li> <li><code>font-size: 1.5em;</code> - declara\u00e7\u00e3o do tamanho da fonte do elemento <code>h1</code>.</li> </ul> <p>Este \u00e9 um exemplo completo para interpola\u00e7\u00e3o de vari\u00e1veis, express\u00f5es e fun\u00e7\u00f5es. Ao executar o VueJs, com o comando <code>npm run dev</code>, o resultado ser\u00e1:</p> <p></p>"},{"location":"sintaxe-templates/#exercicios","title":"Exerc\u00edcios","text":"<p>Para fixar o conte\u00fado apresentado, resolva os exerc\u00edcios abaixo:</p> <ol> <li>Altere os valores de nome e idade para os seus.</li> <li>Mostre o nome invertido em letras mai\u00fasculas.</li> <li>Adicione mais um quadro, com o exemplo do contador que fizemos nas aulas anteriores.</li> <li>Dentro desse quadro, al\u00e9m do contador, fa\u00e7a uma <code>div</code> aparecer quando o valor for maior que 10 e outra quando for menor que 10.</li> <li>Ainda, fa\u00e7a que a <code>div</code> para valores maiores que 10 tenha a cor verde e a outra vermelha.</li> </ol>"},{"location":"sintaxe-templates/#correcao-dos-exercicios","title":"Corre\u00e7\u00e3o dos exerc\u00edcios","text":"<p>Faremos a corre\u00e7\u00e3o dos exerc\u00edcios usando a API de composi\u00e7\u00e3o. Vamos, al\u00e9m disso, corrigir todos os itens num s\u00f3 exemplo. Contudo, sugiro que voc\u00ea tente resolver os exerc\u00edcios antes de ver a corre\u00e7\u00e3o.</p> Corre\u00e7\u00e3o dos exerc\u00edcios ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { ref } from 'vue';\n\n  const nome = ref('Seu nome');\n  const idade = ref(20);\n  const contador = ref(0);\n\n  function incrementar() {\n    contador.value++;\n  }\n\n  function decrementar() {\n    if (contador.value &gt; 0) {\n      contador.value--;\n    }\n  }\n\n  function reiniciar() {\n    contador.value = 0;\n  }\n\n  function inverterTextoEmMaiusculo(texto) {\n    return texto.split('').reverse().join('').toUpperCase();\n  }\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;h1&gt;Corre\u00e7\u00e3o dos exerc\u00edcios&lt;/h1&gt;\n  &lt;div class=\"info\"&gt;\n    &lt;h2&gt;Informa\u00e7\u00f5es&lt;/h2&gt;\n    &lt;p&gt;Nome: {{ nome }} &lt;/p&gt;\n    &lt;p&gt;Idade: {{ idade }}  anos&lt;/p&gt;\n    &lt;hr /&gt;\n    &lt;p&gt;\n      Para completar 50 anos faltam: {{ 50 - idade }}  anos\n    &lt;/p&gt;\n    &lt;p&gt;O nome tem {{ nome.length }}  caracteres&lt;/p&gt;\n    &lt;p&gt;\n      O nome invertido em mai\u00fascula \u00e9: {{\n      inverterTextoEmMaiusculo(nome) }}\n    &lt;/p&gt;\n  &lt;/div&gt;\n  &lt;div class=\"contador\"&gt;\n    &lt;h2&gt;Contador&lt;/h2&gt;\n    &lt;p&gt;Valor: {{ contador }} &lt;/p&gt;\n    &lt;button @click=\"incrementar\"&gt;Incrementar&lt;/button&gt;\n    &lt;button @click=\"decrementar\"&gt;Decrementar&lt;/button&gt;\n    &lt;button @click=\"reiniciar\"&gt;Reiniciar&lt;/button&gt;\n    &lt;div\n      :style=\"{ backgroundColor: contador &gt; 10 ? 'green' : 'red' }\"\n    &gt;\n      &lt;p v-if=\"contador &gt; 10\"&gt;Valor maior que 10&lt;/p&gt;\n      &lt;p v-else&gt;Valor menor que 10&lt;/p&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n  .info,\n  .contador {\n    background-color: rgba(35, 12, 22, 1);\n    padding: 20px 30px;\n    color: rgb(183, 210, 219);\n    border-radius: 10px;\n  }\n\n  h1 {\n    color: darkblue;\n    font-weight: bold;\n    font-size: 1.5em;\n  }\n\n  button {\n    margin: 10px;\n    padding: 10px;\n    border: 0;\n    border-radius: 5px;\n    background-color: lightblue;\n    color: black;\n    font-weight: bold;\n    cursor: pointer;\n  }\n\n  button:hover {\n    background-color: blue;\n  }\n\n  div {\n    margin: 10px 0;\n    padding: 10px;\n    border-radius: 5px;\n    color: white;\n    font-weight: bold;\n  }\n&lt;/style&gt;\n</code></pre> <p>Esta \u00e9 a corre\u00e7\u00e3o dos exerc\u00edcios. Neste exemplo, usamos a API de composi\u00e7\u00e3o para criar um contador e mostrar informa\u00e7\u00f5es na tela. Al\u00e9m disso, corrigimos o nome invertido em mai\u00fasculas e adicionamos um quadro com o contador e a <code>div</code> que muda de cor e aparece de acordo com o valor do contador.</p> <p>Note que esta \u00e9 uma das formas de corrigir os exerc\u00edcios. Existem outras formas de fazer a mesma coisa. O importante \u00e9 entender o conceito e a sintaxe de templates do Vue 3.</p>"},{"location":"sintaxe-templates/correcao-exercicios/","title":"Correcao exercicios","text":""},{"location":"sintaxe-templates/correcao-exercicios/#correcao-dos-exercicios","title":"Corre\u00e7\u00e3o dos exerc\u00edcios","text":"<p>Faremos a corre\u00e7\u00e3o dos exerc\u00edcios usando a API de composi\u00e7\u00e3o. Vamos, al\u00e9m disso, corrigir todos os itens num s\u00f3 exemplo. Contudo, sugiro que voc\u00ea tente resolver os exerc\u00edcios antes de ver a corre\u00e7\u00e3o.</p> Corre\u00e7\u00e3o dos exerc\u00edcios ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { ref } from 'vue';\n\n  const nome = ref('Seu nome');\n  const idade = ref(20);\n  const contador = ref(0);\n\n  function incrementar() {\n    contador.value++;\n  }\n\n  function decrementar() {\n    if (contador.value &gt; 0) {\n      contador.value--;\n    }\n  }\n\n  function reiniciar() {\n    contador.value = 0;\n  }\n\n  function inverterTextoEmMaiusculo(texto) {\n    return texto.split('').reverse().join('').toUpperCase();\n  }\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;h1&gt;Corre\u00e7\u00e3o dos exerc\u00edcios&lt;/h1&gt;\n  &lt;div class=\"info\"&gt;\n    &lt;h2&gt;Informa\u00e7\u00f5es&lt;/h2&gt;\n    &lt;p&gt;Nome: {{ nome }} &lt;/p&gt;\n    &lt;p&gt;Idade: {{ idade }}  anos&lt;/p&gt;\n    &lt;hr /&gt;\n    &lt;p&gt;\n      Para completar 50 anos faltam: {{ 50 - idade }}  anos\n    &lt;/p&gt;\n    &lt;p&gt;O nome tem {{ nome.length }}  caracteres&lt;/p&gt;\n    &lt;p&gt;\n      O nome invertido em mai\u00fascula \u00e9: {{\n      inverterTextoEmMaiusculo(nome) }}\n    &lt;/p&gt;\n  &lt;/div&gt;\n  &lt;div class=\"contador\"&gt;\n    &lt;h2&gt;Contador&lt;/h2&gt;\n    &lt;p&gt;Valor: {{ contador }} &lt;/p&gt;\n    &lt;button @click=\"incrementar\"&gt;Incrementar&lt;/button&gt;\n    &lt;button @click=\"decrementar\"&gt;Decrementar&lt;/button&gt;\n    &lt;button @click=\"reiniciar\"&gt;Reiniciar&lt;/button&gt;\n    &lt;div\n      :style=\"{ backgroundColor: contador &gt; 10 ? 'green' : 'red' }\"\n    &gt;\n      &lt;p v-if=\"contador &gt; 10\"&gt;Valor maior que 10&lt;/p&gt;\n      &lt;p v-else&gt;Valor menor que 10&lt;/p&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n  .info,\n  .contador {\n    background-color: rgba(35, 12, 22, 1);\n    padding: 20px 30px;\n    color: rgb(183, 210, 219);\n    border-radius: 10px;\n  }\n\n  h1 {\n    color: darkblue;\n    font-weight: bold;\n    font-size: 1.5em;\n  }\n\n  button {\n    margin: 10px;\n    padding: 10px;\n    border: 0;\n    border-radius: 5px;\n    background-color: lightblue;\n    color: black;\n    font-weight: bold;\n    cursor: pointer;\n  }\n\n  button:hover {\n    background-color: blue;\n  }\n\n  div {\n    margin: 10px 0;\n    padding: 10px;\n    border-radius: 5px;\n    color: white;\n    font-weight: bold;\n  }\n&lt;/style&gt;\n</code></pre> <p>Esta \u00e9 a corre\u00e7\u00e3o dos exerc\u00edcios. Neste exemplo, usamos a API de composi\u00e7\u00e3o para criar um contador e mostrar informa\u00e7\u00f5es na tela. Al\u00e9m disso, corrigimos o nome invertido em mai\u00fasculas e adicionamos um quadro com o contador e a <code>div</code> que muda de cor e aparece de acordo com o valor do contador.</p> <p>Note que esta \u00e9 uma das formas de corrigir os exerc\u00edcios. Existem outras formas de fazer a mesma coisa. O importante \u00e9 entender o conceito e a sintaxe de templates do Vue 3.</p>"},{"location":"sintaxe-templates/diretivas/","title":"Diretivas","text":""},{"location":"sintaxe-templates/diretivas/#diretivas","title":"Diretivas","text":"<p>As diretivas s\u00e3o atributos especiais que come\u00e7am com <code>v-</code>. Elas s\u00e3o usadas para modificar o comportamento de um elemento ou componente. Por exemplo, a diretiva <code>v-if</code> \u00e9 usada para mostrar ou esconder um elemento baseado em uma express\u00e3o. Os valores das diretivas s\u00e3o avaliados em tempo de execu\u00e7\u00e3o, ou seja, o resultado \u00e9 renderizado no template de acordo com o valor da express\u00e3o no momento da renderiza\u00e7\u00e3o.</p> <p>Em geral, os valores das diretivas s\u00e3o express\u00f5es JavaScript. No entanto, algumas diretivas permitem outros valores, como <code>v-for</code>, <code>v-bind</code>, <code>v-on</code> e <code>v-slot</code>, que ser\u00e3o abordados em detalhes em outro momento.</p> <p>Considere o exemplo abaixo:</p> <pre><code>&lt;script setup&gt;\n  const ok = true;\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div v-if=\"ok\"&gt;Mostrar&lt;/div&gt;\n&lt;/template&gt;\n</code></pre> <p>Nesse exemplo, o elemento <code>&lt;div&gt;</code> ser\u00e1 renderizado se a vari\u00e1vel <code>ok</code> for avaliada como <code>true</code>. Caso contr\u00e1rio, o elemento n\u00e3o ser\u00e1 renderizado.</p> <p>A seguir, veremos algumas diretivas que s\u00e3o usadas com mais frequ\u00eancia.</p>"},{"location":"sintaxe-templates/diretivas/#parametros-ou-argumentos","title":"Par\u00e2metros ou argumentos","text":"<p>Algumas diretivas permitem que sejam passados par\u00e2metros ou argumentos. Por exemplo, a diretiva <code>v-bind</code> \u00e9 usada para associar um atributo de um elemento a uma express\u00e3o. O valor do atributo \u00e9 atualizado sempre que a express\u00e3o for atualizada. Por exemplo:</p> <pre><code>&lt;script setup&gt;\n  const url = 'https://vuejs.org/';\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;a v-bind:href=\"url\"&gt;Mais informa\u00e7\u00f5es...&lt;/a&gt;\n&lt;/template&gt;\n</code></pre> <p>Nesse exemplo, o atributo <code>href</code> do elemento <code>&lt;a&gt;</code> \u00e9 atualizado sempre que a vari\u00e1vel <code>url</code> for atualizada. Inicialmente, o valor do atributo \u00e9 <code>https://vuejs.org/</code>, mas se o valor da vari\u00e1vel for alterado, o atributo tamb\u00e9m ser\u00e1 atualizado.</p> <p>A diretiva <code>v-bind</code> pode ser usada de forma abreviada, usando apenas o prefixo <code>:</code>. Por exemplo:</p> <pre><code>&lt;script setup&gt;\n  const url = 'https://vuejs.org/';\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;a :href=\"url\"&gt;Mais informa\u00e7\u00f5es...&lt;/a&gt;\n&lt;/template&gt;\n</code></pre> <p>Outro exemplo de diretiva que permite par\u00e2metros \u00e9 a diretiva <code>v-on</code>. Essa diretiva \u00e9 usada para associar um evento de um elemento a uma express\u00e3o. Por exemplo:</p> <pre><code>&lt;script setup&gt;\n  function mostrarAlerta {\n    alert('Bot\u00e3o clicado!');\n  };\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;button v-on:click=\"mostrarAlerta\"&gt;Clique aqui&lt;/button&gt;\n&lt;/template&gt;\n</code></pre> <p>Nesse exemplo, a fun\u00e7\u00e3o <code>mostrarAlerta</code> \u00e9 executada sempre que o bot\u00e3o for clicado. A diretiva <code>v-on</code> pode ser usada de forma abreviada, usando apenas o prefixo <code>@</code>. Por exemplo:</p> <pre><code>&lt;script setup&gt;\n  function mostrarAlerta {\n    alert('Bot\u00e3o clicado!');\n  };\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;button @click=\"mostrarAlerta\"&gt;Clique aqui&lt;/button&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"sintaxe-templates/diretivas/#argumentos-dinamicos","title":"Argumentos din\u00e2micos","text":"<p>Algumas diretivas permitem que sejam passados argumentos din\u00e2micos. Por exemplo, a diretiva <code>v-bind</code> permite que sejam passados argumentos din\u00e2micos, como no exemplo abaixo:</p> <pre><code>&lt;script setup&gt;\n  const url = 'https://vuejs.org/';\n  const nomeAtributo = 'href';\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;a v-bind:[atribnomeAtributouto]=\"url\"&gt;Mais informa\u00e7\u00f5es...&lt;/a&gt;\n&lt;/template&gt;\n</code></pre> <p>Aqui, <code>nomeAtributo</code> \u00e9 uma vari\u00e1vel que cont\u00e9m o nome do atributo que ser\u00e1 associado \u00e0 express\u00e3o. Nesse caso, o valor da vari\u00e1vel \u00e9 <code>href</code>, mas poderia ser qualquer outro valor, como <code>src</code>, <code>title</code>, etc. O valor do atributo ser\u00e1 atualizado sempre que a vari\u00e1vel <code>nomeAtributo</code> for atualizada. No caso do exemplo, essa associa\u00e7\u00e3o ser\u00e1 equivalente a <code>v-bind:href=\"url\"</code>.</p> <p>Esse tipo de associa\u00e7\u00e3o \u00e9 muito \u00fatil quando se deseja associar um atributo a uma express\u00e3o, mas o nome do atributo \u00e9 din\u00e2mico. Da mesma forma, a diretiva <code>v-on</code> permite que sejam passados argumentos din\u00e2micos, como no exemplo abaixo:</p> <pre><code>&lt;script setup&gt;\n  const nomeEvento = 'click';\n\n  function mostrarAlerta {\n    alert('Bot\u00e3o clicado!');\n  };\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;button v-on:[nomeEvento]=\"mostrarAlerta\"&gt;Clique aqui&lt;/button&gt;\n&lt;/template&gt;\n</code></pre> <p>Aqui, <code>nomeEvento</code> \u00e9 uma vari\u00e1vel que cont\u00e9m o nome do evento que ser\u00e1 associado \u00e0 express\u00e3o. Nesse caso, o valor da vari\u00e1vel \u00e9 <code>click</code>, mas poderia ser qualquer outro valor, como <code>mouseover</code>, <code>mouseout</code>, etc. A fun\u00e7\u00e3o <code>mostrarAlerta</code> ser\u00e1 executada sempre que o evento for disparado. No caso do exemplo, essa associa\u00e7\u00e3o ser\u00e1 equivalente a <code>v-on:click=\"mostrarAlerta\"</code>.</p>"},{"location":"sintaxe-templates/diretivas/#modificadores","title":"Modificadores","text":"<p>Algumas diretivas permitem que sejam passados modificadores. Por exemplo, a diretiva <code>v-on</code> permite que sejam passados modificadores, como no exemplo abaixo:</p> <pre><code>&lt;script setup&gt;\n  function mostrarAlerta {\n    alert('Bot\u00e3o clicado!');\n  };\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;button v-on:click.stop=\"mostrarAlerta\"&gt;Clique aqui&lt;/button&gt;\n&lt;/template&gt;\n</code></pre> <p>Nesse exemplo, a fun\u00e7\u00e3o <code>mostrarAlerta</code> \u00e9 executada sempre que o bot\u00e3o for clicado. No entanto, o evento <code>click</code> n\u00e3o ser\u00e1 propagado para os elementos pais. Isso significa que o evento n\u00e3o ser\u00e1 disparado para os elementos pais, mesmo que esses elementos tenham um evento associado ao evento <code>click</code>.</p> <p>Um outro exemplo comum \u00e9 o uso do modificador <code>.prevent</code>:</p> <pre><code>&lt;template&gt;\n  &lt;form v-on:submit.prevent=\"mostrarAlerta\"&gt;...&lt;/form&gt;\n&lt;/template&gt;\n</code></pre> <p>Nesse exemplo, a fun\u00e7\u00e3o <code>mostrarAlerta</code> \u00e9 executada sempre que o formul\u00e1rio for submetido. Contudo, o modificador <code>.prevent</code> informa ao Vue para chamar o m\u00e9todo <code>event.preventDefault()</code> no evento <code>submit</code>, evitando que o formul\u00e1rio seja submetido.</p>"},{"location":"sintaxe-templates/exemplos/","title":"Exemplos","text":""},{"location":"sintaxe-templates/exemplos/#exemplos-praticos","title":"Exemplos pr\u00e1ticos","text":"<p>Nesta se\u00e7\u00e3o, vamos ver alguns exemplos pr\u00e1ticos do uso de sintaxe de templates. Aqui, considero que voc\u00ea esteja iniciando um novo projeto VueJS para cada exemplo pr\u00e1tico que estamos vendo. Ao longo do texto, eu apenas informo o que foi adicionado ou alterado ao projeto.</p> <p>Exemplo 1 - Mostrando informa\u00e7\u00f5es</p> <p>Nesse exemplo, vamos mostrar informa\u00e7\u00f5es na tela. Para isso, vamos editar o arquivo <code>App.vue</code> e adicionar o seguinte c\u00f3digo:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\nconst nome = 'Jo\u00e3o';\nconst idade = 25;\n\nfunction inverter(texto) {\n    return texto.split('').reverse().join('');\n}\n\nfunction saudacao() {\n    return `Ol\u00e1, ${nome}!`;\n}\n&lt;/script&gt;\n\n&lt;template&gt;\n&lt;div class=\"info\"&gt;\n    &lt;h1&gt;Exemplo 1 - Mostrando informa\u00e7\u00f5es na tela&lt;/h1&gt;\n    &lt;p&gt;Nome: {{ nome }}&lt;/p&gt;\n    &lt;p&gt;Idade: {{ idade }} anos&lt;/p&gt;\n    &lt;hr /&gt;\n    &lt;p&gt;Para completar 50 anos faltam: {{ 50 - idade }} anos&lt;/p&gt;\n    &lt;p&gt;O nome tem {{ nome.length }} caracteres&lt;/p&gt;\n    &lt;p&gt;O nome invertido \u00e9: {{ inverter(nome) }}&lt;/p&gt;\n    &lt;hr /&gt;\n    &lt;p&gt;Exemplo de sauda\u00e7\u00e3o usando fun\u00e7\u00e3o&lt;/p&gt;\n    &lt;p&gt;{{ saudacao() }}&lt;/p&gt;\n&lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.info {\n    background-color: rgba(35, 12, 22, 1);\n    padding: 20px 30px;\n    color: rgb(183, 210, 219);\n    border-radius: 10px;\n}\n\nh1 {\n    color: white;\n    font-weight: bold;\n    font-size: 1.5em;\n}\n&lt;/style&gt;\n</code></pre> <p>Este \u00e9 um exemplo completo com v\u00e1rios exemplos de uso de sintaxe de templates. O nosso c\u00f3digo est\u00e1 dividido em tr\u00eas partes: script, template e style. Vamos ver cada uma delas.</p> <p>Primeiramente na parte de script:</p> <ul> <li><code>const nome = 'Jo\u00e3o'</code> - declara\u00e7\u00e3o de uma constante chamada <code>nome</code> com o valor <code>'Jo\u00e3o'</code></li> <li><code>const idade = 25</code> - declara\u00e7\u00e3o de uma constante chamada <code>idade</code> com o valor <code>25</code></li> <li><code>function inverter(texto) { ... }</code> - declara\u00e7\u00e3o de uma fun\u00e7\u00e3o chamada <code>inverter</code> que recebe um par\u00e2metro chamado <code>texto</code>. Essa fun\u00e7\u00e3o inverte o texto recebido e retorna o texto invertido.</li> <li><code>function saudacao() { ... }</code> - declara\u00e7\u00e3o de uma fun\u00e7\u00e3o chamada <code>saudacao</code> que n\u00e3o recebe par\u00e2metros. Essa fun\u00e7\u00e3o retorna uma sauda\u00e7\u00e3o com o nome da pessoa.</li> </ul> <p>No bloco de template, temos:</p> <ul> <li><code>&lt;div class=\"info\"&gt;</code> - declara\u00e7\u00e3o de um elemento <code>div</code> com a classe <code>info</code>. Essa classe \u00e9 utilizada no bloco de style.</li> <li><code>&lt;h1&gt;Exemplo 1 - Mostrando informa\u00e7\u00f5es na tela&lt;/h1&gt;</code> - declara\u00e7\u00e3o de um elemento <code>h1</code> com o texto <code>Exemplo 1 - Mostrando informa\u00e7\u00f5es na tela</code>. Essa tag tamb\u00e9m \u00e9 personalizada no bloco de style.</li> <li><code>&lt;p&gt;Nome: {{ nome }}&lt;/p&gt;</code> - declara\u00e7\u00e3o de um elemento <code>p</code> com o texto <code>Nome:</code> e o valor da vari\u00e1vel <code>nome</code>. O valor da vari\u00e1vel <code>nome</code> \u00e9 mostrado entre chaves duplas <code>{{ }}</code>. Isso indica que o valor da vari\u00e1vel <code>nome</code> ser\u00e1 mostrado na tela.</li> <li><code>&lt;p&gt;Idade: {{ idade }} anos&lt;/p&gt;</code> - declara\u00e7\u00e3o de um elemento <code>p</code> com o texto <code>Idade:</code> e o valor da vari\u00e1vel <code>idade</code>.</li> <li><code>&lt;hr /&gt;</code> - declara\u00e7\u00e3o de uma linha horizontal.</li> <li><code>&lt;p&gt;Para completar 50 anos faltam: {{ 50 - idade }} anos&lt;/p&gt;</code> - declara\u00e7\u00e3o de um elemento <code>p</code> com o texto <code>Para completar 50 anos faltam:</code> e o valor da subtra\u00e7\u00e3o entre 50 e a vari\u00e1vel <code>idade</code>. Esse \u00e9 um exemplo de uma express\u00e3o JavaScript realizando uma opera\u00e7\u00e3o matem\u00e1tica.</li> <li><code>&lt;p&gt;O nome tem {{ nome.length }} caracteres&lt;/p&gt;</code> - declara\u00e7\u00e3o de um elemento <code>p</code> com o texto <code>O nome tem</code> e o valor da propriedade <code>length</code> da vari\u00e1vel <code>nome</code>. Esse \u00e9 um exemplo de uma express\u00e3o JavaScript acessando uma propriedade de um objeto.</li> <li><code>&lt;p&gt;O nome invertido \u00e9: {{ inverter(nome) }}&lt;/p&gt;</code> - declara\u00e7\u00e3o de um elemento <code>p</code> com o texto <code>O nome invertido \u00e9:</code> e o valor da fun\u00e7\u00e3o <code>inverter</code> passando a vari\u00e1vel <code>nome</code> como par\u00e2metro. Esse \u00e9 um exemplo de uma express\u00e3o JavaScript chamando uma fun\u00e7\u00e3o definida no bloco de script.</li> <li><code>&lt;p&gt; Exemplo de sauda\u00e7\u00e3o usando fun\u00e7\u00e3o&lt;/p&gt;</code> - declara\u00e7\u00e3o de um elemento <code>p</code> com o texto <code>Exemplo de sauda\u00e7\u00e3o usando fun\u00e7\u00e3o</code>.</li> <li><code>&lt;p&gt; {{ saudacao() }} &lt;/p&gt;</code> - declara\u00e7\u00e3o de um elemento <code>p</code> com o valor da fun\u00e7\u00e3o <code>saudacao</code>. Essa fun\u00e7\u00e3o foi definida no bloco de script e n\u00e3o recebe par\u00e2metros.</li> </ul> <p>Por fim, no bloco de style, temos:</p> <ul> <li><code>.info { ... }</code> - declara\u00e7\u00e3o de uma classe chamada <code>info</code>. Essa classe \u00e9 utilizada no bloco de template.</li> <li><code>background-color: rgba(35,12,22,1);</code> - declara\u00e7\u00e3o da cor de fundo do elemento com a classe <code>info</code>.</li> <li><code>padding: 20px 30px;</code> - declara\u00e7\u00e3o do espa\u00e7amento interno do elemento com a classe <code>info</code>.</li> <li><code>color: rgb(183, 210, 219);</code> - declara\u00e7\u00e3o da cor do texto do elemento com a classe <code>info</code>.</li> <li><code>border-radius: 10px;</code> - declara\u00e7\u00e3o do raio das bordas do elemento com a classe <code>info</code>.</li> <li><code>h1 { ... }</code> - declara\u00e7\u00e3o de uma tag <code>h1</code>. Essa tag \u00e9 personalizada no bloco de template.</li> <li><code>color: white;</code> - declara\u00e7\u00e3o da cor do texto do elemento <code>h1</code>.</li> <li><code>font-weight: bold;</code> - declara\u00e7\u00e3o do peso da fonte do elemento <code>h1</code>.</li> <li><code>font-size: 1.5em;</code> - declara\u00e7\u00e3o do tamanho da fonte do elemento <code>h1</code>.</li> </ul> <p>Este \u00e9 um exemplo completo para interpola\u00e7\u00e3o de vari\u00e1veis, express\u00f5es e fun\u00e7\u00f5es. Ao executar o VueJs, com o comando <code>npm run dev</code>, o resultado ser\u00e1:</p> <p></p>"},{"location":"sintaxe-templates/exerc%C3%ADcios/","title":"Exerc\u00edcios","text":""},{"location":"sintaxe-templates/exerc%C3%ADcios/#exercicios","title":"Exerc\u00edcios","text":"<p>Para fixar o conte\u00fado apresentado, resolva os exerc\u00edcios abaixo:</p> <ol> <li>Altere os valores de nome e idade para os seus.</li> <li>Mostre o nome invertido em letras mai\u00fasculas.</li> <li>Adicione mais um quadro, com o exemplo do contador que fizemos nas aulas anteriores.</li> <li>Dentro desse quadro, al\u00e9m do contador, fa\u00e7a uma <code>div</code> aparecer quando o valor for maior que 10 e outra quando for menor que 10.</li> <li>Ainda, fa\u00e7a que a <code>div</code> para valores maiores que 10 tenha a cor verde e a outra vermelha.</li> </ol>"},{"location":"sintaxe-templates/interpolacoes/","title":"Interpolacoes","text":""},{"location":"sintaxe-templates/interpolacoes/#interpolacoes","title":"Interpola\u00e7\u00f5es","text":"<p>Esta se\u00e7\u00e3o apresenta as interpola\u00e7\u00f5es de texto, HTML puro e express\u00f5es JavaScript.</p>"},{"location":"sintaxe-templates/interpolacoes/#interpolacao-de-texto","title":"Interpola\u00e7\u00e3o de texto","text":"<p>A interpola\u00e7\u00e3o de texto \u00e9 a forma mais b\u00e1sica de renderiza\u00e7\u00e3o de dados. Ela permite a renderiza\u00e7\u00e3o de dados em texto simples. Para isso, basta usar a sintaxe <code>{{ variavel }}</code>, tamb\u00e9m conhecida como mustache. Considere o exemplo abaixo:</p> <pre><code>&lt;span&gt;Valor do contador: {{contador}}&lt;/span&gt;\n</code></pre> <p>O c\u00f3digo acima renderiza o valor da vari\u00e1vel <code>contador</code> no elemento <code>&lt;span&gt;</code>. Se o valor da vari\u00e1vel <code>contador</code> for <code>10</code>, o c\u00f3digo acima ser\u00e1 renderizado como:</p> <pre><code>&lt;span&gt;Valor do contador: 10&lt;/span&gt;\n</code></pre>"},{"location":"sintaxe-templates/interpolacoes/#html-puro","title":"HTML puro","text":"<p>O padr\u00e3o de interpola\u00e7\u00e3o de texto n\u00e3o \u00e9 adequado para renderizar HTML puro. Para isso, o VueJs oferece a diretiva <code>v-html</code>. Considere o exemplo abaixo:</p> <pre><code>&lt;script setup&gt;\n  const rawHtml = '&lt;span style=\"color: red\"&gt;Este \u00e9 um texto em vermelho&lt;/span&gt;';\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;p&gt;Usando interpola\u00e7\u00e3o de textos: {{rawHtml}}&lt;/p&gt;\n  &lt;p&gt;Usando v-html: &lt;span v-html=\"rawHtml\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/template&gt;\n</code></pre> <p>O c\u00f3digo acima renderiza o seguinte HTML:</p>  Usando interpola\u00e7\u00e3o de textos: &lt;span style=\"color: red\"&gt; Este \u00e9 um texto em vermelho &lt;/span&gt; <p>Usando v-html: Este \u00e9 um texto em vermelho</p> <p>Neste exemplo, a interpola\u00e7\u00e3o de texto renderiza o HTML como texto, enquanto a diretiva <code>v-html</code> renderiza o HTML como HTML. No segundo caso, o conte\u00fado do elemento <code>&lt;span&gt;</code> \u00e9 renderizado com o valor de <code>rawHtml</code> e interpretado como HTML puro.</p> <p>Uma observa\u00e7\u00e3o</p> <p>No VueJS, o atributo <code>v-html</code> \u00e9 chamado de diretiva. Diretivas s\u00e3o atributos especiais que come\u00e7am com <code>v-</code> e que s\u00e3o usados para modificar o comportamento de um elemento. Diretivas s\u00e3o usadas para renderizar dados, modificar o comportamento de um elemento, ou modificar o comportamento de um elemento de acordo com o estado da aplica\u00e7\u00e3o. As diretivas ser\u00e3o abordadas em detalhes em outro momento.</p>"},{"location":"sintaxe-templates/interpolacoes/#expressoes-javascript","title":"Express\u00f5es JavaScript","text":"<p>O VueJs permite a renderiza\u00e7\u00e3o de express\u00f5es JavaScript. Para isso, basta usar a sintaxe <code>{{ expressao }}</code>. As express\u00f5es JavaScript s\u00e3o avaliadas em tempo de execu\u00e7\u00e3o, ou seja, o resultado \u00e9 renderizado no template de acordo com o valor da express\u00e3o no momento da renderiza\u00e7\u00e3o. Considere o exemplo abaixo:</p> <pre><code>&lt;script setup&gt;\n  const numero = 1;\n  const ok = true;\n  const mensagem = 'programar';\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;p&gt;{{ numero + 1 }}&lt;/p&gt;\n  &lt;p&gt;{{ ok ? 'Sim' : 'N\u00e3o' }}&lt;/p&gt;\n  &lt;p&gt;{{mensagem.split('').reverse().join('') }}&lt;/p&gt;\n&lt;/template&gt;\n</code></pre> <p>As express\u00f5es acima s\u00e3o avaliadas como uma express\u00e3o Javascript e o resultado \u00e9 renderizado no template. No primeiro caso, o resultado \u00e9 <code>2</code>, no segundo caso, o resultado \u00e9 <code>Sim</code>, e no terceiro caso, o resultado \u00e9 <code>ramargorp</code>.</p> <p>Nos templates, voc\u00ea pode usar qualquer express\u00e3o JavaScript v\u00e1lida. Isso inclui operadores aritm\u00e9ticos, l\u00f3gicos, condicionais, at\u00e9 fun\u00e7\u00f5es JavaScript, como <code>Math.max()</code>, <code>Math.min()</code>, etc. As express\u00f5es JavaScript podem ser usadas nos seguintes lugares:</p> <ul> <li>Interpola\u00e7\u00e3o de texto</li> <li>Em qualquer diretiva Vue (atributos que come\u00e7am com <code>v-</code>)</li> </ul> <p>Note que s\u00e3o permitidas apenas express\u00f5es JavaScript simples. N\u00e3o \u00e9 poss\u00edvel usar declara\u00e7\u00f5es de vari\u00e1veis, bem como controles de fluxo como <code>if</code>, <code>for</code>, etc.</p> <p>Por fim, \u00e9 poss\u00edvel invocar fun\u00e7\u00f5es JavaScript em templates. Considere o exemplo abaixo:</p> <pre><code>&lt;script setup&gt;\n  const mensagem = 'programar';\n\n  function inverter(texto) {\n    return texto.split('').reverse().join('');\n  }\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;p&gt;{{ inverter(mensagem) }}&lt;/p&gt;\n&lt;/template&gt;\n</code></pre> <p>No exemplo acima, a fun\u00e7\u00e3o <code>inverter()</code> \u00e9 invocada em um template. O resultado \u00e9 renderizado no elemento <code>&lt;p&gt;</code>. Nesse caso, o resultado \u00e9 <code>ramargorp</code>.</p>"},{"location":"state/","title":"Gerenciamento de estados","text":""},{"location":"state/#conceitos-de-gerenciamento-de-estados","title":"Conceitos de gerenciamento de estados","text":"<p>O gerenciamento de estados \u00e9 uma parte importante do desenvolvimento de aplica\u00e7\u00f5es web. Ele \u00e9 respons\u00e1vel por manter o estado da aplica\u00e7\u00e3o sincronizado com a interface de usu\u00e1rio, garantindo que as informa\u00e7\u00f5es exibidas na tela estejam sempre atualizadas.</p> <p>No Vue.js, o gerenciamento de estados \u00e9 feito por meio de vari\u00e1veis reativas, que s\u00e3o propriedades da inst\u00e2ncia Vue que podem ser monitoradas e reagir a mudan\u00e7as. Quando uma vari\u00e1vel reativa \u00e9 alterada, o Vue.js automaticamente atualiza a interface de usu\u00e1rio para refletir essa mudan\u00e7a.</p> <p>No entanto, vamos considerar a aplica\u00e7\u00e3o de exemplo que fizemos na aula anterior, para listagem e exclus\u00e3o de produtos. Nessa aplica\u00e7\u00e3o, a listagem de produtos \u00e9 feita por meio de um componente ProductList, que recebe um array de produtos como propriedade e emite um evento quando o usu\u00e1rio clica em um \u00edcone de lixeira para excluir um produto.</p> <p>Contudo, considere que o usu\u00e1rio clique no \u00edcone de lixeira para excluir um produto. Nesse caso, o componente ProductList emite um evento para o componente pai, que \u00e9 respons\u00e1vel por remover o produto da lista. A remo\u00e7\u00e3o do produto \u00e9 refletida na interface de usu\u00e1rio, pois a vari\u00e1vel reativa que armazena a lista de produtos \u00e9 atualizada.</p> <p>Por\u00e9m se o usu\u00e1rio clicar para ver os detalhes de um produto e depois retornar para a listagem de produtos, a lista de produtos ser\u00e1 recarregada para o estado inicial, ou seja, as altera\u00e7\u00f5es ou exclus\u00f5es de produto s\u00e3o perdidas. Isso ocorre porque a lista de produtos \u00e9 uma vari\u00e1vel local do componente e n\u00e3o \u00e9 compartilhada com outros componentes.</p> <p>E esse comportamento pode ser um problema em aplica\u00e7\u00f5es maiores, onde v\u00e1rios componentes precisam compartilhar o mesmo estado. Para resolver esse problema, o Vue.js fornece uma solu\u00e7\u00e3o chamada Pinia, que \u00e9 uma biblioteca de gerenciamento de estados com uma interface simples e intuitiva.</p>"},{"location":"state/#pinia","title":"Pinia","text":"<p>Pinia \u00e9 uma biblioteca de gerenciamento de estados para Vue.js que fornece uma maneira simples e intuitiva de compartilhar estados entre componentes.</p> <p>Com Pinia, \u00e9 poss\u00edvel criar um store global que armazena o estado da aplica\u00e7\u00e3o e compartilh\u00e1-lo com todos os componentes que precisam acessar ou modificar esse estado. Dessa forma, \u00e9 poss\u00edvel manter o estado da aplica\u00e7\u00e3o sincronizado entre os diferentes componentes, garantindo que as informa\u00e7\u00f5es exibidas na tela estejam sempre atualizadas.</p> <p>Nas pr\u00f3ximas aulas, vamos aprender a criar um store global com Pinia e utiliz\u00e1-lo para gerenciar o estado da aplica\u00e7\u00e3o. Vamos ver como definir o estado da aplica\u00e7\u00e3o, como acessar e modificar esse estado a partir dos componentes e como reagir a mudan\u00e7as no estado para atualizar a interface de usu\u00e1rio.</p> <p>Tamb\u00e9m, partiremos da aplica\u00e7\u00e3o de exemplo que fizemos na aula anterior, quando estudamos os conceitos do vue-router. A aplica\u00e7\u00e3o em quest\u00e3o faz a listagem e exclus\u00e3o de produtos, e vamos refator\u00e1-la para utilizar Pinia. Vamos ver como criar um store global para armazenar a lista de produtos e como compartilhar esse estado entre os diferentes componentes da aplica\u00e7\u00e3o.</p>"},{"location":"state/#instalacao-do-pinia","title":"Instala\u00e7\u00e3o do Pinia","text":"<p>Como no caso do VueRouter, o Pinia \u00e9 uma biblioteca externa que precisa ser instalada no projeto. Para isso, voc\u00ea pode escolher inclu\u00ed-la no momento da cria\u00e7\u00e3o do projeto ou instal\u00e1-la posteriormente. Para instalar o Pinia em um projeto existente, voc\u00ea pode usar o seguinte comando:</p> <pre><code>npm install pinia\n</code></pre> <p>Em seguida, voc\u00ea precisa configurar o Pinia no seu projeto Vue.js. Para isso, abra o arquivo <code>src/main.js</code> e adicione o seguinte c\u00f3digo:</p> src/main.js<pre><code>import { createPinia } from 'pinia';\n\nconst pinia = createPinia();\napp.use(pinia);\n</code></pre> <p>A vers\u00e3o completa do arquivo <code>src/main.js</code> ficar\u00e1 assim:</p>  Vers\u00e3o completa ./src/main.js<pre><code>import '@mdi/font/css/materialdesignicons.min.css'\nimport './assets/main.css'\n\nimport { createApp } from 'vue'\nimport { createPinia } from 'pinia'\n\nimport router from './router'\nimport App from './App.vue'\n\nconst pinia = createPinia()\n\nconst app = createApp(App)\napp.use(pinia)\napp.use(router)\napp.mount('#app')\n</code></pre> <p>Com isso, o Pinia estar\u00e1 configurado e pronto para ser utilizado no seu projeto Vue.js. Agora, voc\u00ea pode come\u00e7ar a criar stores e gerenciar o estado da sua aplica\u00e7\u00e3o de forma eficiente.</p>"},{"location":"state/#criando-um-store-com-pinia","title":"Criando um store com Pinia","text":"<p>Para criar um store com Pinia, voc\u00ea precisa definir um arquivo que exporta uma fun\u00e7\u00e3o que cria o store. Essa fun\u00e7\u00e3o deve retornar um objeto que cont\u00e9m o estado, as a\u00e7\u00f5es e os getters do store.</p> <p>Vamos criar um store para gerenciar o carrinho e a sua visualiza\u00e7\u00e3o. Crie um arquivo chamado <code>cart.js</code> dentro da pasta <code>src/stores</code> e adicione o seguinte c\u00f3digo:</p> src/stores/cart.js<pre><code>import { ref } from 'vue';\nimport { defineStore } from 'pinia';\n\nexport const useCartStore = defineStore('cart', () =&gt; {\n  const showCart = ref(false);\n\n  const cart = ref({\n    items: [],\n    total: 0,\n  });\n\n  function decrementBookToCart(book) {\n    const existingBook = cart.value.items.find((item) =&gt; item.id === book.id);\n    if (existingBook.quantity === 1) {\n      cart.value.items = cart.value.items.filter((item) =&gt; item.id !== book.id);\n    } else {\n      existingBook.quantity--;\n    }\n    cart.value.total -= book.price;\n  }\n\n  function incrementBookToCart(book) {\n    const existingBook = cart.value.items.find((item) =&gt; item.id === book.id);\n    existingBook.quantity++;\n    cart.value.total += book.price;\n  }\n\n  function addToCart(book) {\n    const existingBook = cart.value.items.find((item) =&gt; item.id === book.id);\n    if (existingBook) {\n      existingBook.quantity++;\n    } else {\n      cart.value.items.push({ ...book, quantity: 1 });\n    }\n    cart.value.total += book.price;\n    alert(`Adicionado ${book.title} ao carrinho!`);\n  }\n\n  return {\n    showCart,\n    cart,\n    incrementBookToCart,\n    decrementBookToCart,\n    addToCart,\n  };\n});\n</code></pre> <p>Nesse caso, estamos criando um store chamado <code>cart</code> que cont\u00e9m duas vari\u00e1veis reativas: <code>showCart</code> e <code>cart</code>. A fun\u00e7\u00e3o <code>defineStore</code> \u00e9 usada para definir o store e o nome do store \u00e9 passado como primeiro argumento.</p> <p>Tamb\u00e9m, definimos tr\u00eas fun\u00e7\u00f5es: <code>incrementBookToCart</code>, <code>decrementBookToCart</code> e <code>addToCart</code>. Essas fun\u00e7\u00f5es s\u00e3o respons\u00e1veis por manipular o estado do carrinho, adicionando ou removendo livros e atualizando o total do carrinho. Note que essas fun\u00e7\u00f5es j\u00e1 estavam desenvolvidas anteriormente, mas agora est\u00e3o encapsuladas dentro do store.</p>"},{"location":"state/#utilizando-o-store-no-componente","title":"Utilizando o store no componente","text":"<p>Agora que temos o store criado, podemos utiliz\u00e1-lo nos nossos componentes. Para isso, vamos importar o store e usar a fun\u00e7\u00e3o <code>useCartStore</code> para acessar o estado do carrinho.</p> <p>Primeiramente, vamos ajustar o componente <code>HeaderComponent.vue</code> para usar o store do carrinho. Abra o arquivo <code>src/components/HeaderComponent.vue</code> e modifique o bloco <code>&lt;script setup&gt;</code> para incluir o uso do store:</p> src/components/HeaderComponent.vue<pre><code>&lt;script setup&gt;\nimport { useCartStore } from '@/stores/cart';\nconst cartStore = useCartStore();\n&lt;/script&gt;\n</code></pre> <p>Agora, para exibir o carrinho, vamos usar a vari\u00e1vel <code>showCart</code> do store. No bloco <code>&lt;template&gt;</code>, modifique o c\u00f3digo para usar <code>cartStore.showCart</code>:</p> ./src/components/HeaderComponent.vue<pre><code>        &lt;li @click=\"cartStore.showCart = !cartStore.showCart\"&gt;\n</code></pre> <p>Note que alteramos o evento de clique para alternar o valor de <code>showCart</code> diretamente do store. Isso garante que o estado do carrinho seja compartilhado entre os componentes. Dessa forma, a fun\u00e7\u00e3o de <code>emit</code> que antes era usada para emitir o evento <code>click-cart</code> n\u00e3o \u00e9 mais necess\u00e1ria, pois estamos manipulando o estado diretamente do store.</p>  Vers\u00e3o completa ./src/components/HeaderComponent.vue<pre><code>&lt;script setup&gt;\n    import { useCartStore } from '@/stores/cart'\n    const cartStore = useCartStore()\n&lt;/script&gt;\n\n&lt;template&gt;\n    &lt;header&gt;\n        &lt;nav&gt;\n            &lt;h1&gt;\n                &lt;RouterLink to=\"/\"&gt;\n                IFbooks\n                &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n                &lt;/RouterLink&gt;\n            &lt;/h1&gt;\n            &lt;div class=\"search-wrapper\"&gt;\n                &lt;input type=\"text\" class=\"search\" placeholder=\"Buscar...\" /&gt;\n            &lt;/div&gt;\n            &lt;ul&gt;\n                &lt;li&gt;Termos&lt;/li&gt;\n                &lt;li&gt;&lt;RouterLink to=\"/equipe\"&gt;Equipe&lt;/RouterLink&gt;&lt;/li&gt;\n                &lt;li&gt;Envio&lt;/li&gt;\n                &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;ul class=\"icons\"&gt;\n                &lt;li @click=\"cartStore.showCart = !cartStore.showCart\"&gt;\n                &lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;\n                &lt;/li&gt;\n                &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/nav&gt;\n    &lt;/header&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 2vh 8vw;\n    border-bottom: 2px solid #27ae6099;\n\n    &amp; a {\n        text-decoration: none;\n        color: #000;\n    }\n\n    &amp; h1 {\n        font-size: 1.3rem;\n        color: #000;\n\n        &amp; a {\n            text-decoration: none;\n            color: #000;\n            display: flex;\n            align-items: center;\n        }\n\n        &amp; .logo-title {\n            border-left: 1px solid #27ae6099;\n            font-size: 0.8rem;\n            margin-left: 10px;\n            padding-left: 10px;\n            color: #27ae6099;\n            width: 100px;\n            line-height: 1rem;\n        }\n    }\n\n    &amp; input {\n        width: 400px;\n        height: 40px;\n        border-radius: 5px;\n        font-size: 1rem;\n        border: 0;\n        background-color: #f1f1f1;\n        padding: 5px;\n    }\n\n    &amp; ul {\n        display: flex;\n    }\n\n    &amp; ul li {\n        list-style: none;\n        margin: 0 10px;\n        font-size: 1rem;\n    }\n\n    &amp; .icons li {\n        color: #27ae60;\n        font-size: 1.3rem;\n    }\n\n    &amp; .search-wrapper {\n        position: relative;\n    }\n\n    &amp; .search-wrapper::before {\n        content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n        font-family: 'Material Design Icons';\n        font-size: 1.2rem;\n        position: absolute;\n        right: 0.75rem;\n        top: 50%;\n        transform: translateY(-50%);\n        pointer-events: none;\n    }\n\n    &amp; .search {\n        padding-right: 2rem;\n    }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"state/#definindo-uma-store-para-os-livros","title":"Definindo uma store para os livros.","text":"<p>Agora, vamos criar um store para gerenciar os livros. Crie um arquivo chamado <code>books.js</code> dentro da pasta <code>src/stores</code> e adicione o seguinte c\u00f3digo:</p> ./src/stores/books.js<pre><code>import { ref } from 'vue';\nimport { defineStore } from 'pinia';\n\nexport const useBooksStore = defineStore('books', () =&gt; {\n  const books = ref([\n    {\n      id: 1,\n      title: 'Comigo na livraria',\n      cover: '/covers/comigo-na-livraria.png',\n      price: 23.24,\n      author: 'Martha Medeiros',\n    },\n    {\n      id: 2,\n      title: 'Quincas Borba',\n      cover: '/covers/quincas-borba.png',\n      price: 23.24,\n      author: 'Machado de Assis',\n    },\n    {\n      id: 3,\n      title: 'A livraria',\n      cover: '/covers/a-livraria.png',\n      price: 13.94,\n      author: 'Penelope Fitzgerald',\n    },\n    {\n      id: 4,\n      title: 'A hora da estrela',\n      cover: '/covers/a-hora-da-estrela.png',\n      price: 16.84,\n      author: 'Clarice Lispector',\n    },\n    {\n      id: 5,\n      title: 'O alienista',\n      cover: '/covers/o-alienista.png',\n      price: 266.92,\n      author: 'Machado de Assis',\n    },\n    {\n      id: 6,\n      title: 'Mar morto',\n      cover: '/covers/mar-morto.png',\n      price: 13.95,\n      author: 'Jorge Amado',\n    },\n    {\n      id: 7,\n      title: 'Grande sert\u00e3o',\n      cover: '/covers/grande-sertao-veredas.png',\n      price: 26.04,\n      author: 'Guimar\u00e3es Rosa',\n    },\n    {\n      id: 8,\n      title: 'Flor de poemas',\n      cover: '/covers/flor-de-poema.png',\n      price: 15.81,\n      author: 'Cec\u00edlia Meireles',\n    },\n  ]);\n\n  return { books };\n});\n</code></pre> <p>Note que, como no caso do store do carrinho, estamos usando a fun\u00e7\u00e3o <code>defineStore</code> para definir o store dos livros. O estado do store \u00e9 uma vari\u00e1vel reativa chamada <code>books</code>, que cont\u00e9m um array de objetos representando os livros dispon\u00edveis. Tamb\u00e9m, essas informa\u00e7\u00f5es j\u00e1 estavam definidas anteriormente, mas agora est\u00e3o encapsuladas dentro do store.</p>"},{"location":"state/#utilizando-o-store-dos-livros-no-componente-homeview","title":"Utilizando o store dos livros no componente HomeView","text":"<p>Agora, vamos editar o arquivo <code>src/views/HomeView.vue</code> para utilizar o store do carrinho. Abra o arquivo e deixe o seu conte\u00fado como abaixo (as novas linhas adicionadas est\u00e3o destacadas):</p> src/views/HomeView.vue<pre><code>&lt;script setup&gt;\nimport CartComponent from '@/components/CartComponent.vue';\nimport HeroBanner from '@/components/HeroBanner.vue';\nimport FeaturedComponent from '@/components/FeaturedComponent.vue';\nimport BooksListing from '@/components/BooksListing.vue';\n\nimport { useBooksStore } from '@/stores/books';\nimport { useCartStore } from '@/stores/cart';\nconst booksStore = useBooksStore();\nconst cartStore = useCartStore();\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;cart-component\n    v-if=\"cartStore.showCart\"\n    :cart=\"cartStore.cart\"\n    @hide-cart=\"cartStore.showCart = false\"\n    @increment-book=\"cartStore.incrementBookToCart\"\n    @decrement-book=\"cartStore.decrementBookToCart\"\n  /&gt;\n  &lt;template v-else&gt;\n    &lt;hero-banner /&gt;\n    &lt;featured-component /&gt;\n    &lt;books-listing\n      :books=\"booksStore.books\"\n      @add-to-cart=\"cartStore.addToCart\"\n    /&gt;\n  &lt;/template&gt;\n&lt;/template&gt;\n</code></pre> <p>Temos, agora, importado os stores <code>useBooksStore</code> e <code>useCartStore</code>, e instanciado as vari\u00e1veis <code>booksStore</code> e <code>cartStore</code>. Essas vari\u00e1veis nos permitem acessar o estado dos livros e do carrinho, respectivamente. Al\u00e9m disso, o componente <code>CartComponent</code> agora recebe o estado do carrinho diretamente do store, e o componente <code>BooksListing</code> recebe a lista de livros do store dos livros.</p>"},{"location":"state/#fazendo-a-barra-de-pesquisa","title":"Fazendo a barra de pesquisa","text":"<p>Agora, vamos fazer a barra de pesquisa para filtrar os livros. Para isso, vamos adicionar uma vari\u00e1vel reativa chamada <code>filterText</code> no store dos livros e criar um m\u00e9todo para filtrar os livros com base nessa consulta.</p> <p>Tamb\u00e9m vai precisar de uma fun\u00e7\u00e3o computada para retornar os livros filtrados com base na consulta de pesquisa. A fun\u00e7\u00e3o computada ter\u00e1 a seguinte estrutura:</p> ./src/stores/books.js<pre><code>const filteredBooks = computed(() =&gt; {\n  return books.value.filter((book) =&gt; {\n    return book.title.toLowerCase().includes(filterText.value.toLowerCase());\n  });\n});\n</code></pre> <p>Tamb\u00e9m, ser\u00e1 necess\u00e1rio retornar a vari\u00e1vel <code>filterText</code> e a fun\u00e7\u00e3o computada <code>filteredBooks</code> do store. Assim, o componente <code>BooksListing</code> poder\u00e1 usar a lista filtrada de livros.</p> <p>A vers\u00e3o completa do arquivo <code>src/stores/books.js</code> ficar\u00e1 assim (as linhas novas est\u00e3o destacadas):</p>  Vers\u00e3o completa ./src/stores/books.js<pre><code>import { computed, ref } from 'vue'\n\nimport { defineStore } from 'pinia'\n\nexport const useBookStore = defineStore('book', () =&gt; {\n  const filterText = ref('')\n\n  const books = [\n    {\n      id: 1,\n      title: 'Comigo na livraria',\n      cover: '/covers/comigo-na-livraria.png',\n      price: 23.24,\n      author: 'Martha Medeiros',\n    },\n    {\n      id: 2,\n      title: 'Quincas Borba',\n      cover: '/covers/quincas-borba.png',\n      price: 23.24,\n      author: 'Machado de Assis',\n    },\n    {\n      id: 3,\n      title: 'A livraria',\n      cover: '/covers/a-livraria.png',\n      price: 13.94,\n      author: 'Penelope Fitzgerald',\n    },\n    {\n      id: 4,\n      title: 'A hora da estrela',\n      cover: '/covers/a-hora-da-estrela.png',\n      price: 16.84,\n      author: 'Clarice Lispector',\n    },\n    {\n      id: 5,\n      title: 'O alienista',\n      cover: '/covers/o-alienista.png',\n      price: 266.92,\n      author: 'Machado de Assis',\n    },\n    {\n      id: 6,\n      title: 'Mar morto',\n      cover: '/covers/mar-morto.png',\n      price: 13.95,\n      author: 'Jorge Amado',\n    },\n    {\n      id: 7,\n      title: 'Grande sert\u00e3o',\n      cover: '/covers/grande-sertao-veredas.png',\n      price: 26.04,\n      author: 'Guimar\u00e3es Rosa',\n    },\n    {\n      id: 8,\n      title: 'Flor de poemas',\n      cover: '/covers/flor-de-poema.png',\n      price: 15.81,\n      author: 'Cec\u00edlia Meireles',\n    },\n  ]\n\n  function getBookById(id) {\n      return books.find((book) =&gt; book.id == id)\n  }\n  const filteredBooks = computed(\n    () =&gt;\n    books.filter((book) =&gt; book.title.toLowerCase().includes(filterText.value.toLowerCase()))\n  )\n\n  return { filteredBooks, filterText, getBookById }\n})\n</code></pre> <p>Agora, vamos ajustar o componente <code>HomeView.vue</code> para usar a lista filtrada de livros. Abra o arquivo <code>src/views/HomeView.vue</code> e modifique o bloco <code>&lt;template&gt;</code>, alterando a vari\u00e1vel <code>books</code> para <code>filteredBooks</code> (Veja a linha destacada):</p> src/views/HomeView.vue<pre><code>&lt;script setup&gt;\nimport FeaturedComponent from '@/components/FeaturedComponent.vue';\nimport HeroBanner from '@/components/HeroBanner.vue';\nimport CartComponent from '@/components/CartComponent.vue';\nimport BooksListing from '@/components/BooksListing.vue';\n\nimport { useBookStore } from '@/stores/book';\nimport { useCartStore } from '@/stores/cart';\n\nconst bookStore = useBookStore();\nconst cartStore = useCartStore();\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;CartComponent\n    v-if=\"cartStore.showCart\"\n    :cart=\"cartStore.cart\"\n    @hide-cart=\"cartStore.showCart = false\"\n    @increment-book=\"cartStore.incrementBookToCart\"\n    @decrement-book=\"cartStore.decrementBookToCart\"\n  /&gt;\n  &lt;template v-else&gt;\n    &lt;HeroBanner /&gt;\n    &lt;FeaturedComponent /&gt;\n    &lt;BooksListing\n      :books=\"bookStore.filteredBooks\"\n      @add-to-cart=\"cartStore.addToCart\"\n    /&gt;\n  &lt;/template&gt;\n&lt;/template&gt;\n</code></pre> <p>Por fim, vamos ajustar o componente <code>HeaderComponent.vue</code> para atualizar o valor de <code>filterText</code> no store dos livros quando o usu\u00e1rio digitar na barra de pesquisa. Abra o arquivo <code>src/components/HeaderComponent.vue</code> e modifique o bloco <code>&lt;script setup&gt;</code> para incluir o uso do store dos livros:</p> src/components/HeaderComponent.vue<pre><code>&lt;script setup&gt;\nimport { useCartStore } from '@/stores/cart';\nimport { useBookStore } from '@/stores/book';\n\nconst cartStore = useCartStore();\nconst bookStore = useBookStore();\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;h1&gt;\n        &lt;RouterLink to=\"/\"&gt;\n          IFbooks\n          &lt;span class=\"logo-title\"&gt; Apre\u00e7o a livros &lt;/span&gt;\n        &lt;/RouterLink&gt;\n      &lt;/h1&gt;\n      &lt;div class=\"search-wrapper\"&gt;\n        &lt;input\n          v-model=\"bookStore.filterText\"\n          type=\"text\"\n          class=\"search\"\n          placeholder=\"Buscar...\"\n        /&gt;\n      &lt;/div&gt;\n      &lt;ul&gt;\n        &lt;li&gt;Termos&lt;/li&gt;\n        &lt;li&gt;&lt;RouterLink to=\"/equipe\"&gt;Equipe&lt;/RouterLink&gt;&lt;/li&gt;\n        &lt;li&gt;Envio&lt;/li&gt;\n        &lt;li&gt;Devolu\u00e7\u00f5es&lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;ul class=\"icons\"&gt;\n        &lt;li @click=\"cartStore.showCart = !cartStore.showCart\"&gt;\n          &lt;span class=\"mdi mdi-cart\"&gt;&lt;/span&gt;\n        &lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-heart\"&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span class=\"mdi mdi-account\"&gt;&lt;/span&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\nheader nav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2vh 8vw;\n  border-bottom: 2px solid #27ae6099;\n\n  &amp; a {\n    text-decoration: none;\n    color: rgb(44, 62, 80);\n  }\n\n  &amp; h1 {\n    font-size: 1.3rem;\n    color: #000;\n\n    &amp; a {\n      text-decoration: none;\n      color: #000;\n      display: flex;\n      align-items: center;\n    }\n\n    &amp; .logo-title {\n      border-left: 1px solid #27ae6099;\n      font-size: 0.8rem;\n      margin-left: 10px;\n      padding-left: 10px;\n      color: #27ae6099;\n      width: 100px;\n      line-height: 1rem;\n    }\n  }\n\n  &amp; input {\n    width: 400px;\n    height: 40px;\n    border-radius: 5px;\n    font-size: 1rem;\n    border: 0;\n    background-color: #f1f1f1;\n    padding: 5px;\n  }\n\n  &amp; ul {\n    display: flex;\n  }\n\n  &amp; ul li {\n    list-style: none;\n    margin: 0 10px;\n    font-size: 1rem;\n  }\n\n  &amp; .icons li {\n    color: #27ae60;\n    font-size: 1.3rem;\n  }\n\n  &amp; .search-wrapper {\n    position: relative;\n  }\n\n  &amp; .search-wrapper::before {\n    content: '\udb80\udf49'; /* Code glyph para mdi-magnify */\n    font-family: 'Material Design Icons';\n    font-size: 1.2rem;\n    position: absolute;\n    right: 0.75rem;\n    top: 50%;\n    transform: translateY(-50%);\n    pointer-events: none;\n  }\n\n  &amp; .search {\n    padding-right: 2rem;\n  }\n}\n&lt;/style&gt;\n</code></pre> <p>Agora, quando o usu\u00e1rio digitar na barra de pesquisa, o valor de <code>filterText</code> no store dos livros ser\u00e1 atualizado automaticamente, e a lista de livros exibida no componente <code>BooksListing</code> ser\u00e1 filtrada com base nesse valor.</p>"},{"location":"tmdb/","title":"Tutorial TMDB","text":""},{"location":"tmdb/#a-api-tmdb-the-movie-database-api","title":"A API TMDB (The Movie Database API)","text":"<p>A API TMDB \u00e9 uma API REST que fornece informa\u00e7\u00f5es sobre filmes, s\u00e9ries e programas de TV. Ela \u00e9 uma API p\u00fablica e gratuita, que pode ser acessada atrav\u00e9s do endere\u00e7o https://www.themoviedb.org/documentation/api.</p> <p>Para utilizar a API, \u00e9 necess\u00e1rio criar uma conta no site https://www.themoviedb.org/. Ap\u00f3s criar a conta, \u00e9 necess\u00e1rio criar uma chave de acesso (API Key). Para isso, acesse o menu Settings (Configura\u00e7\u00f5es) e, em seguida, API. Clique no bot\u00e3o Create e, em seguida, Developer. D\u00ea um nome para a chave e clique em Create. A chave ser\u00e1 criada e ser\u00e1 exibida na tela. Copie a chave e guarde-a em um local seguro. Essa chave ser\u00e1 utilizada para acessar a API. A chave que queremos acesso \u00e9 a que est\u00e1 no campo Token de Leitura da API.</p>"},{"location":"tmdb/#conhecendo-a-api","title":"Conhecendo a API","text":"<p>A API TMDB fornece diversas informa\u00e7\u00f5es sobre filmes, s\u00e9ries e programas de TV. Para acessar essas informa\u00e7\u00f5es, \u00e9 necess\u00e1rio fazer uma requisi\u00e7\u00e3o HTTP para o servidor da API. A API fornece diversas informa\u00e7\u00f5es, como a lista de filmes em cartaz, a lista de filmes mais populares, a lista de filmes mais bem avaliados, etc. Al\u00e9m disso, \u00e9 poss\u00edvel obter informa\u00e7\u00f5es sobre um filme espec\u00edfico, como o t\u00edtulo, a sinopse, o elenco, etc.</p> <p>Na documenta\u00e7\u00e3o da API, em [https://developer.themoviedb.org/reference/intro/getting-started] (API Reference), \u00e9 poss\u00edvel encontrar no menu lateral os seguintes t\u00f3picos, entre outro:</p> <ul> <li>Account (Conta): informa\u00e7\u00f5es sobre como obter detalhes da conta, favoritos, filmes avaliados, etc.</li> <li>Authentication (Autentica\u00e7\u00e3o): informa\u00e7\u00f5es sobre como obter solicitar token de acesso, criar uma sess\u00e3o, validar uma chave, etc.</li> <li>Certifications (Certifica\u00e7\u00f5es): informa\u00e7\u00f5es sobre as classifica\u00e7\u00f5es indicativas de filmes, s\u00e9ries e programas de TV.</li> <li>...</li> <li>Companies (Empresas): informa\u00e7\u00f5es sobre as empresas que produzem filmes, s\u00e9ries e programas de TV.</li> <li>Discover (Descobrir): informa\u00e7\u00f5es sobre como descobrir filmes, s\u00e9ries e programas de TV.</li> <li>Find (Encontrar): informa\u00e7\u00f5es sobre como encontrar filmes, s\u00e9ries e programas de TV por ID.</li> <li>Genres (G\u00eaneros): informa\u00e7\u00f5es sobre os g\u00eaneros de filmes, s\u00e9ries e programas de TV.</li> <li>...</li> <li>Movies Lists (Listas de filmes): informa\u00e7\u00f5es sobre como obter listas de filmes em cartaz, populares, melhor avaliados e em lan\u00e7amento breve.</li> <li>Movies (Filmes): informa\u00e7\u00f5es sobre como obter detalhes de um filme, elenco, imagens, etc.</li> <li>E muitos outros.</li> </ul>"},{"location":"tmdb/#buscando-os-generos-de-filmes-e-programas-de-tv","title":"Buscando os g\u00eaneros de filmes e programas de TV","text":"<p>Para entender o funcionamento da API, vamos buscar na documenta\u00e7\u00e3o pelo item Genres -&gt; Movie List. Ao acessar a documenta\u00e7\u00e3o, \u00e9 poss\u00edvel perceber que a API aceita como par\u00e2metro (Query Params) apenas o item \"Language\". Tamb\u00e9m na documenta\u00e7\u00e3o da resposta que ser\u00e1 enviada pela API (Response) fica definido que o retorno ser\u00e1 um objeto JSON com os seguintes campos:</p> <ul> <li>genres: um array de objetos JSON com os seguintes campos:</li> <li>id: o id do g\u00eanero</li> <li>name: o nome do g\u00eanero</li> </ul> <p>Tamb\u00e9m, \u00e9 poss\u00edvel identificar que o endpoint consultado ser\u00e1 o seguinte:</p> <pre><code>https://api.themoviedb.org/3/genre/movie/list\n</code></pre> <p>Nesse caso, case se deseje buscar os g\u00eaneros em l\u00edngua portuguesa, pode-se utilizar o seguinte endpoint:</p> <pre><code>https://api.themoviedb.org/3/genre/movie/list?language=pt-BR\n</code></pre> <p>visto que language \u00e9 um dos par\u00e2metros aceitos pela API.</p> <p>Para testar o seu uso pode ser utilizado o pr\u00f3prio painel lateral da documenta\u00e7\u00e3o da API. Para isso, basta preencher o campo Header no item Authorization e clicar no bot\u00e3o Try it!. O resultado ser\u00e1 exibido na tela.</p> <p>Tamb\u00e9m pode ser utilizado a extens\u00e3o RapidAPI do Visual Studio Code, ou qualquer outra extens\u00e3o ou ferramenta para testar APIs REST. Nesse caso \u00e9 essencial informar o Token de Leitura da API. Para isso, em Headers adicione um Header Authorization com o valor Bearer {token}, onde {token} \u00e9 o token de leitura da API.</p>"},{"location":"tmdb/#buscando-os-filmes-em-cartaz","title":"Buscando os filmes em cartaz","text":"<p>Para buscar os filmes em cartaz, vamos buscar na documenta\u00e7\u00e3o pelo item Movie Lists -&gt; Now Playing. Ao acessar a documenta\u00e7\u00e3o, \u00e9 poss\u00edvel perceber que a API aceita como par\u00e2metros (Query Params) os seguintes itens:</p> <ul> <li>Language: o idioma dos dados retornados</li> <li>Page: o n\u00famero da p\u00e1gina a ser retornada</li> <li>Region: o pa\u00eds a ser considerado para a busca. No caso do Brasil, esse c\u00f3digo \u00e9 BR.</li> </ul> <p>Tamb\u00e9m na documenta\u00e7\u00e3o da resposta que ser\u00e1 enviada pela API (Response) fica definido que o retorno ser\u00e1 um objeto JSON com os seguintes campos:</p> <ul> <li>dates: um objeto JSON com os seguintes campos:</li> <li>maximum: a data m\u00e1xima de lan\u00e7amento dos filmes</li> <li>minimum: a data m\u00ednima de lan\u00e7amento dos filmes</li> <li>page: o n\u00famero da p\u00e1gina retornada</li> <li>results: um array de objetos JSON com os seguintes campos:</li> <li>adult: um booleano que indica se o filme \u00e9 para adultos</li> <li>backdrop_path: o caminho para a imagem de fundo do filme</li> <li>genre_ids: um array de inteiros com os ids dos g\u00eaneros do filme</li> <li>id: o id do filme</li> <li>original_language: o idioma original do filme</li> <li>original_title: o t\u00edtulo original do filme</li> <li>overview: a sinopse do filme</li> <li>popularity: a popularidade do filme</li> <li>poster_path: o caminho para o poster do filme</li> <li>release_date: a data de lan\u00e7amento do filme</li> <li>title: o t\u00edtulo do filme</li> <li>video: um booleano que indica se o filme tem v\u00eddeo</li> <li>vote_average: a m\u00e9dia de votos do filme</li> <li>vote_count: o n\u00famero de votos do filme</li> <li>total_pages: o n\u00famero total de p\u00e1ginas</li> <li>total_results: o n\u00famero total de resultados</li> </ul> <p>Tamb\u00e9m, \u00e9 poss\u00edvel identificar que o endpoint consultado ser\u00e1 o seguinte:</p> <pre><code>https://api.themoviedb.org/3/movie/now_playing\n</code></pre> <p>Nesse caso, case se deseje buscar os filmes em cartaz no Brasil, com retorno em l\u00edngua portuguesa, pode-se utilizar o seguinte endpoint:</p> <pre><code>https://api.themoviedb.org/3/movie/now_playing?language=pt-BR&amp;region=BR\n</code></pre> <p>Da mesma forma que o exemplo anterior, \u00e9 poss\u00edvel testar o uso do endpoint no painel lateral da documenta\u00e7\u00e3o da API, ou utilizando uma extens\u00e3o ou ferramenta para testar APIs REST. Nesse caso \u00e9 essencial informar o Token de Leitura da API. Para isso, em Headers adicione um Header Authorization com o valor Bearer {token}, onde {token} \u00e9 o token de leitura da API.</p>"},{"location":"tmdb/#recuperando-as-imagens","title":"Recuperando as imagens","text":"<p>A API TMDB fornece as imagens dos filmes, s\u00e9ries e programas de TV em diversos tamanhos. Para recuperar as imagens, \u00e9 necess\u00e1rio utilizar o endpoint https://image.tmdb.org/t/p/{size}/{path}, onde {size} \u00e9 o tamanho da imagem e {path} \u00e9 o caminho da imagem. O tamanho da imagem pode ser um dos seguintes:</p> <ul> <li>w92: 92px de largura</li> <li>w154: 154px de largura</li> <li>w185: 185px de largura</li> <li>w342: 342px de largura</li> <li>w500: 500px de largura</li> <li>w780: 780px de largura</li> <li>original: tamanho original da imagem</li> </ul> <p>J\u00e1 o {path} \u00e9 o caminho da imagem que se deseja buscar. Por exemplo, no caso da listagem dos filmes em cartaz, apresentado anteriormente, o campo poster_path cont\u00e9m esse valor.</p>"},{"location":"tmdb/#outros-recursos","title":"Outros recursos","text":"<p>\u00c9 muito importante navegar pela documenta\u00e7\u00e3o da API TMDB para conhecer os recursos dispon\u00edveis. Al\u00e9m disso, \u00e9 poss\u00edvel testar o uso da API diretamente na documenta\u00e7\u00e3o, o que facilita o entendimento do funcionamento da API.</p>"},{"location":"tmdb/#projeto-tmdb-no-vue","title":"Projeto TMDB no Vue","text":"<p>O objetivo deste tutorial \u00e9 apresentar como utilizar a API TMDB (The Movie Database API) para buscar informa\u00e7\u00f5es sobre filmes, s\u00e9ries e programas de TV. Para isso, ser\u00e1 utilizado o framework Vue.js e a biblioteca Axios.</p> <p>A constru\u00e7\u00e3o ser\u00e1 progressiva, de forma que novas formas de organizar os arquivos e de utilizar o Vue.js ser\u00e3o apresentadas ao longo do tutorial.</p>"},{"location":"tmdb/#criacao-do-projeto","title":"Cria\u00e7\u00e3o do projeto","text":"<p>Para criar o projeto, vamos utilizar o Vite. Para isso, vamos criar uma pasta para esse projeto, por exemplo com o nome <code>filmes-tmdb</code>. Em seguida, vamos abrir essa pasta no Visual Studio Code e, no terminal, vamos executar o seguinte comando:</p> <pre><code>npm init vue@latest .\n</code></pre> <p>Vamos responder \u00e0s perguntas como j\u00e1 apresentado em aulas anteriores. Neste momento, n\u00e3o adicione ainda nem o Vue Router e nem o Pinia. Faremos isso mais adiante.</p>"},{"location":"tmdb/#instalacao-do-axios","title":"Instala\u00e7\u00e3o do Axios","text":"<p>Para instalar o Axios, vamos executar o seguinte comando no terminal:</p> <pre><code>npm install axios\n</code></pre>"},{"location":"tmdb/#buscando-os-generos-dos-filmes-e-programas-de-tv","title":"Buscando os g\u00eaneros dos filmes e programas de TV","text":"<p>Nesta primeira etapa, vamos fazer apenas uma altera\u00e7\u00e3o na p\u00e1gina principal para listar os g\u00eaneros de filmes e programas de TV.</p> <p>Inicialmente, vamos abrir o arquivo <code>App.vue</code>, e alter\u00e1-lo para o seguinte conte\u00fado:</p> <pre><code>&lt;script setup&gt;\n  import { ref, onMounted } from 'vue';\n  import axios from 'axios';\n\n  const moviesGenres = ref([]);\n  const TVGenres = ref([]);\n\n  onMounted(async () =&gt; {\n    let response = await axios.get(\n      'https://api.themoviedb.org/3/genre/movie/list?language=pt-BR',\n      {\n        headers: {\n          Authorization: `Bearer AQUI_COLOCAR O TOKEN DE LEITURA DA API`,\n        },\n      },\n    );\n    moviesGenres.value = response.data.genres;\n    response = await axios.get(\n      'https://api.themoviedb.org/3/genre/tv/list?language=pt-BR',\n      {\n        headers: {\n          Authorization: `Bearer AQUI_COLOCAR O TOKEN DE LEITURA DA API`,\n        },\n      },\n    );\n    TVGenres.value = response.data.genres;\n  });\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;h1&gt;G\u00eaneros de filmes&lt;/h1&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"genre in moviesGenres\" :key=\"genre.id\"&gt;{{ genre.name }}&lt;/li&gt;\n  &lt;/ul&gt;\n  &lt;hr /&gt;\n  &lt;h1&gt;G\u00eaneros de programas de TV&lt;/h1&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"genre in TVGenres\" :key=\"genre.id\"&gt;{{ genre.name }}&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre> <p>Iniciamos importando o <code>ref</code> e o <code>onMounted</code> do Vue e o <code>axios</code>. Em seguida, criamos duas vari\u00e1veis reativas, <code>moviesGenres</code> e <code>TVGenres</code>, que ser\u00e3o utilizadas para armazenar os g\u00eaneros de filmes e de programas de TV, respectivamente.</p> <p>Em seguida, utilizamos o <code>onMounted</code> para executar uma fun\u00e7\u00e3o quando o componente for montado. Essa fun\u00e7\u00e3o \u00e9 ass\u00edncrona, pois utilizaremos o <code>await</code> para aguardar o retorno das requisi\u00e7\u00f5es \u00e0 API. Criamos uma vari\u00e1vel para armazenar o retorno da chamada \u00e0 API, e utilizamos o <code>await</code> para aguardar o retorno da chamada \u00e0 API. Em seguida, armazenamos os g\u00eaneros de filmes na vari\u00e1vel <code>moviesGenres</code> e os g\u00eaneros de programas de TV na vari\u00e1vel <code>TVGenres</code>.</p> <p>Perceba que armazenamos o retorno em uma vari\u00e1vel chamada <code>response</code>. Essa vari\u00e1vel \u00e9 criada com o <code>let</code> pois ser\u00e1 reutilizada para armazenar o retorno da chamada \u00e0 API de programas de TV. O retorno da chamada \u00e0 API cont\u00e9m um objeto com os seguintes campos:</p> <ul> <li>config: um objeto com a configura\u00e7\u00e3o da requisi\u00e7\u00e3o</li> <li>data: o corpo da resposta</li> <li>headers: um objeto com os cabe\u00e7alhos da resposta</li> <li>status: o c\u00f3digo de status da resposta</li> <li>statusText: a mensagem de status da resposta</li> </ul> <p>Por isso utilizamos <code>response.data</code> para acessar apenas o corpo da resposta. Nesse caso, conforme a documenta\u00e7\u00e3o da API, o corpo da resposta \u00e9 um objeto JSON com os seguintes campos:</p> <ul> <li>genres: um array de objetos JSON com os seguintes campos:</li> <li>id: o id do g\u00eanero</li> <li>name: o nome do g\u00eanero</li> </ul> <p>Por isso, utilizamos <code>response.data.genres</code> para acessar apenas o array de g\u00eaneros.</p>"},{"location":"tmdb/#configurando-o-axios","title":"Configurando o Axios","text":"<p>Note que no c\u00f3digo acima, a chave de leitura da API foi inserida diretamente no c\u00f3digo. Isso n\u00e3o \u00e9 uma boa pr\u00e1tica, pois a chave de leitura \u00e9 um dado sens\u00edvel que n\u00e3o deve ser exposto. Esse \u00e9 um dado sens\u00edvel que deve ser armazenado em um arquivo de configura\u00e7\u00e3o, que n\u00e3o deve ser enviado para o reposit\u00f3rio. Vamos resolver esse detalhe em aulas posteriores.</p> <p>No entanto, um outro detalhe no c\u00f3digo acima \u00e9 que em todas as chamadas \u00e0 API, foi necess\u00e1rio informar o endpoint completo, bem como o cabe\u00e7alho Authorization. Para evitar repetir essas informa\u00e7\u00f5es em todas as chamadas \u00e0 API, vamos configurar o Axios para que ele j\u00e1 inclua essas informa\u00e7\u00f5es em todas as chamadas \u00e0 API.</p> <p>Para isso, vamos criar um arquivo chamado <code>axios.js</code> na pasta <code>src/plugins</code> (Se a pasta plugins n\u00e3o existir, crie dentro da pasta src). Em seguida, vamos adicionar o seguinte conte\u00fado:</p> <pre><code>import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    Authorization: `Bearer COLOQUE AQUI A CHAVE DE LEITURA DA API`,\n  },\n});\n\nexport default api;\n</code></pre> <p>Nesse arquivo, importamos o Axios e criamos uma inst\u00e2ncia do Axios com o m\u00e9todo <code>create</code>. Esse m\u00e9todo recebe um objeto com as configura\u00e7\u00f5es da inst\u00e2ncia. Nesse caso, definimos a URL base da API e o cabe\u00e7alho Authorization. Em seguida, exportamos essa inst\u00e2ncia, chamada de <code>api</code>.</p>"},{"location":"tmdb/#utilizando-o-axios-modificado-nas-chamadas-a-api","title":"Utilizando o Axios modificado nas chamadas \u00e0 API","text":"<p>Agora, vamos alterar o arquivo <code>App.vue</code> para utilizar o Axios modificado. Para isso, vamos alterar a parte de <code>script</code> do arquivo <code>App.vue</code> para o seguinte:</p> <pre><code>&lt;script setup&gt;\n  import { ref, onMounted } from 'vue';\n  import api from './plugins/axios';\n\n  const moviesGenres = ref([]);\n  const TVGenres = ref([]);\n\n  onMounted(async () =&gt; {\n    let response = await api.get('genre/movie/list?language=pt-BR');\n    moviesGenres.value = response.data.genres;\n    response = await api.get('genre/tv/list?language=pt-BR');\n    TVGenres.value = response.data.genres;\n  });\n&lt;/script&gt;\n</code></pre> <p>Note que o arquivo ficou mais sucinto, facilitando a leitura e a manuten\u00e7\u00e3o do c\u00f3digo.</p>"},{"location":"tmdb/#adicionar-o-vue-router","title":"Adicionar o Vue-router","text":"<p>Nesta etapa, vamos adicionar o Vue-router ao projeto. Para isso, vamos executar o seguinte comando no terminal:</p> <pre><code>npm install vue-router\n</code></pre> <p>Em seguida, vamos criar o arquivo <code>src/router/index.js</code> com o seguinte conte\u00fado:</p> <pre><code>import { createRouter, createWebHistory } from 'vue-router';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: () =&gt; import('../views/Home.vue'),\n  },\n  {\n    path: '/filmes',\n    name: 'Movies',\n    component: () =&gt; import('../views/MoviesView.vue'),\n  },\n  {\n    path: '/tv',\n    name: 'TV',\n    component: () =&gt; import('../views/TvView.vue'),\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nexport default router;\n</code></pre> <p>No exemplo acima, estamos criando um roteador com tr\u00eas rotas:</p> <ul> <li><code>/</code>: rota para a p\u00e1gina inicial</li> <li><code>/filmes</code>: rota para a p\u00e1gina de filmes</li> <li><code>/tv</code>: rota para a p\u00e1gina de programas de TV</li> </ul> <p>No arquivo <code>src/main.js</code>, vamos importar o Vue-router e adicionar o router ao projeto. Para substitua o conte\u00fado do arquivo pelo seguinte:</p> <pre><code>import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\n\nconst app = createApp(App);\napp.use(router);\n\napp.mount('#app');\n</code></pre> <p>Nesse caso, estamos adicionando o suporte ao Vue-router ao projeto e, em seguida, montando o aplicativo.</p>"},{"location":"tmdb/#criando-a-pagina-home","title":"Criando a p\u00e1gina Home","text":"<p>Nesta etapa, vamos criar a p\u00e1gina Home. Para isso, vamos criar o arquivo <code>src/views/Home.vue</code> com o seguinte conte\u00fado:</p> <pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;Home&lt;/h1&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre> <p>Nesse caso \u00e9 apenas uma p\u00e1gina com o t\u00edtulo \"Home\", que ser\u00e1 aprimorara ao longo do tutorial.</p>"},{"location":"tmdb/#separando-a-listagem-de-generos-em-duas-views","title":"Separando a listagem de g\u00eaneros em duas views","text":"<p>Nesta etapa, vamos separar a listagem de g\u00eaneros em duas views: uma para filmes e outra para programas de TV.</p>"},{"location":"tmdb/#criando-a-pagina-para-generos-de-filmes","title":"Criando a p\u00e1gina para g\u00eaneros de filmes","text":"<p>Para criar a p\u00e1gina para g\u00eaneros de filmes, vamos criar o arquivo <code>src/views/MoviesView.vue</code> com o seguinte conte\u00fado:</p> <pre><code>&lt;script setup&gt;\n  import { ref, onMounted } from 'vue';\n  import api from '@/plugins/axios';\n\n  const genres = ref([]);\n\n  onMounted(async () =&gt; {\n    const response = await api.get('genre/movie/list?language=pt-BR');\n    genres.value = response.data.genres;\n  });\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;G\u00eaneros de filmes&lt;/h1&gt;\n    &lt;ul&gt;\n      &lt;li v-for=\"genre in genres\" :key=\"genre.id\"&gt;{{ genre.name }}&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre> <p>Note que estamos utilizando o <code>axios</code> como um plugin, conforme apresentado em aulas anteriores. Tamb\u00e9m aproveitamos a mesma parte de c\u00f3digo que j\u00e1 tinha sido anteriormente desenvolvida.</p>"},{"location":"tmdb/#criando-a-pagina-para-generos-de-programas-de-tv","title":"Criando a p\u00e1gina para g\u00eaneros de programas de TV","text":"<p>Para criar a p\u00e1gina para g\u00eaneros de programas de TV, vamos criar o arquivo <code>src/views/TvView.vue</code> com o seguinte conte\u00fado:</p> <pre><code>&lt;script setup&gt;\n  import { ref, onMounted } from 'vue';\n  import api from '@/plugins/axios';\n\n  const genres = ref([]);\n\n  onMounted(async () =&gt; {\n    const response = await api.get('genre/tv/list?language=pt-BR');\n    genres.value = response.data.genres;\n  });\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;G\u00eaneros de programas de TV&lt;/h1&gt;\n    &lt;ul&gt;\n      &lt;li v-for=\"genre in genres\" :key=\"genre.id\"&gt;{{ genre.name }}&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre> <p>Note que o exemplo \u00e9 muito semelhante ao anterior, com a diferen\u00e7a de que estamos buscando os g\u00eaneros de programas de TV.</p>"},{"location":"tmdb/#adicionando-o-menu-de-navegacao","title":"Adicionando o menu de navega\u00e7\u00e3o","text":"<p>Nesta etapa, vamos adicionar o menu de navega\u00e7\u00e3o. Para isso, vamos alterar o arquivo <code>src/App.vue</code> para o seguinte conte\u00fado:</p> <pre><code>&lt;script setup&gt;&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;nav&gt;\n      &lt;router-link to=\"/\"&gt;Home&lt;/router-link&gt;\n      &lt;router-link to=\"/filmes\"&gt;Filmes&lt;/router-link&gt;\n      &lt;router-link to=\"/tv\"&gt;Programas de TV&lt;/router-link&gt;\n    &lt;/nav&gt;\n    &lt;router-view /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n  nav {\n    display: flex;\n    justify-content: flex-start;\n    margin-bottom: 1rem;\n    column-gap: 2rem;\n  }\n&lt;/style&gt;\n</code></pre> <p>Note que estamos utilizando o componente <code>RouterLink</code> para criar os links de navega\u00e7\u00e3o. Tamb\u00e9m estamos utilizando o componente <code>RouterView</code> para indicar onde o conte\u00fado da p\u00e1gina ser\u00e1 exibido. Ainda, fizemos uma pequena estiliza\u00e7\u00e3o para o menu de navega\u00e7\u00e3o, para que os links fiquem alinhados \u00e0 esquerda e com um espa\u00e7amento entre eles. Note que usamos o atributo <code>scoped</code> para que o estilo seja aplicado apenas ao componente atual.</p>"},{"location":"tmdb/#ajustes-de-estilos-css","title":"Ajustes de estilos CSS","text":"<p>Para criar um arquivo de estilos, vamos criar um arquivo <code>src/assets/main.css</code> com o seguinte conte\u00fado:</p> <pre><code>*,\n*::before,\n*::after {\n  box-sizing: border-box;\n  margin: 0;\n}\n\nbody {\n  min-height: 100vh;\n  line-height: 1.6;\n  font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n    Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n  font-size: 15px;\n  text-rendering: optimizeLegibility;\n}\n</code></pre> <p>Vamos detalhar o que est\u00e1 sendo feito no arquivo acima:</p> <ul> <li>A primeira regra CSS define que todos os elementos, incluindo os pseudo-elementos <code>::before</code> e <code>::after</code>, devem ter:</li> <li>a propriedade <code>box-sizing</code> com o valor <code>border-box</code>: define que o tamanho de um elemento deve considerar o tamanho do conte\u00fado, o padding e a borda.</li> <li>a propriedade <code>margin</code> com o valor <code>0</code>.</li> <li>A segunda regra CSS define que o elemento <code>body</code> deve ter:</li> <li>a propriedade <code>min-height</code> com o valor <code>100vh</code>: define que a altura m\u00ednima do elemento deve ser 100% da altura da tela.</li> <li>a propriedade <code>line-height</code> com o valor <code>1.6</code>: define o espa\u00e7amento entre linhas.</li> <li>a propriedade <code>font-family</code> com uma lista de fontes: define a lista de fontes a serem utilizadas.</li> <li>a propriedade <code>font-size</code> com o valor <code>15px</code>: define o tamanho da fonte.</li> <li>a propriedade <code>text-rendering</code> com o valor <code>optimizeLegibility</code>: define que o texto deve ser renderizado de forma a melhorar a legibilidade.</li> </ul> <p>Vamos alterar agora o arquivo <code>main.js</code> para importar o arquivo <code>main.css</code>:</p> <pre><code>import './assets/main.css';\nimport { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\n\nconst app = createApp(App);\napp.use(router);\n\napp.mount('#app');\n</code></pre> <p>Note que apenas importamos o arquivo <code>main.css</code> que ser\u00e1 inclu\u00eddo no arquivo <code>index.html</code> automaticamente. Esta foi a \u00fanica linha alterada no arquivo <code>main.js</code>. Al\u00e9m disso, as regras CSS definidas no arquivo <code>main.css</code> ser\u00e3o aplicadas a todos os elementos da aplica\u00e7\u00e3o.</p>"},{"location":"tmdb/#adicionando-um-estilo-no-appvue","title":"Adicionando um estilo no App.vue","text":"<p>Vamos adicionar um estilo no componente <code>App.vue</code> para inserir um pequeno cabe\u00e7alho. Para isso, vamos primeiramente alterar o bloco <code>template</code> do arquivo <code>App.vue</code>, para o seguinte conte\u00fado:</p> <pre><code>&lt;template&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;router-link to=\"/\"&gt;Home&lt;/router-link&gt;\n      &lt;router-link to=\"/filmes\"&gt;Filmes&lt;/router-link&gt;\n      &lt;router-link to=\"/tv\"&gt;Programas de TV&lt;/router-link&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n  &lt;main&gt;\n    &lt;router-view /&gt;\n  &lt;/main&gt;\n&lt;/template&gt;\n</code></pre> <p>Note que adicionamos um cabe\u00e7alho com o menu de navega\u00e7\u00e3o que j\u00e1 estava presente no arquivo <code>App.vue</code> e movemos o bloco <code>router-view</code> para dentro do elemento <code>main</code>.</p> <p>Em seguida, vamos adicionar o seguinte estilo no bloco <code>style</code> do arquivo <code>App.vue</code>:</p> <pre><code>&lt;style scoped&gt;\nheader {\n  height: 3rem;\n  display: flex;\n  background-color: black;\n  color: #fff;\n  font-size: 1.2rem;\n  padding-left: 2rem;\n}\n\nnav {\n  column-gap: 2rem;\n  margin-bottom: 0;\n  display: flex;\n  align-items: center;\n}\n\nnav a {\n  text-decoration: none;\n  color: #fff;\n}\n&lt;/style&gt;\n</code></pre> <p>Nesse caso, criamos tr\u00eas regras CSS:</p> <ul> <li>para a tag header</li> <li>a propriedade <code>height</code> com o valor <code>3rem</code>: define a altura do elemento como 3 vezes o tamanho da fonte.</li> <li>a propriedade <code>display</code> com o valor <code>flex</code>: define que o elemento deve ser exibido como um flex container.</li> <li>a propriedade <code>background-color</code> com o valor <code>black</code>: define a cor de fundo do elemento como preto.</li> <li>a propriedade <code>color</code> com o valor <code>#fff</code>: define a cor do texto como branco.</li> <li>a propriedade <code>font-size</code> com o valor <code>1.2rem</code>: define o tamanho da fonte como 1.2 vezes o tamanho da fonte, que foi sido definido no arquivo <code>main.css</code>.</li> <li>a propriedade <code>padding-left</code> com o valor <code>2rem</code>: define o espa\u00e7amento interno esquerdo como 2 vezes o tamanho da fonte.</li> <li>para a tag nav</li> <li>a propriedade <code>column-gap</code> com o valor <code>2rem</code>: define o espa\u00e7amento entre colunas como 2 vezes o tamanho da fonte.</li> <li>a propriedade <code>margin-bottom</code> com o valor <code>0</code>: define o espa\u00e7amento externo inferior como 0.</li> <li>a propriedade <code>display</code> com o valor <code>flex</code>: define que o elemento deve ser exibido como um flex container.</li> <li>a propriedade <code>align-items</code> com o valor <code>center</code>: define que os itens devem ser alinhados verticalmente ao centro.</li> <li>para a tag a dentro de nav</li> <li>a propriedade <code>text-decoration</code> com o valor <code>none</code>: define que o texto n\u00e3o deve ter decora\u00e7\u00e3o.</li> <li>a propriedade <code>color</code> com o valor <code>#fff</code>: define a cor do texto como branco.</li> </ul>"},{"location":"tmdb/#adicionando-um-estilo-no-moviesviewvue","title":"Adicionando um estilo no MoviesView.vue","text":"<p>Vamos adicionar um estilo no componente <code>MoviesView.vue</code> para apresentar a lista de g\u00eaneros de forma mais agrad\u00e1vel. Para isso, vamos alterar o bloco <code>template</code> do arquivo <code>MoviesView.vue</code>, para o seguinte conte\u00fado:</p> <pre><code>&lt;template&gt;\n  &lt;h1&gt;Filmes&lt;/h1&gt;\n  &lt;ul class=\"genre-list\"&gt;\n    &lt;li v-for=\"genre in genres\" :key=\"genre.id\" class=\"genre-item\"&gt;\n      {{ genre.name }}\n    &lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre> <p>Note que nesse caso, alteramos o t\u00edtulo <code>h1</code> e adicionamos uma classe <code>genre-list</code> na lista <code>ul</code> e uma classe <code>genre-item</code> nos itens da lista (<code>li</code>).</p> <p>Em seguida, vamos adicionar o seguinte estilo no bloco <code>style</code> do arquivo <code>MoviesView.vue</code>:</p> <pre><code>&lt;style scoped&gt;\n.genre-list {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 2rem;\n  list-style: none;\n  padding: 0;\n}\n\n.genre-item {\n  background-color: #387250;\n  border-radius: 1rem;\n  padding: 0.5rem 1rem;\n  color: #fff;\n}\n\n.genre-item:hover {\n  cursor: pointer;\n  background-color: #4e9e5f;\n  box-shadow: 0 0 0.5rem #387250;\n}\n&lt;/style&gt;\n</code></pre> <p>Nesse caso, criamos tr\u00eas regras CSS:</p> <ul> <li>para a classe <code>.genre-list</code>:</li> <li>a propriedade <code>display</code> com o valor <code>flex</code>: define que o elemento deve ser exibido como um flex container.</li> <li>a propriedade <code>justify-content</code> com o valor <code>center</code>: define que os itens devem ser alinhados horizontalmente ao centro.</li> <li>a propriedade <code>flex-wrap</code> com o valor <code>wrap</code>: define que os itens devem ser quebrados em linhas.</li> <li>a propriedade <code>gap</code> com o valor <code>2rem</code>: define o espa\u00e7amento entre os itens como 2 vezes o tamanho da fonte.</li> <li>a propriedade <code>list-style</code> com o valor <code>none</code>: define que a lista n\u00e3o deve ter marcadores.</li> <li>para a classe <code>.genre-item</code>:</li> <li>a propriedade <code>background-color</code> com o valor <code>#387250</code>: define a cor de fundo do elemento como verde.</li> <li>a propriedade <code>border-radius</code> com o valor <code>1rem</code>: define o raio da borda como 1 vez o tamanho da fonte.</li> <li>a propriedade <code>padding</code> com o valor <code>0.5rem 1rem</code>: define o espa\u00e7amento interno como 0.5 vezes o tamanho da fonte na vertical e 1 vez o tamanho da fonte na horizontal.</li> <li>a propriedade <code>color</code> com o valor <code>#fff</code>: define a cor do texto como branco.</li> <li>para a pseudo-classe <code>.genre-item:hover</code>, quando o mouse estiver sobre o elemento:</li> <li>a propriedade <code>cursor</code> com o valor <code>pointer</code>: define que o cursor do mouse deve ser alterado para um ponteiro.</li> <li>a propriedade <code>background-color</code> com o valor <code>#4e9e5f</code>: define a cor de fundo do elemento como verde mais escuro.</li> <li>a propriedade <code>box-shadow</code> com o valor <code>0 0 0.5rem #387250</code>: define uma sombra ao redor do elemento.</li> </ul>"},{"location":"tmdb/#adicionando-um-estilo-no-tvviewvue","title":"Adicionando um estilo no TvView.vue","text":"<p>As altera\u00e7\u00f5es no arquivo <code>TvView.vue</code> s\u00e3o muito semelhantes \u00e0s altera\u00e7\u00f5es no arquivo <code>MoviesView.vue</code>. Vamos alterar o bloco <code>template</code> e <code>style</code> do arquivo <code>TvView.vue</code>, para o seguinte conte\u00fado:</p> <pre><code>&lt;template&gt;\n  &lt;h1&gt;Programas de TV&lt;/h1&gt;\n  &lt;ul class=\"genre-list\"&gt;\n    &lt;li v-for=\"genre in genres\" :key=\"genre.id\" class=\"genre-item\"&gt;\n      {{ genre.name }}\n    &lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n  .genre-list {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 2rem;\n    list-style: none;\n    padding: 0;\n  }\n\n  .genre-item {\n    background-color: #5d6424;\n    border-radius: 1rem;\n    padding: 0.5rem 1rem;\n    align-self: center;\n    color: #fff;\n    display: flex;\n    justify-content: center;\n  }\n\n  .genre-item:hover {\n    cursor: pointer;\n    background-color: #7d8a2e;\n    box-shadow: 0 0 0.5rem #5d6424;\n  }\n&lt;/style&gt;\n</code></pre> <p>Note que as \u00fanicas diferen\u00e7as em rela\u00e7\u00e3o ao exemplo do <code>MovieView.vue</code> s\u00e3o as cores utilizadas.</p>"},{"location":"tmdb/#listando-filmes","title":"Listando filmes","text":"<p>Vamos agora listar os filmes ao clicar no g\u00eanero. Para isso, vamos alterar o componente <code>MoviesView.vue</code> para que ele liste os filmes ao clicar no g\u00eanero. Inicialmente, vamos adicionar um <code>listener</code> ao evento <code>click</code> do elemento <code>li</code> que cont\u00e9m o g\u00eanero. Para isso, vamos alterar o bloco <code>template</code> do arquivo <code>MoviesView.vue</code> para o seguinte conte\u00fado:</p> <pre><code>&lt;template&gt;\n  ...\n  &lt;li\n    v-for=\"genre in genres\"\n    :key=\"genre.id\"\n    @click=\"listMovies(genre.id)\"\n    class=\"genre-item\"\n  &gt;\n    {{ genre.name }}\n  &lt;/li&gt;\n  ...\n&lt;/template&gt;\n</code></pre> <p>Note que adicionamos o <code>listener</code> ao evento <code>click</code> do elemento <code>li</code> que cont\u00e9m o g\u00eanero. Esse <code>listener</code> chama o m\u00e9todo <code>listMovies</code> passando o <code>id</code> do g\u00eanero como par\u00e2metro. Al\u00e9m disso, as demais partes do c\u00f3digo permanecem inalteradas. Agora, vamos adicionar o m\u00e9todo <code>listMovies</code> no bloco <code>script</code> do arquivo <code>MoviesView.vue</code>:</p> <pre><code>&lt;script setup&gt;\n  ...\n  const movies = ref([]);\n\n  const listMovies = async (genreId) =&gt; {\n      const response = await api.get('discover/movie', {\n          params: {\n              with_genres: genreId,\n              language: 'pt-BR'\n          }\n      });\n      movies.value = response.data.results\n  };\n  ...\n&lt;/script&gt;\n</code></pre> <p>Neste exemplo, criamos uma vari\u00e1vel reativa <code>movies</code> que armazena a lista de filmes. Al\u00e9m disso, criamos o m\u00e9todo <code>listMovies</code> que recebe o <code>id</code> do g\u00eanero como par\u00e2metro (chamado de <code>genreId</code>). Esse m\u00e9todo faz uma requisi\u00e7\u00e3o para a rota <code>discover/movie</code> da API do TMDB passando o <code>genreId</code> como par\u00e2metro. Em seguida, o m\u00e9todo atribui a lista de filmes retornada pela API \u00e0 vari\u00e1vel reativa <code>movies</code>. As demais partes do c\u00f3digo permanecem inalteradas. Agora, vamos alterar o bloco <code>template</code> do arquivo <code>MoviesView.vue</code>, adicionando o seguinte conte\u00fado, depois de fechar a tag <code>&lt;/ul&gt;</code>:</p> <pre><code>&lt;div class=\"movie-list\"&gt;\n  &lt;div v-for=\"movie in movies\" :key=\"movie.id\" class=\"movie-card\"&gt;\n    &lt;img\n      :src=\"`https://image.tmdb.org/t/p/w500${movie.poster_path}`\"\n      :alt=\"movie.title\"\n    /&gt;\n    &lt;div class=\"movie-details\"&gt;\n      &lt;p class=\"movie-title\"&gt;{{ movie.title }}&lt;/p&gt;\n      &lt;p class=\"movie-release-date\"&gt;{{ movie.release_date }}&lt;/p&gt;\n      &lt;p class=\"movie-genres\"&gt;{{ movie.genre_ids }}&lt;/p&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre> <p>Neste caso, criamos um elemento <code>div</code> com a classe <code>movie-list</code> que cont\u00e9m um elemento <code>div</code> para cada filme (comportamento garantido pelo <code>v-for</code>). Cada elemento <code>div</code> com a classe <code>movie-card</code> cont\u00e9m:</p> <ul> <li>uma imagem com o cartaz do filme,</li> <li>um elemento <code>div</code> com a classe <code>movie-details</code> que cont\u00e9m:</li> <li>o t\u00edtulo,</li> <li>a data de lan\u00e7amento e</li> <li>os g\u00eaneros do filme.     Note que utilizamos a interpola\u00e7\u00e3o para definir o valor do atributo <code>src</code> da imagem. Al\u00e9m disso, utilizamos a interpola\u00e7\u00e3o para definir o valor dos textos dos elementos <code>p</code> que cont\u00e9m o t\u00edtulo, a data de lan\u00e7amento e os g\u00eaneros do filme.</li> </ul> <p>Agora, vamos adicionar o seguinte estilo no bloco <code>style</code> do arquivo <code>MoviesView.vue</code>:</p> <pre><code>.movie-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n}\n\n.movie-card {\n  width: 15rem;\n  height: 30rem;\n  border-radius: 0.5rem;\n  overflow: hidden;\n  box-shadow: 0 0 0.5rem #000;\n}\n\n.movie-card img {\n  width: 100%;\n  height: 20rem;\n  border-radius: 0.5rem;\n  box-shadow: 0 0 0.5rem #000;\n}\n\n.movie-details {\n  padding: 0 0.5rem;\n}\n\n.movie-title {\n  font-size: 1.1rem;\n  font-weight: bold;\n  line-height: 1.3rem;\n  height: 3.2rem;\n}\n</code></pre> <p>Neste caso, definimos 5 regras de estilos CSS:</p> <ul> <li>para o elemento <code>div</code> com a classe <code>movie-list</code></li> <li>a propriedade <code>display</code> com o valor <code>flex</code>: define que o elemento deve ser exibido como um flex container.</li> <li>a propriedade <code>flex-wrap</code> com o valor <code>wrap</code>: define que os elementos devem ser exibidos em v\u00e1rias linhas.</li> <li>a propriedade <code>gap</code> com o valor <code>1rem</code>: define o espa\u00e7amento entre os elementos como 1 vez o tamanho da fonte.</li> <li>para o elemento <code>div</code> com a classe <code>movie-card</code></li> <li>a propriedade <code>width</code> com o valor <code>15rem</code>: define a largura do elemento como 15 vezes o tamanho da fonte.</li> <li>a propriedade <code>height</code> com o valor <code>30rem</code>: define a altura do elemento como 30 vezes o tamanho da fonte.</li> <li>a propriedade <code>border-radius</code> com o valor <code>0.5rem</code>: define o raio da borda como 0.5 vezes o tamanho da fonte.</li> <li>a propriedade <code>overflow</code> com o valor <code>hidden</code>: define que o conte\u00fado que ultrapassar o tamanho do elemento deve ser ocultado.</li> <li>a propriedade <code>box-shadow</code> com o valor <code>0 0 0.5rem #000</code>: define um sombreamento de 0.5 vezes o tamanho da fonte.</li> <li>para a imagem</li> <li>a propriedade <code>width</code> com o valor <code>100%</code>: define a largura da imagem como 100% do tamanho do elemento pai.</li> <li>a propriedade <code>height</code> com o valor <code>20rem</code>: define a altura da imagem como 20 vezes o tamanho da fonte.</li> <li>a propriedade <code>border-radius</code> com o valor <code>0.5rem</code>: define o raio da borda como 0.5 vezes o tamanho da fonte.</li> <li>a propriedade <code>box-shadow</code> com o valor <code>0 0 0.5rem #000</code>: define um sombreamento de 0.5 vezes o tamanho da fonte.</li> <li>para o elemento <code>div</code> com a classe <code>movie-details</code></li> <li>a propriedade <code>padding</code> com o valor <code>0 0.5rem</code>: define o espa\u00e7amento interno como 0 vezes o tamanho da fonte na vertical e 0.5 vezes o tamanho da fonte na horizontal.</li> <li>para o elemento <code>p</code> com a classe <code>movie-title</code></li> <li>a propriedade <code>font-size</code> com o valor <code>1.1rem</code>: define o tamanho da fonte como 1.1 vezes o tamanho da fonte.</li> <li>a propriedade <code>font-weight</code> com o valor <code>bold</code>: define o peso da fonte como negrito.</li> <li>a propriedade <code>line-height</code> com o valor <code>1.3rem</code>: define a altura da linha como 1.3 vezes o tamanho da fonte.</li> <li>a propriedade <code>height</code> com o valor <code>3.2rem</code>: define a altura do elemento como 3.2 vezes o tamanho da fonte.</li> </ul> <p>Por fim, faremos uma pequena altera\u00e7\u00e3o na defina\u00e7\u00e3o de estilo da classe <code>.genre-list</code> para adicionar uma margem inferior, como segue:</p> <pre><code>.genre-list {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 2rem;\n  list-style: none;\n  margin-bottom: 2rem;\n}\n</code></pre> <p>Note que nesse caso adicionamos a propriedade <code>margin-bottom</code> com o valor <code>2rem</code> para definir uma margem inferior de 2 vezes o tamanho da fonte.</p>"},{"location":"tmdb/#exercicios","title":"Exerc\u00edcios","text":"<p>Fazer a listagem de programas de TV ao clicar no g\u00eanero. Note que no caso dos programas de TV, a rota da API \u00e9 <code>discover/tv</code> e o par\u00e2metro para filtrar por g\u00eanero \u00e9 <code>with_genres</code>. Al\u00e9m disso, o nome do campo que cont\u00e9m o t\u00edtulo do programa de TV \u00e9 <code>name</code>, o nome original \u00e9 <code>original_name</code> e o nome do campo que cont\u00e9m a data de lan\u00e7amento \u00e9 <code>first_air_date</code>.</p>"},{"location":"tmdb/#visualizar-icone-de-carregando","title":"Visualizar \u00edcone de carregando","text":"<p>Para facilitar a visualiza\u00e7\u00e3o do \u00edcone de carregando, poder\u00edamos criar um componente para isso, com toda a l\u00f3gica necess\u00e1ria para exibir o \u00edcone de carregando, bem como os estilos de CSS. Contudo, vamos fazer de uma forma mais simples, usando um componente p\u00fablico j\u00e1 desenvolvido chamado <code>vue-loading-overlay</code>. Para isso, vamos instalar esse componente com o seguinte comando no terminal:</p> <pre><code>npm install vue-loading-overlay\n</code></pre> <p>Em seguida, vamos abrir o arquivo <code>main.js</code> e adicionar o seguinte conte\u00fado na primeira linha:</p> <pre><code>import 'vue-loading-overlay/dist/css/index.css';\n</code></pre> <p>O restante do arquivo permanece inalterado.</p> <p>Agora, vamos abrir o arquivo <code>MoviesView.vue</code> e adicionar o seguinte conte\u00fado no bloco <code>template</code>, depois da tag <code>&lt;/ul&gt;</code>:</p> <pre><code>&lt;loading v-model:active=\"isLoading\" is-full-page /&gt;\n</code></pre> <p>Neste caso, adicionamos o componente <code>loading</code> que recebe o valor da vari\u00e1vel <code>isLoading</code> como par\u00e2metro. Al\u00e9m disso, definimos que o componente deve ocupar toda a p\u00e1gina com o par\u00e2metro <code>is-full-page</code>. Agora, vamos adicionar o seguinte conte\u00fado no bloco <code>script</code>:</p> <pre><code>&lt;script setup&gt;\n  import Loading from 'vue-loading-overlay';\n\n  const isLoading = ref(false);\n&lt;/script&gt;\n</code></pre> <p>Note que importamos o componente <code>Loading</code> do pacote <code>vue-loading-overlay</code> e criamos uma vari\u00e1vel reativa <code>isLoading</code> que indica se o \u00edcone de carregando deve ser exibido ou n\u00e3o. Sugiro que voc\u00ea organize o c\u00f3digo de forma que os <code>import</code>s fiquem no in\u00edcio do bloco <code>script</code> e as vari\u00e1veis reativas fiquem na sequ\u00eancia, antes da defini\u00e7\u00e3o das demais fun\u00e7\u00f5es.</p> <p>Agora, vamos alterar o m\u00e9todo <code>listMovies</code> para que ele altere o valor da vari\u00e1vel <code>isLoading</code> antes e depois de fazer a requisi\u00e7\u00e3o para a API, como segue:</p> <pre><code>&lt;script setup&gt;\n...\nconst listMovies = async (genreId) =&gt; {\n  isLoading.value = true;\n  const response = await api.get('discover/movie', {\n    params: {\n      with_genres: genreId,\n      language: 'pt-BR'\n    }\n  });\n  movies.value = response.data.results\n  isLoading.value = false;\n};\n...\n</code></pre> <p>Note que apenas fizemos uma pequena altera\u00e7\u00e3o na fun\u00e7\u00e3o, adicionando a linha <code>isLoading.value = true;</code> antes da chamada \u00e0 API e a linha <code>isLoading.value = false;</code> depois da chamada \u00e0 API.</p>"},{"location":"tmdb/#mostrar-a-tag-de-generos","title":"Mostrar a tag de g\u00eaneros","text":"<p>Nos exemplos anteriores, foram exibidos apenas os <code>ids</code> dos g\u00eaneros na listagem de filmes (e programas de TV). Neste exemplo, vamos exibir a tag de cada g\u00eanero na listagem. Para isso, vamos alterar o m\u00e9todo <code>listMovies</code> para que ele substitua o <code>id</code> do g\u00eanero pelo nome do g\u00eanero.</p> <p>Inicialmente, vamos criar uma fun\u00e7\u00e3o que retorna o nome do g\u00eanero a partir do <code>id</code> do g\u00eanero. Para isso, vamos abrir o arquivo <code>MoviesView.vue</code> e adicionar o seguinte conte\u00fado no bloco <code>script</code>:</p> <pre><code>&lt;script setup&gt;\n\nconst getGenreName = (id) =&gt; genres.value.find((genre) =&gt; genre.id === id).name\n</code></pre> <p>Note que a fun\u00e7\u00e3o <code>getGenreName</code> recebe o <code>id</code> do g\u00eanero como par\u00e2metro e retorna o nome do g\u00eanero. Para isso, usamos a fun\u00e7\u00e3o <code>find</code> do JavaScript para encontrar o g\u00eanero com o <code>id</code> informado e retornar o nome do g\u00eanero.</p> <p>Esse c\u00f3digo poderia ser escrito de uma forma diferente, um pouco mais detalhada, como segue:</p> <pre><code>&lt;script setup&gt;\n\n  function getGenreName(id) {\n    const genero = genres.value.find((genre) =&gt; genre.id === id);\n    return genero.name;\n  }\n</code></pre> <p>Voc\u00ea pode escolher a forma que preferir. O importante \u00e9 entender o que est\u00e1 sendo feito e usar apenas uma das formas.</p> <p>Agora, vamos alterar a listagem de filmes para que ele substitua o <code>id</code> do g\u00eanero pelo nome do g\u00eanero. Para isso, vamos abrir o arquivo <code>MoviesView.vue</code> e alterar o seguinte conte\u00fado no bloco <code>template</code>:</p> <pre><code>&lt;p class=\"movie-genres\"&gt;\n  &lt;span\n    v-for=\"genre_id in movie.genre_ids\"\n    :key=\"genre_id\"\n    @click=\"listMovies(genre_id)\"\n  &gt;\n    {{ getGenreName(genre_id) }}\n  &lt;/span&gt;\n&lt;/p&gt;\n</code></pre> <p>Note que localizamos a tag <code>p</code> com a classe <code>movie-genres</code> e substitu\u00edmos o conte\u00fado <code>{{ movie.genre_ids }}</code> pela tag <code>span</code> acima. No caso do exemplo, a tag <code>span</code> \u00e9 criada para cada <code>id</code> de g\u00eanero do filme (comportamento garantido pelo <code>v-for</code>). Al\u00e9m disso, adicionamos um <code>listener</code> ao evento <code>click</code> da tag <code>span</code> que chama o m\u00e9todo <code>listMovies</code> passando o <code>id</code> do g\u00eanero como par\u00e2metro. Por fim, adicionamos o conte\u00fado <code>{{ getGenreById(genre_id) }}</code> que exibe o nome do g\u00eanero a partir do <code>id</code> do g\u00eanero.</p> <p>Por fim, vamos fazer uma estiliza\u00e7\u00e3o para a exibi\u00e7\u00e3o dos g\u00eaneros. Para tal, vamos editar o bloco <code>style</code> do arquivo <code>MoviesView.vue</code> e adicionar o seguinte conte\u00fado:</p> <pre><code>.movie-genres {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  justify-content: center;\n  gap: 0.2rem;\n}\n\n.movie-genres span {\n  background-color: #748708;\n  border-radius: 0.5rem;\n  padding: 0.2rem 0.5rem;\n  color: #fff;\n  font-size: 0.8rem;\n  font-weight: bold;\n}\n\n.movie-genres span:hover {\n  cursor: pointer;\n  background-color: #455a08;\n  box-shadow: 0 0 0.5rem #748708;\n}\n</code></pre> <p>Note que a classe <code>.movie-genres</code> j\u00e1 existia no bloco <code>style</code> do arquivo <code>MoviesView.vue</code>. Neste caso, apenas alteramos o valor do atributo <code>display</code> para <code>flex</code> e adicionamos os demais atributos para que os g\u00eaneros sejam exibidos em uma \u00fanica linha, com um pequeno espa\u00e7amento entre eles.</p>"},{"location":"tmdb/#formatando-a-data-para-o-padrao-brasileiro","title":"Formatando a data para o padr\u00e3o brasileiro","text":"<p>Neste exemplo, vamos alterar a forma como a data de lan\u00e7amento dos filmes \u00e9 exibida. Para isso, vamos abrir o arquivo <code>MoviesView.vue</code> e alterar o seguinte conte\u00fado no bloco <code>template</code>:</p> <pre><code>&lt;p class=\"movie-release-date\"&gt;{{ formatDate(movie.release_date) }}&lt;/p&gt;\n</code></pre> <p>Note que localizamos a tag <code>p</code> com a classe <code>.movie-release-date</code> e substitu\u00edmos o conte\u00fado <code>{{ movie.release_date }}</code> pelo conte\u00fado <code>{{ formatDate(movie.release_date) }}</code>. Al\u00e9m disso, vamos adicionar o seguinte conte\u00fado no bloco <code>script</code>:</p> <pre><code>const formatDate = (date) =&gt; new Date(date).toLocaleDateString('pt-BR');\n</code></pre> <p>Note que criamos uma fun\u00e7\u00e3o <code>formatDate</code> que recebe a data de lan\u00e7amento como par\u00e2metro e retorna a data formatada para o padr\u00e3o brasileiro. Para isso, usamos a fun\u00e7\u00e3o <code>toLocaleDateString</code> do JavaScript para formatar a data para o padr\u00e3o brasileiro. Sugiro colocar a fun\u00e7\u00e3o <code>formatDate</code> logo ap\u00f3s a fun\u00e7\u00e3o <code>getGenreName</code>.</p>"},{"location":"tmdb/#gerenciamento-de-estados","title":"Gerenciamento de estados","text":"<p>Nas aplica\u00e7\u00f5es web, \u00e9 comum que tenhamos que lidar com estados. Por exemplo, em uma aplica\u00e7\u00e3o de cadastro de clientes, podemos ter um estado que indica se o cliente est\u00e1 sendo editado ou n\u00e3o. Em uma aplica\u00e7\u00e3o de carrinho de compras, podemos ter um estado que indica se o carrinho est\u00e1 vazio ou n\u00e3o. Em uma aplica\u00e7\u00e3o de listagem de filmes, podemos ter um estado que indica se os filmes est\u00e3o sendo carregados ou n\u00e3o, ou mesmo armazenar os filmes ou g\u00eaneros que foram carregados.</p> <p>No VueJS, podemos usar a API de reatividade para gerenciar estados. Contudo, essa abordagem pode se tornar complexa conforme a aplica\u00e7\u00e3o cresce. Para facilitar o gerenciamento de estados, podemos usar uma biblioteca chamada Pinia, como j\u00e1 estudamos anteriormente.</p>"},{"location":"tmdb/#instalacao","title":"Instala\u00e7\u00e3o","text":"<p>Para instalar o Pinia, vamos abrir o terminal e executar o seguinte comando:</p> <pre><code>npm install pinia\n</code></pre>"},{"location":"tmdb/#configuracao-da-aplicacao-para-suportar-o-pinia","title":"Configura\u00e7\u00e3o da aplica\u00e7\u00e3o para suportar o Pinia","text":"<p>Vamos editar o arquivo <code>src/main.js</code> e adicionar o seguinte c\u00f3digo:</p> <pre><code>import 'vue-loading-overlay/dist/css/index.css';\nimport './assets/main.css';\n\nimport { createApp } from 'vue';\nimport { createPinia } from 'pinia';\nimport App from './App.vue';\nimport router from './router';\nconst app = createApp(App);\napp.use(router);\napp.use(createPinia());\n\napp.mount('#app');\n</code></pre> <p>Note que, comparado com o arquivo <code>src/main.js</code> anterior, adicionamos apenas a importa\u00e7\u00e3o do <code>createPinia</code> e a chamada do m\u00e9todo <code>app.use(createPinia())</code>. O m\u00e9todo <code>createPinia</code> cria uma inst\u00e2ncia do Pinia e a torna dispon\u00edvel para todos os componentes da aplica\u00e7\u00e3o.</p>"},{"location":"tmdb/#criando-uma-store","title":"Criando uma store","text":"<p>Podemos dividir o processo de cria\u00e7\u00e3o de uma store em tr\u00eas etapas:</p> <ol> <li>Criar a store usando o m\u00e9todo <code>defineStore</code></li> <li>Criar as vari\u00e1veis reativas e fun\u00e7\u00f5es que alteram essas vari\u00e1veis</li> <li>Retornar as vari\u00e1veis e fun\u00e7\u00f5es que ser\u00e3o usadas pelos componentes</li> </ol> <p>Para criar uma store, vamos criar um arquivo chamado <code>src/stores/genre.js</code> e adicionar o seguinte c\u00f3digo:</p> <pre><code>import { reactive, computed } from 'vue';\nimport { defineStore } from 'pinia';\nimport api from '@/plugins/axios';\n\nexport const useGenreStore = defineStore('genre', () =&gt; {\n  const state = reactive({\n    genres: [],\n  });\n\n  const genres = computed(() =&gt; state.genres);\n  const getGenreName = (id) =&gt;\n    state.genres.find((genre) =&gt; genre.id === id).name;\n\n  const getAllGenres = async (type) =&gt; {\n    const response = await api.get(`genre/${type}/list?language=pt-BR`);\n    state.genres = response.data.genres;\n  };\n\n  return { genres, getAllGenres, getGenreName };\n});\n</code></pre> <p>Note que, para criar a store, usamos o m\u00e9todo <code>defineStore</code> que recebe dois par\u00e2metros: o nome da store e uma fun\u00e7\u00e3o que retorna um objeto com as vari\u00e1veis reativas e fun\u00e7\u00f5es que alteram essas vari\u00e1veis.</p> <p>No nosso exemplo, criamos uma store chamada <code>genre</code> que possui uma vari\u00e1vel reativa chamada <code>genres</code> e tr\u00eas fun\u00e7\u00f5es: <code>getAllGenres</code>, <code>getGenreName</code> e <code>getGenreName</code>. A fun\u00e7\u00e3o <code>getAllGenres</code> faz uma requisi\u00e7\u00e3o HTTP para a API do TMDB e armazena os g\u00eaneros na vari\u00e1vel reativa <code>genres</code>. Esta fun\u00e7\u00e3o recebe um par\u00e2metro chamado <code>type</code> que indica se a listagem de g\u00eaneros ser\u00e1 feita com base nos filmes ou nas s\u00e9ries. A fun\u00e7\u00e3o <code>getGenreName</code> recebe o id de um g\u00eanero e retorna o nome desse g\u00eanero.</p> <p>Note tamb\u00e9m que a fun\u00e7\u00e3o <code>defineStore</code> retorna um objeto com a propriedade computada <code>genres</code> e as fun\u00e7\u00f5es <code>getAllGenres</code> e <code>getGenreName</code>. No exemplo n\u00e3o retornamos o objeto reativo <code>state</code> porque n\u00e3o queremos que ele seja acessado diretamente pelos componentes. Para acessar cada um dos elementos do objeto <code>state</code>, vamos usar os getters <code>genres</code> e <code>getGenreName</code>. Da mesma forma, para alterar o estado da aplica\u00e7\u00e3o, vamos usar a action <code>getAllGenres</code>.</p> <p>Por fim, exportamos a store usando o m\u00e9todo <code>useGenreStore</code>. Esse m\u00e9todo \u00e9 necess\u00e1rio para que o Pinia possa criar uma inst\u00e2ncia da store e torn\u00e1-la dispon\u00edvel para os componentes da aplica\u00e7\u00e3o.</p>"},{"location":"tmdb/#usando-a-store","title":"Usando a store","text":"<p>Para usar a store, vamos editar o arquivo <code>src/views/MoviesView.vue</code>. Inicialmente vamos editar o bloco <code>script</code> e adicionar o seguinte c\u00f3digo:</p> <pre><code>import { useGenreStore } from '@/stores/genre';\n\nconst genreStore = useGenreStore();\n</code></pre> <p>Note que importamos a store usando o m\u00e9todo <code>useGenreStore</code> que criamos anteriormente. No mesmo bloco <code>script</code> vamos alterar o m\u00e9todo <code>onMounted</code> para que ele chame a fun\u00e7\u00e3o <code>getAllGenres</code> da store:</p> <pre><code>onMounted(async () =&gt; {\n  isLoading.value = true;\n  await genreStore.getAllGenres('movie');\n  isLoading.value = false;\n});\n</code></pre> <p>No exemplo, ao invocar a fun\u00e7\u00e3o <code>getAllGenres</code>, passamos o par\u00e2metro <code>'movie'</code> para que a listagem de g\u00eaneros seja feita com base nos filmes.</p> <p>Por fim, vamos alterar o bloco <code>template</code> para que ele use a store:</p> <pre><code>&lt;li\n  v-for=\"genre in genreStore.genres\"\n  :key=\"genre.id\"\n  @click=\"listMovies(genre.id)\"\n  class=\"genre-item\"\n&gt;\n  {{ genre.name }}\n&lt;/li&gt;\n</code></pre> <p>No exemplo, alteramos apenas a listagem de g\u00eaneros, visto que foi o \u00fanico elemento que usamos da store, e esta \u00e9 a \u00fanica store que criamos at\u00e9 o momento. Note que, para acessar a vari\u00e1vel reativa <code>genres</code> da store, usamos o getter <code>genres</code>.</p> <p>Ainda, vamos fazer mais uma altera\u00e7\u00e3o no bloco <code>template</code>, para buscar o nome do g\u00eanero com base no <code>id</code> do g\u00eanero:</p> <pre><code>&lt;span\n  v-for=\"genre_id in movie.genre_ids\"\n  :key=\"genre_id\"\n  @click=\"listMovies(genre_id)\"\n&gt;\n  {{ genreStore.getGenreName(genre_id) }}\n&lt;/span&gt;\n</code></pre> <p>Nesse exemplo, usamos a fun\u00e7\u00e3o <code>getGenreName</code> para buscar o nome do g\u00eanero com base no <code>id</code> do g\u00eanero. Essa fun\u00e7\u00e3o recebe o <code>id</code> do g\u00eanero e retorna o nome do g\u00eanero e est\u00e1 implementada na store <code>genre</code>.</p>"},{"location":"tmdb/#exercicios_1","title":"Exerc\u00edcios","text":"<ol> <li>Fazer as altera\u00e7\u00f5es necess\u00e1rias em <code>TvView.vue</code> para que a listagem de g\u00eaneros seja feita usando a store <code>genre</code>. Note que ao chamar a fun\u00e7\u00e3o <code>getAllGenres</code> da store <code>genre</code>, \u00e9 necess\u00e1rio passar o par\u00e2metro <code>'tv'</code> para que a listagem de g\u00eaneros seja feita com base nos filmes.</li> </ol>"},{"location":"tmdb/#enfatizando-o-genero-atual","title":"Enfatizando o g\u00eanero atual","text":"<p>Nessa se\u00e7\u00e3o, vamos aprender a enfatizar o g\u00eanero atual selecionado. Para isso, vamos usar o <code>store</code> de g\u00eaneros que criamos anteriormente e vamos adicionar uma classe CSS para enfatizar o g\u00eanero atual.</p>"},{"location":"tmdb/#alterando-o-store-de-generos","title":"Alterando o store de g\u00eaneros","text":"<p>Para poder enfatizar o g\u00eanero atual que est\u00e1 selecionado, vamos inicialmente editar o <code>store</code> que manipula os dados de g\u00eanero, no arquivo <code>@/store/genre.js</code>. Para isso, vamos adicionar uma nova propriedade chamada <code>currentGenre</code> que vai armazenar o g\u00eanero atual selecionado e as fun\u00e7\u00f5es para manipular essa propriedade.</p> <p>Inicialmente, vamos substituir a defini\u00e7\u00e3o de estado pela seguinte:</p> <pre><code>const state = reactive({\n  genres: [],\n  currentGenreId: null,\n});\n</code></pre> <p>Note que agora temos uma propriedade chamada <code>currentGenreId</code> que vai armazenar o <code>id</code> do g\u00eanero atual selecionado. Em seguida, vamos adicionar o seguinte <code>getter</code> para ler o valor dessa propriedade:</p> <pre><code>const currentGenreId = computed(() =&gt; state.currentGenreId);\n</code></pre> <p>Nesse caso, estamos usando um <code>getter</code> computado, pois queremos que o valor seja atualizado automaticamente quando a propriedade <code>currentGenreId</code> for alterada. Por fim, faremos uma <code>action</code> para alterar o valor dessa propriedade:</p> <pre><code>const setCurrentGenreId = (genreId) =&gt; {\n  state.currentGenreId = genreId;\n};\n</code></pre> <p>Nesse exemplo, estamos usando uma fun\u00e7\u00e3o para alterar o valor da propriedade <code>currentGenreId</code> para o valor passado como par\u00e2metro. Agora, basta substituir o retorno da fun\u00e7\u00e3o <code>defineStore</code> pelo seguinte:</p> <pre><code>return {\n  genres,\n  getAllGenres,\n  getGenreName,\n  currentGenreId,\n  setCurrentGenreId,\n};\n</code></pre> <p>Note que estamos retornando a propriedade computada <code>currentGenreId</code> e a fun\u00e7\u00e3o <code>setCurrentGenreId</code>.</p>"},{"location":"tmdb/#alterando-o-componente-moviesviewvue","title":"Alterando o componente MoviesView.vue","text":"<p>Inicialmente, vamos alterar a fun\u00e7\u00e3o <code>listMovies</code> para que ela altere o valor da propriedade <code>currentGenreId</code> da <code>store</code> de g\u00eaneros. Para isso, vamos adicionar o seguinte c\u00f3digo no bloco <code>script</code>:</p> <pre><code>const listMovies = async (genreId) =&gt; {\n  genreStore.setCurrentGenreId(genreId);\n  isLoading.value = true;\n  const response = await api.get('discover/movie', {\n    params: {\n      with_genres: genreId,\n      language: 'pt-BR',\n    },\n  });\n  movies.value = response.data.results;\n  isLoading.value = false;\n};\n</code></pre> <p>Note que, antes de fazer a requisi\u00e7\u00e3o para a API, chamamos a fun\u00e7\u00e3o <code>setCurrentGenreId</code> da <code>store</code> de g\u00eaneros passando o <code>id</code> do g\u00eanero selecionado como par\u00e2metro. Em seguida, mantemos o restante do c\u00f3digo inalterado.</p> <p>Agora, vamos alterar o bloco <code>template</code> para que ele use a propriedade <code>currentGenreId</code> da <code>store</code> de g\u00eaneros. Para isso, vamos alterar os seguintes c\u00f3digos no bloco <code>template</code>:</p> <pre><code>  &lt;li\n    v-for=\"genre in genreStore.genres\"\n    :key=\"genre.id\"\n    @click=\"listMovies(genre.id)\n    class=\"genre-item\"\n    :class=\"{ active: genre.id === genreStore.currentGenreId }\"\n  &gt;\n    {{ genre.name }}\n  &lt;/li&gt;\n</code></pre> <p>e tamb\u00e9m</p> <pre><code>&lt;span\n  v-for=\"genre_id in movie.genre_ids\"\n  :key=\"genre_id\"\n  @click=\"listMovies(genre_id)\"\n  :class=\"{ active: genre_id === genreStore.currentGenreId }\"\n&gt;\n  {{ genreStore.getGenreName(genre_id) }}\n&lt;/span&gt;\n</code></pre> <p>Por fim, vamos adicionar a seguinte classe CSS no bloco <code>style</code>:</p> <pre><code>.active {\n  background-color: #67b086;\n  font-weight: bolder;\n}\n\n.movie-genres span.active {\n  background-color: #abc322;\n  color: #000;\n  font-weight: bolder;\n}\n</code></pre>"},{"location":"tmdb/#mostrando-detalhes-do-filme","title":"Mostrando detalhes do filme","text":"<p>Vamos agora, possibilitar a exibi\u00e7\u00e3o de detalhes de um filme ao clicar em um cart\u00e3o de filme.</p>"},{"location":"tmdb/#criando-um-store","title":"Criando um store","text":"<p>Vamos criar um arquivo chamado <code>src/stores/movie.js</code> e adicionar o seguinte c\u00f3digo:</p> <pre><code>import { reactive, computed } from 'vue';\nimport { defineStore } from 'pinia';\nimport api from '@/plugins/axios';\n\nexport const useMovieStore = defineStore('movie', () =&gt; {\n  const state = reactive({\n    currentMovie: {},\n  });\n\n  const currentMovie = computed(() =&gt; state.currentMovie);\n\n  const getMovieDetail = async (movieId) =&gt; {\n    const response = await api.get(`movie/${movieId}`);\n    state.currentMovie = response.data;\n  };\n\n  return { currentMovie, getMovieDetail };\n});\n</code></pre> <p>Note que estamos criando uma store chamada <code>movie</code> e estamos retornando a propriedade computada <code>currentMovie</code> e a fun\u00e7\u00e3o <code>getMovieDetail</code>. A propriedade <code>currentMovie</code> vai armazenar o filme atual selecionado e a fun\u00e7\u00e3o <code>getMovieDetail</code> vai buscar os detalhes do filme na API e armazenar na propriedade <code>currentMovie</code>.</p> <p>Tamb\u00e9m, existe uma integra\u00e7\u00e3o com a <code>store</code> de template para que seja poss\u00edvel mostrar o \u00edcone de carregando enquanto os detalhes do filme s\u00e3o buscados na API.</p>"},{"location":"tmdb/#alterando-o-componente-moviesviewvue_1","title":"Alterando o componente MoviesView.vue","text":"<p>Vamos aquivo editar o arquivo <code>src/views/MoviesView.vue</code>, procurar para tag <code>img</code> com a capa do filme e adicionar um listener para o evento <code>click</code> que vai chamar a fun\u00e7\u00e3o <code>showMovieDetails</code> passando o <code>id</code> do filme como par\u00e2metro. O c\u00f3digo deve ficar assim:</p> <pre><code>&lt;img\n  :src=\"`https://image.tmdb.org/t/p/w500${movie.poster_path}`\"\n  :alt=\"movie.title\"\n  @click=\"openMovie(movie.id)\"\n/&gt;\n</code></pre> <p>Agora, vamos editar o bloco <code>script</code> e adicionar o seguinte c\u00f3digo:</p> <pre><code>import { useRouter } from 'vue-router'\nconst router = useRouter()\n\n...\n\nfunction openMovie(movieId) {\n  router.push({ name: 'MovieDetails', params: { movieId } });\n}\n</code></pre> <p>Note que estamos importando o hook <code>useRouter</code> do <code>vue-router</code> e estamos criando uma fun\u00e7\u00e3o chamada <code>openMovie</code> que recebe o <code>id</code> do filme como par\u00e2metro. Essa fun\u00e7\u00e3o vai redirecionar o usu\u00e1rio para a rota <code>MovieDetails</code> passando o <code>id</code> do filme como par\u00e2metro.</p>"},{"location":"tmdb/#criando-o-componente-moviedetailsviewvue","title":"Criando o componente MovieDetailsView.vue","text":"<p>Vamos criar um novo componente chamado <code>MovieDetailsView.vue</code>, na pasta <code>src/views/</code> e vamos adicionar o seguinte c\u00f3digo:</p> <pre><code>&lt;script setup&gt;\n  import { defineProps, onMounted } from 'vue';\n  import { useMovieStore } from '@/stores/movie';\n  const movieStore = useMovieStore();\n\n  const props = defineProps({\n    movieId: {\n      type: Number,\n      required: true,\n    },\n  });\n\n  onMounted(async () =&gt; {\n    await movieStore.getMovieDetail(props.movieId);\n  });\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div class=\"main\"&gt;\n    &lt;div class=\"content\"&gt;\n      &lt;img\n        :src=\"`https://image.tmdb.org/t/p/w185${movieStore.currentMovie.poster_path}`\"\n        :alt=\"movieStore.currentMovie.title\"\n      /&gt;\n\n      &lt;div class=\"details\"&gt;\n        &lt;h1&gt;Filme: {{ movieStore.currentMovie.title }}&lt;/h1&gt;\n        &lt;p&gt;{{ movieStore.currentMovie.tagline }}&lt;/p&gt;\n        &lt;p&gt;{{ movieStore.currentMovie.overview }}&lt;/p&gt;\n        &lt;p&gt;Or\u00e7amento: ${{ movieStore.currentMovie.budget }}&lt;/p&gt;\n        &lt;p&gt;Avalia\u00e7\u00e3o: {{ movieStore.currentMovie.vote_average }}&lt;/p&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n\n  &lt;p&gt;Produtoras&lt;/p&gt;\n  &lt;div class=\"companies\"&gt;\n    &lt;template\n      v-for=\"company in movieStore.currentMovie.production_companies\"\n      :key=\"company.id\"\n    &gt;\n      &lt;img\n        v-if=\"company.logo_path\"\n        :src=\"`https://image.tmdb.org/t/p/w92${company.logo_path}`\"\n        :alt=\"company.name\"\n      /&gt;\n      &lt;p v-else&gt;{{ company.name }}&lt;/p&gt;\n    &lt;/template&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n  .companies {\n    display: flex;\n    flex-direction: row;\n    column-gap: 3rem;\n    align-items: center;\n    margin-bottom: 2rem;\n  }\n&lt;/style&gt;\n</code></pre> <p>Esse c\u00f3digo \u00e9 um pouco mais complexo, mas n\u00e3o se preocupe, vamos explicar cada parte dele.</p> <p>Inicialmente, importamos o hook <code>useMovieStore</code> da store <code>movie</code> e criamos uma vari\u00e1vel reativa chamada <code>movieStore</code> que vai armazenar a inst\u00e2ncia da store <code>movie</code>.</p> <p>Em seguida, criamos uma propriedade chamada <code>movieId</code> que vai receber o <code>id</code> do filme como par\u00e2metro. Essa propriedade \u00e9 obrigat\u00f3ria e deve ser do tipo <code>Number</code>.</p> <p>Tamb\u00e9m, criamos um hook <code>onMounted</code> que vai chamar a fun\u00e7\u00e3o <code>getMovieDetail</code> da store <code>movie</code> passando o <code>id</code> do filme como par\u00e2metro. Essa fun\u00e7\u00e3o vai buscar os detalhes do filme na API e armazenar na propriedade <code>currentMovie</code> da store <code>movie</code>.</p> <p>Por fim, no bloco <code>template</code>, usamos a propriedade computada <code>currentMovie</code> da store <code>movie</code> para mostrar os detalhes do filme. Note que, para acessar a propriedade computada <code>currentMovie</code> da store <code>movie</code>, usamos a vari\u00e1vel reativa <code>movieStore</code>.</p> <p>Nesse exemplo, n\u00e3o foram realizadas muitas estiliza\u00e7\u00f5es em CSS, mas voc\u00ea pode fazer isso se quiser.</p>"},{"location":"tmdb/#alterando-as-rotas","title":"Alterando as rotas","text":"<p>Vamos editar o arquivo <code>src/router/index.js</code> e adicionar a seguinte rota:</p> <pre><code>{\n  path: '/movie/:movieId',\n  name: 'MovieDetails',\n  component: () =&gt; import('../views/MovieDetailsView.vue'),\n  props: true,\n},\n</code></pre>"},{"location":"tmdb/tmdb-adicionar-vue-router/","title":"Tmdb adicionar vue router","text":""},{"location":"tmdb/tmdb-adicionar-vue-router/#adicionar-o-vue-router","title":"Adicionar o Vue-router","text":"<p>Nesta etapa, vamos adicionar o Vue-router ao projeto. Para isso, vamos executar o seguinte comando no terminal:</p> <pre><code>npm install vue-router\n</code></pre> <p>Em seguida, vamos criar o arquivo <code>src/router/index.js</code> com o seguinte conte\u00fado:</p> <pre><code>import { createRouter, createWebHistory } from 'vue-router';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: () =&gt; import('../views/Home.vue'),\n  },\n  {\n    path: '/filmes',\n    name: 'Movies',\n    component: () =&gt; import('../views/MoviesView.vue'),\n  },\n  {\n    path: '/tv',\n    name: 'TV',\n    component: () =&gt; import('../views/TvView.vue'),\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nexport default router;\n</code></pre> <p>No exemplo acima, estamos criando um roteador com tr\u00eas rotas:</p> <ul> <li><code>/</code>: rota para a p\u00e1gina inicial</li> <li><code>/filmes</code>: rota para a p\u00e1gina de filmes</li> <li><code>/tv</code>: rota para a p\u00e1gina de programas de TV</li> </ul> <p>No arquivo <code>src/main.js</code>, vamos importar o Vue-router e adicionar o router ao projeto. Para substitua o conte\u00fado do arquivo pelo seguinte:</p> <pre><code>import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\n\nconst app = createApp(App);\napp.use(router);\n\napp.mount('#app');\n</code></pre> <p>Nesse caso, estamos adicionando o suporte ao Vue-router ao projeto e, em seguida, montando o aplicativo.</p>"},{"location":"tmdb/tmdb-adicionar-vue-router/#criando-a-pagina-home","title":"Criando a p\u00e1gina Home","text":"<p>Nesta etapa, vamos criar a p\u00e1gina Home. Para isso, vamos criar o arquivo <code>src/views/Home.vue</code> com o seguinte conte\u00fado:</p> <pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;Home&lt;/h1&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre> <p>Nesse caso \u00e9 apenas uma p\u00e1gina com o t\u00edtulo \"Home\", que ser\u00e1 aprimorara ao longo do tutorial.</p>"},{"location":"tmdb/tmdb-adicionar-vue-router/#separando-a-listagem-de-generos-em-duas-views","title":"Separando a listagem de g\u00eaneros em duas views","text":"<p>Nesta etapa, vamos separar a listagem de g\u00eaneros em duas views: uma para filmes e outra para programas de TV.</p>"},{"location":"tmdb/tmdb-adicionar-vue-router/#criando-a-pagina-para-generos-de-filmes","title":"Criando a p\u00e1gina para g\u00eaneros de filmes","text":"<p>Para criar a p\u00e1gina para g\u00eaneros de filmes, vamos criar o arquivo <code>src/views/MoviesView.vue</code> com o seguinte conte\u00fado:</p> <pre><code>&lt;script setup&gt;\n  import { ref, onMounted } from 'vue';\n  import api from '@/plugins/axios';\n\n  const genres = ref([]);\n\n  onMounted(async () =&gt; {\n    const response = await api.get('genre/movie/list?language=pt-BR');\n    genres.value = response.data.genres;\n  });\n&lt;/script&gt;\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;G\u00eaneros de filmes&lt;/h1&gt;\n    &lt;ul&gt;\n      &lt;li v-for=\"genre in genres\" :key=\"genre.id\"&gt;{{ genre.name }}&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre> <p>Note que estamos utilizando o <code>axios</code> como um plugin, conforme apresentado em aulas anteriores. Tamb\u00e9m aproveitamos a mesma parte de c\u00f3digo que j\u00e1 tinha sido anteriormente desenvolvida.</p>"},{"location":"tmdb/tmdb-adicionar-vue-router/#criando-a-pagina-para-generos-de-programas-de-tv","title":"Criando a p\u00e1gina para g\u00eaneros de programas de TV","text":"<p>Para criar a p\u00e1gina para g\u00eaneros de programas de TV, vamos criar o arquivo <code>src/views/TvView.vue</code> com o seguinte conte\u00fado:</p> <pre><code>&lt;script setup&gt;\n  import { ref, onMounted } from 'vue';\n  import api from '@/plugins/axios';\n\n  const genres = ref([]);\n\n  onMounted(async () =&gt; {\n    const response = await api.get('genre/tv/list?language=pt-BR');\n    genres.value = response.data.genres;\n  });\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;G\u00eaneros de programas de TV&lt;/h1&gt;\n    &lt;ul&gt;\n      &lt;li v-for=\"genre in genres\" :key=\"genre.id\"&gt;{{ genre.name }}&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre> <p>Note que o exemplo \u00e9 muito semelhante ao anterior, com a diferen\u00e7a de que estamos buscando os g\u00eaneros de programas de TV.</p>"},{"location":"tmdb/tmdb-adicionar-vue-router/#adicionando-o-menu-de-navegacao","title":"Adicionando o menu de navega\u00e7\u00e3o","text":"<p>Nesta etapa, vamos adicionar o menu de navega\u00e7\u00e3o. Para isso, vamos alterar o arquivo <code>src/App.vue</code> para o seguinte conte\u00fado:</p> <pre><code>&lt;script setup&gt;&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;nav&gt;\n      &lt;router-link to=\"/\"&gt;Home&lt;/router-link&gt;\n      &lt;router-link to=\"/filmes\"&gt;Filmes&lt;/router-link&gt;\n      &lt;router-link to=\"/tv\"&gt;Programas de TV&lt;/router-link&gt;\n    &lt;/nav&gt;\n    &lt;router-view /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n  nav {\n    display: flex;\n    justify-content: flex-start;\n    margin-bottom: 1rem;\n    column-gap: 2rem;\n  }\n&lt;/style&gt;\n</code></pre> <p>Note que estamos utilizando o componente <code>RouterLink</code> para criar os links de navega\u00e7\u00e3o. Tamb\u00e9m estamos utilizando o componente <code>RouterView</code> para indicar onde o conte\u00fado da p\u00e1gina ser\u00e1 exibido. Ainda, fizemos uma pequena estiliza\u00e7\u00e3o para o menu de navega\u00e7\u00e3o, para que os links fiquem alinhados \u00e0 esquerda e com um espa\u00e7amento entre eles. Note que usamos o atributo <code>scoped</code> para que o estilo seja aplicado apenas ao componente atual.</p>"},{"location":"tmdb/tmdb-ajustes-estilos/","title":"Tmdb ajustes estilos","text":""},{"location":"tmdb/tmdb-ajustes-estilos/#ajustes-de-estilos-css","title":"Ajustes de estilos CSS","text":"<p>Para criar um arquivo de estilos, vamos criar um arquivo <code>src/assets/main.css</code> com o seguinte conte\u00fado:</p> <pre><code>*,\n*::before,\n*::after {\n  box-sizing: border-box;\n  margin: 0;\n}\n\nbody {\n  min-height: 100vh;\n  line-height: 1.6;\n  font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n    Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n  font-size: 15px;\n  text-rendering: optimizeLegibility;\n}\n</code></pre> <p>Vamos detalhar o que est\u00e1 sendo feito no arquivo acima:</p> <ul> <li>A primeira regra CSS define que todos os elementos, incluindo os pseudo-elementos <code>::before</code> e <code>::after</code>, devem ter:</li> <li>a propriedade <code>box-sizing</code> com o valor <code>border-box</code>: define que o tamanho de um elemento deve considerar o tamanho do conte\u00fado, o padding e a borda.</li> <li>a propriedade <code>margin</code> com o valor <code>0</code>.</li> <li>A segunda regra CSS define que o elemento <code>body</code> deve ter:</li> <li>a propriedade <code>min-height</code> com o valor <code>100vh</code>: define que a altura m\u00ednima do elemento deve ser 100% da altura da tela.</li> <li>a propriedade <code>line-height</code> com o valor <code>1.6</code>: define o espa\u00e7amento entre linhas.</li> <li>a propriedade <code>font-family</code> com uma lista de fontes: define a lista de fontes a serem utilizadas.</li> <li>a propriedade <code>font-size</code> com o valor <code>15px</code>: define o tamanho da fonte.</li> <li>a propriedade <code>text-rendering</code> com o valor <code>optimizeLegibility</code>: define que o texto deve ser renderizado de forma a melhorar a legibilidade.</li> </ul> <p>Vamos alterar agora o arquivo <code>main.js</code> para importar o arquivo <code>main.css</code>:</p> <pre><code>import './assets/main.css';\nimport { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\n\nconst app = createApp(App);\napp.use(router);\n\napp.mount('#app');\n</code></pre> <p>Note que apenas importamos o arquivo <code>main.css</code> que ser\u00e1 inclu\u00eddo no arquivo <code>index.html</code> automaticamente. Esta foi a \u00fanica linha alterada no arquivo <code>main.js</code>. Al\u00e9m disso, as regras CSS definidas no arquivo <code>main.css</code> ser\u00e3o aplicadas a todos os elementos da aplica\u00e7\u00e3o.</p>"},{"location":"tmdb/tmdb-ajustes-estilos/#adicionando-um-estilo-no-appvue","title":"Adicionando um estilo no App.vue","text":"<p>Vamos adicionar um estilo no componente <code>App.vue</code> para inserir um pequeno cabe\u00e7alho. Para isso, vamos primeiramente alterar o bloco <code>template</code> do arquivo <code>App.vue</code>, para o seguinte conte\u00fado:</p> <pre><code>&lt;template&gt;\n  &lt;header&gt;\n    &lt;nav&gt;\n      &lt;router-link to=\"/\"&gt;Home&lt;/router-link&gt;\n      &lt;router-link to=\"/filmes\"&gt;Filmes&lt;/router-link&gt;\n      &lt;router-link to=\"/tv\"&gt;Programas de TV&lt;/router-link&gt;\n    &lt;/nav&gt;\n  &lt;/header&gt;\n  &lt;main&gt;\n    &lt;router-view /&gt;\n  &lt;/main&gt;\n&lt;/template&gt;\n</code></pre> <p>Note que adicionamos um cabe\u00e7alho com o menu de navega\u00e7\u00e3o que j\u00e1 estava presente no arquivo <code>App.vue</code> e movemos o bloco <code>router-view</code> para dentro do elemento <code>main</code>.</p> <p>Em seguida, vamos adicionar o seguinte estilo no bloco <code>style</code> do arquivo <code>App.vue</code>:</p> <pre><code>&lt;style scoped&gt;\nheader {\n  height: 3rem;\n  display: flex;\n  background-color: black;\n  color: #fff;\n  font-size: 1.2rem;\n  padding-left: 2rem;\n}\n\nnav {\n  column-gap: 2rem;\n  margin-bottom: 0;\n  display: flex;\n  align-items: center;\n}\n\nnav a {\n  text-decoration: none;\n  color: #fff;\n}\n&lt;/style&gt;\n</code></pre> <p>Nesse caso, criamos tr\u00eas regras CSS:</p> <ul> <li>para a tag header</li> <li>a propriedade <code>height</code> com o valor <code>3rem</code>: define a altura do elemento como 3 vezes o tamanho da fonte.</li> <li>a propriedade <code>display</code> com o valor <code>flex</code>: define que o elemento deve ser exibido como um flex container.</li> <li>a propriedade <code>background-color</code> com o valor <code>black</code>: define a cor de fundo do elemento como preto.</li> <li>a propriedade <code>color</code> com o valor <code>#fff</code>: define a cor do texto como branco.</li> <li>a propriedade <code>font-size</code> com o valor <code>1.2rem</code>: define o tamanho da fonte como 1.2 vezes o tamanho da fonte, que foi sido definido no arquivo <code>main.css</code>.</li> <li>a propriedade <code>padding-left</code> com o valor <code>2rem</code>: define o espa\u00e7amento interno esquerdo como 2 vezes o tamanho da fonte.</li> <li>para a tag nav</li> <li>a propriedade <code>column-gap</code> com o valor <code>2rem</code>: define o espa\u00e7amento entre colunas como 2 vezes o tamanho da fonte.</li> <li>a propriedade <code>margin-bottom</code> com o valor <code>0</code>: define o espa\u00e7amento externo inferior como 0.</li> <li>a propriedade <code>display</code> com o valor <code>flex</code>: define que o elemento deve ser exibido como um flex container.</li> <li>a propriedade <code>align-items</code> com o valor <code>center</code>: define que os itens devem ser alinhados verticalmente ao centro.</li> <li>para a tag a dentro de nav</li> <li>a propriedade <code>text-decoration</code> com o valor <code>none</code>: define que o texto n\u00e3o deve ter decora\u00e7\u00e3o.</li> <li>a propriedade <code>color</code> com o valor <code>#fff</code>: define a cor do texto como branco.</li> </ul>"},{"location":"tmdb/tmdb-ajustes-estilos/#adicionando-um-estilo-no-moviesviewvue","title":"Adicionando um estilo no MoviesView.vue","text":"<p>Vamos adicionar um estilo no componente <code>MoviesView.vue</code> para apresentar a lista de g\u00eaneros de forma mais agrad\u00e1vel. Para isso, vamos alterar o bloco <code>template</code> do arquivo <code>MoviesView.vue</code>, para o seguinte conte\u00fado:</p> <pre><code>&lt;template&gt;\n  &lt;h1&gt;Filmes&lt;/h1&gt;\n  &lt;ul class=\"genre-list\"&gt;\n    &lt;li v-for=\"genre in genres\" :key=\"genre.id\" class=\"genre-item\"&gt;\n      {{ genre.name }}\n    &lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre> <p>Note que nesse caso, alteramos o t\u00edtulo <code>h1</code> e adicionamos uma classe <code>genre-list</code> na lista <code>ul</code> e uma classe <code>genre-item</code> nos itens da lista (<code>li</code>).</p> <p>Em seguida, vamos adicionar o seguinte estilo no bloco <code>style</code> do arquivo <code>MoviesView.vue</code>:</p> <pre><code>&lt;style scoped&gt;\n.genre-list {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 2rem;\n  list-style: none;\n  padding: 0;\n}\n\n.genre-item {\n  background-color: #387250;\n  border-radius: 1rem;\n  padding: 0.5rem 1rem;\n  color: #fff;\n}\n\n.genre-item:hover {\n  cursor: pointer;\n  background-color: #4e9e5f;\n  box-shadow: 0 0 0.5rem #387250;\n}\n&lt;/style&gt;\n</code></pre> <p>Nesse caso, criamos tr\u00eas regras CSS:</p> <ul> <li>para a classe <code>.genre-list</code>:</li> <li>a propriedade <code>display</code> com o valor <code>flex</code>: define que o elemento deve ser exibido como um flex container.</li> <li>a propriedade <code>justify-content</code> com o valor <code>center</code>: define que os itens devem ser alinhados horizontalmente ao centro.</li> <li>a propriedade <code>flex-wrap</code> com o valor <code>wrap</code>: define que os itens devem ser quebrados em linhas.</li> <li>a propriedade <code>gap</code> com o valor <code>2rem</code>: define o espa\u00e7amento entre os itens como 2 vezes o tamanho da fonte.</li> <li>a propriedade <code>list-style</code> com o valor <code>none</code>: define que a lista n\u00e3o deve ter marcadores.</li> <li>para a classe <code>.genre-item</code>:</li> <li>a propriedade <code>background-color</code> com o valor <code>#387250</code>: define a cor de fundo do elemento como verde.</li> <li>a propriedade <code>border-radius</code> com o valor <code>1rem</code>: define o raio da borda como 1 vez o tamanho da fonte.</li> <li>a propriedade <code>padding</code> com o valor <code>0.5rem 1rem</code>: define o espa\u00e7amento interno como 0.5 vezes o tamanho da fonte na vertical e 1 vez o tamanho da fonte na horizontal.</li> <li>a propriedade <code>color</code> com o valor <code>#fff</code>: define a cor do texto como branco.</li> <li>para a pseudo-classe <code>.genre-item:hover</code>, quando o mouse estiver sobre o elemento:</li> <li>a propriedade <code>cursor</code> com o valor <code>pointer</code>: define que o cursor do mouse deve ser alterado para um ponteiro.</li> <li>a propriedade <code>background-color</code> com o valor <code>#4e9e5f</code>: define a cor de fundo do elemento como verde mais escuro.</li> <li>a propriedade <code>box-shadow</code> com o valor <code>0 0 0.5rem #387250</code>: define uma sombra ao redor do elemento.</li> </ul>"},{"location":"tmdb/tmdb-ajustes-estilos/#adicionando-um-estilo-no-tvviewvue","title":"Adicionando um estilo no TvView.vue","text":"<p>As altera\u00e7\u00f5es no arquivo <code>TvView.vue</code> s\u00e3o muito semelhantes \u00e0s altera\u00e7\u00f5es no arquivo <code>MoviesView.vue</code>. Vamos alterar o bloco <code>template</code> e <code>style</code> do arquivo <code>TvView.vue</code>, para o seguinte conte\u00fado:</p> <pre><code>&lt;template&gt;\n  &lt;h1&gt;Programas de TV&lt;/h1&gt;\n  &lt;ul class=\"genre-list\"&gt;\n    &lt;li v-for=\"genre in genres\" :key=\"genre.id\" class=\"genre-item\"&gt;\n      {{ genre.name }}\n    &lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n  .genre-list {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 2rem;\n    list-style: none;\n    padding: 0;\n  }\n\n  .genre-item {\n    background-color: #5d6424;\n    border-radius: 1rem;\n    padding: 0.5rem 1rem;\n    align-self: center;\n    color: #fff;\n    display: flex;\n    justify-content: center;\n  }\n\n  .genre-item:hover {\n    cursor: pointer;\n    background-color: #7d8a2e;\n    box-shadow: 0 0 0.5rem #5d6424;\n  }\n&lt;/style&gt;\n</code></pre> <p>Note que as \u00fanicas diferen\u00e7as em rela\u00e7\u00e3o ao exemplo do <code>MovieView.vue</code> s\u00e3o as cores utilizadas.</p>"},{"location":"tmdb/tmdb-enfatizando-genero-atual/","title":"Tmdb enfatizando genero atual","text":""},{"location":"tmdb/tmdb-enfatizando-genero-atual/#enfatizando-o-genero-atual","title":"Enfatizando o g\u00eanero atual","text":"<p>Nessa se\u00e7\u00e3o, vamos aprender a enfatizar o g\u00eanero atual selecionado. Para isso, vamos usar o <code>store</code> de g\u00eaneros que criamos anteriormente e vamos adicionar uma classe CSS para enfatizar o g\u00eanero atual.</p>"},{"location":"tmdb/tmdb-enfatizando-genero-atual/#alterando-o-store-de-generos","title":"Alterando o store de g\u00eaneros","text":"<p>Para poder enfatizar o g\u00eanero atual que est\u00e1 selecionado, vamos inicialmente editar o <code>store</code> que manipula os dados de g\u00eanero, no arquivo <code>@/store/genre.js</code>. Para isso, vamos adicionar uma nova propriedade chamada <code>currentGenre</code> que vai armazenar o g\u00eanero atual selecionado e as fun\u00e7\u00f5es para manipular essa propriedade.</p> <p>Inicialmente, vamos substituir a defini\u00e7\u00e3o de estado pela seguinte:</p> <pre><code>const state = reactive({\n  genres: [],\n  currentGenreId: null,\n});\n</code></pre> <p>Note que agora temos uma propriedade chamada <code>currentGenreId</code> que vai armazenar o <code>id</code> do g\u00eanero atual selecionado. Em seguida, vamos adicionar o seguinte <code>getter</code> para ler o valor dessa propriedade:</p> <pre><code>const currentGenreId = computed(() =&gt; state.currentGenreId);\n</code></pre> <p>Nesse caso, estamos usando um <code>getter</code> computado, pois queremos que o valor seja atualizado automaticamente quando a propriedade <code>currentGenreId</code> for alterada. Por fim, faremos uma <code>action</code> para alterar o valor dessa propriedade:</p> <pre><code>const setCurrentGenreId = (genreId) =&gt; {\n  state.currentGenreId = genreId;\n};\n</code></pre> <p>Nesse exemplo, estamos usando uma fun\u00e7\u00e3o para alterar o valor da propriedade <code>currentGenreId</code> para o valor passado como par\u00e2metro. Agora, basta substituir o retorno da fun\u00e7\u00e3o <code>defineStore</code> pelo seguinte:</p> <pre><code>return {\n  genres,\n  getAllGenres,\n  getGenreName,\n  currentGenreId,\n  setCurrentGenreId,\n};\n</code></pre> <p>Note que estamos retornando a propriedade computada <code>currentGenreId</code> e a fun\u00e7\u00e3o <code>setCurrentGenreId</code>.</p>"},{"location":"tmdb/tmdb-enfatizando-genero-atual/#alterando-o-componente-moviesviewvue","title":"Alterando o componente MoviesView.vue","text":"<p>Inicialmente, vamos alterar a fun\u00e7\u00e3o <code>listMovies</code> para que ela altere o valor da propriedade <code>currentGenreId</code> da <code>store</code> de g\u00eaneros. Para isso, vamos adicionar o seguinte c\u00f3digo no bloco <code>script</code>:</p> <pre><code>const listMovies = async (genreId) =&gt; {\n  genreStore.setCurrentGenreId(genreId);\n  isLoading.value = true;\n  const response = await api.get('discover/movie', {\n    params: {\n      with_genres: genreId,\n      language: 'pt-BR',\n    },\n  });\n  movies.value = response.data.results;\n  isLoading.value = false;\n};\n</code></pre> <p>Note que, antes de fazer a requisi\u00e7\u00e3o para a API, chamamos a fun\u00e7\u00e3o <code>setCurrentGenreId</code> da <code>store</code> de g\u00eaneros passando o <code>id</code> do g\u00eanero selecionado como par\u00e2metro. Em seguida, mantemos o restante do c\u00f3digo inalterado.</p> <p>Agora, vamos alterar o bloco <code>template</code> para que ele use a propriedade <code>currentGenreId</code> da <code>store</code> de g\u00eaneros. Para isso, vamos alterar os seguintes c\u00f3digos no bloco <code>template</code>:</p> <pre><code>  &lt;li\n    v-for=\"genre in genreStore.genres\"\n    :key=\"genre.id\"\n    @click=\"listMovies(genre.id)\n    class=\"genre-item\"\n    :class=\"{ active: genre.id === genreStore.currentGenreId }\"\n  &gt;\n    {{ genre.name }}\n  &lt;/li&gt;\n</code></pre> <p>e tamb\u00e9m</p> <pre><code>&lt;span\n  v-for=\"genre_id in movie.genre_ids\"\n  :key=\"genre_id\"\n  @click=\"listMovies(genre_id)\"\n  :class=\"{ active: genre_id === genreStore.currentGenreId }\"\n&gt;\n  {{ genreStore.getGenreName(genre_id) }}\n&lt;/span&gt;\n</code></pre> <p>Por fim, vamos adicionar a seguinte classe CSS no bloco <code>style</code>:</p> <pre><code>.active {\n  background-color: #67b086;\n  font-weight: bolder;\n}\n\n.movie-genres span.active {\n  background-color: #abc322;\n  color: #000;\n  font-weight: bolder;\n}\n</code></pre>"},{"location":"tmdb/tmdb-gerenciamento-estados-com-pinia/","title":"Tmdb gerenciamento estados com pinia","text":""},{"location":"tmdb/tmdb-gerenciamento-estados-com-pinia/#gerenciamento-de-estados","title":"Gerenciamento de estados","text":"<p>Nas aplica\u00e7\u00f5es web, \u00e9 comum que tenhamos que lidar com estados. Por exemplo, em uma aplica\u00e7\u00e3o de cadastro de clientes, podemos ter um estado que indica se o cliente est\u00e1 sendo editado ou n\u00e3o. Em uma aplica\u00e7\u00e3o de carrinho de compras, podemos ter um estado que indica se o carrinho est\u00e1 vazio ou n\u00e3o. Em uma aplica\u00e7\u00e3o de listagem de filmes, podemos ter um estado que indica se os filmes est\u00e3o sendo carregados ou n\u00e3o, ou mesmo armazenar os filmes ou g\u00eaneros que foram carregados.</p> <p>No VueJS, podemos usar a API de reatividade para gerenciar estados. Contudo, essa abordagem pode se tornar complexa conforme a aplica\u00e7\u00e3o cresce. Para facilitar o gerenciamento de estados, podemos usar uma biblioteca chamada Pinia, como j\u00e1 estudamos anteriormente.</p>"},{"location":"tmdb/tmdb-gerenciamento-estados-com-pinia/#instalacao","title":"Instala\u00e7\u00e3o","text":"<p>Para instalar o Pinia, vamos abrir o terminal e executar o seguinte comando:</p> <pre><code>npm install pinia\n</code></pre>"},{"location":"tmdb/tmdb-gerenciamento-estados-com-pinia/#configuracao-da-aplicacao-para-suportar-o-pinia","title":"Configura\u00e7\u00e3o da aplica\u00e7\u00e3o para suportar o Pinia","text":"<p>Vamos editar o arquivo <code>src/main.js</code> e adicionar o seguinte c\u00f3digo:</p> <pre><code>import 'vue-loading-overlay/dist/css/index.css';\nimport './assets/main.css';\n\nimport { createApp } from 'vue';\nimport { createPinia } from 'pinia';\nimport App from './App.vue';\nimport router from './router';\nconst app = createApp(App);\napp.use(router);\napp.use(createPinia());\n\napp.mount('#app');\n</code></pre> <p>Note que, comparado com o arquivo <code>src/main.js</code> anterior, adicionamos apenas a importa\u00e7\u00e3o do <code>createPinia</code> e a chamada do m\u00e9todo <code>app.use(createPinia())</code>. O m\u00e9todo <code>createPinia</code> cria uma inst\u00e2ncia do Pinia e a torna dispon\u00edvel para todos os componentes da aplica\u00e7\u00e3o.</p>"},{"location":"tmdb/tmdb-gerenciamento-estados-com-pinia/#criando-uma-store","title":"Criando uma store","text":"<p>Podemos dividir o processo de cria\u00e7\u00e3o de uma store em tr\u00eas etapas:</p> <ol> <li>Criar a store usando o m\u00e9todo <code>defineStore</code></li> <li>Criar as vari\u00e1veis reativas e fun\u00e7\u00f5es que alteram essas vari\u00e1veis</li> <li>Retornar as vari\u00e1veis e fun\u00e7\u00f5es que ser\u00e3o usadas pelos componentes</li> </ol> <p>Para criar uma store, vamos criar um arquivo chamado <code>src/stores/genre.js</code> e adicionar o seguinte c\u00f3digo:</p> <pre><code>import { reactive, computed } from 'vue';\nimport { defineStore } from 'pinia';\nimport api from '@/plugins/axios';\n\nexport const useGenreStore = defineStore('genre', () =&gt; {\n  const state = reactive({\n    genres: [],\n  });\n\n  const genres = computed(() =&gt; state.genres);\n  const getGenreName = (id) =&gt;\n    state.genres.find((genre) =&gt; genre.id === id).name;\n\n  const getAllGenres = async (type) =&gt; {\n    const response = await api.get(`genre/${type}/list?language=pt-BR`);\n    state.genres = response.data.genres;\n  };\n\n  return { genres, getAllGenres, getGenreName };\n});\n</code></pre> <p>Note que, para criar a store, usamos o m\u00e9todo <code>defineStore</code> que recebe dois par\u00e2metros: o nome da store e uma fun\u00e7\u00e3o que retorna um objeto com as vari\u00e1veis reativas e fun\u00e7\u00f5es que alteram essas vari\u00e1veis.</p> <p>No nosso exemplo, criamos uma store chamada <code>genre</code> que possui uma vari\u00e1vel reativa chamada <code>genres</code> e tr\u00eas fun\u00e7\u00f5es: <code>getAllGenres</code>, <code>getGenreName</code> e <code>getGenreName</code>. A fun\u00e7\u00e3o <code>getAllGenres</code> faz uma requisi\u00e7\u00e3o HTTP para a API do TMDB e armazena os g\u00eaneros na vari\u00e1vel reativa <code>genres</code>. Esta fun\u00e7\u00e3o recebe um par\u00e2metro chamado <code>type</code> que indica se a listagem de g\u00eaneros ser\u00e1 feita com base nos filmes ou nas s\u00e9ries. A fun\u00e7\u00e3o <code>getGenreName</code> recebe o id de um g\u00eanero e retorna o nome desse g\u00eanero.</p> <p>Note tamb\u00e9m que a fun\u00e7\u00e3o <code>defineStore</code> retorna um objeto com a propriedade computada <code>genres</code> e as fun\u00e7\u00f5es <code>getAllGenres</code> e <code>getGenreName</code>. No exemplo n\u00e3o retornamos o objeto reativo <code>state</code> porque n\u00e3o queremos que ele seja acessado diretamente pelos componentes. Para acessar cada um dos elementos do objeto <code>state</code>, vamos usar os getters <code>genres</code> e <code>getGenreName</code>. Da mesma forma, para alterar o estado da aplica\u00e7\u00e3o, vamos usar a action <code>getAllGenres</code>.</p> <p>Por fim, exportamos a store usando o m\u00e9todo <code>useGenreStore</code>. Esse m\u00e9todo \u00e9 necess\u00e1rio para que o Pinia possa criar uma inst\u00e2ncia da store e torn\u00e1-la dispon\u00edvel para os componentes da aplica\u00e7\u00e3o.</p>"},{"location":"tmdb/tmdb-gerenciamento-estados-com-pinia/#usando-a-store","title":"Usando a store","text":"<p>Para usar a store, vamos editar o arquivo <code>src/views/MoviesView.vue</code>. Inicialmente vamos editar o bloco <code>script</code> e adicionar o seguinte c\u00f3digo:</p> <pre><code>import { useGenreStore } from '@/stores/genre';\n\nconst genreStore = useGenreStore();\n</code></pre> <p>Note que importamos a store usando o m\u00e9todo <code>useGenreStore</code> que criamos anteriormente. No mesmo bloco <code>script</code> vamos alterar o m\u00e9todo <code>onMounted</code> para que ele chame a fun\u00e7\u00e3o <code>getAllGenres</code> da store:</p> <pre><code>onMounted(async () =&gt; {\n  isLoading.value = true;\n  await genreStore.getAllGenres('movie');\n  isLoading.value = false;\n});\n</code></pre> <p>No exemplo, ao invocar a fun\u00e7\u00e3o <code>getAllGenres</code>, passamos o par\u00e2metro <code>'movie'</code> para que a listagem de g\u00eaneros seja feita com base nos filmes.</p> <p>Por fim, vamos alterar o bloco <code>template</code> para que ele use a store:</p> <pre><code>&lt;li\n  v-for=\"genre in genreStore.genres\"\n  :key=\"genre.id\"\n  @click=\"listMovies(genre.id)\"\n  class=\"genre-item\"\n&gt;\n  {{ genre.name }}\n&lt;/li&gt;\n</code></pre> <p>No exemplo, alteramos apenas a listagem de g\u00eaneros, visto que foi o \u00fanico elemento que usamos da store, e esta \u00e9 a \u00fanica store que criamos at\u00e9 o momento. Note que, para acessar a vari\u00e1vel reativa <code>genres</code> da store, usamos o getter <code>genres</code>.</p> <p>Ainda, vamos fazer mais uma altera\u00e7\u00e3o no bloco <code>template</code>, para buscar o nome do g\u00eanero com base no <code>id</code> do g\u00eanero:</p> <pre><code>&lt;span\n  v-for=\"genre_id in movie.genre_ids\"\n  :key=\"genre_id\"\n  @click=\"listMovies(genre_id)\"\n&gt;\n  {{ genreStore.getGenreName(genre_id) }}\n&lt;/span&gt;\n</code></pre> <p>Nesse exemplo, usamos a fun\u00e7\u00e3o <code>getGenreName</code> para buscar o nome do g\u00eanero com base no <code>id</code> do g\u00eanero. Essa fun\u00e7\u00e3o recebe o <code>id</code> do g\u00eanero e retorna o nome do g\u00eanero e est\u00e1 implementada na store <code>genre</code>.</p>"},{"location":"tmdb/tmdb-gerenciamento-estados-com-pinia/#exercicios","title":"Exerc\u00edcios","text":"<ol> <li>Fazer as altera\u00e7\u00f5es necess\u00e1rias em <code>TvView.vue</code> para que a listagem de g\u00eaneros seja feita usando a store <code>genre</code>. Note que ao chamar a fun\u00e7\u00e3o <code>getAllGenres</code> da store <code>genre</code>, \u00e9 necess\u00e1rio passar o par\u00e2metro <code>'tv'</code> para que a listagem de g\u00eaneros seja feita com base nos filmes.</li> </ol>"},{"location":"tmdb/tmdb-listando-filmes/","title":"Tmdb listando filmes","text":""},{"location":"tmdb/tmdb-listando-filmes/#listando-filmes","title":"Listando filmes","text":"<p>Vamos agora listar os filmes ao clicar no g\u00eanero. Para isso, vamos alterar o componente <code>MoviesView.vue</code> para que ele liste os filmes ao clicar no g\u00eanero. Inicialmente, vamos adicionar um <code>listener</code> ao evento <code>click</code> do elemento <code>li</code> que cont\u00e9m o g\u00eanero. Para isso, vamos alterar o bloco <code>template</code> do arquivo <code>MoviesView.vue</code> para o seguinte conte\u00fado:</p> <pre><code>&lt;template&gt;\n  ...\n  &lt;li\n    v-for=\"genre in genres\"\n    :key=\"genre.id\"\n    @click=\"listMovies(genre.id)\"\n    class=\"genre-item\"\n  &gt;\n    {{ genre.name }}\n  &lt;/li&gt;\n  ...\n&lt;/template&gt;\n</code></pre> <p>Note que adicionamos o <code>listener</code> ao evento <code>click</code> do elemento <code>li</code> que cont\u00e9m o g\u00eanero. Esse <code>listener</code> chama o m\u00e9todo <code>listMovies</code> passando o <code>id</code> do g\u00eanero como par\u00e2metro. Al\u00e9m disso, as demais partes do c\u00f3digo permanecem inalteradas. Agora, vamos adicionar o m\u00e9todo <code>listMovies</code> no bloco <code>script</code> do arquivo <code>MoviesView.vue</code>:</p> <pre><code>&lt;script setup&gt;\n  ...\n  const movies = ref([]);\n\n  const listMovies = async (genreId) =&gt; {\n      const response = await api.get('discover/movie', {\n          params: {\n              with_genres: genreId,\n              language: 'pt-BR'\n          }\n      });\n      movies.value = response.data.results\n  };\n  ...\n&lt;/script&gt;\n</code></pre> <p>Neste exemplo, criamos uma vari\u00e1vel reativa <code>movies</code> que armazena a lista de filmes. Al\u00e9m disso, criamos o m\u00e9todo <code>listMovies</code> que recebe o <code>id</code> do g\u00eanero como par\u00e2metro (chamado de <code>genreId</code>). Esse m\u00e9todo faz uma requisi\u00e7\u00e3o para a rota <code>discover/movie</code> da API do TMDB passando o <code>genreId</code> como par\u00e2metro. Em seguida, o m\u00e9todo atribui a lista de filmes retornada pela API \u00e0 vari\u00e1vel reativa <code>movies</code>. As demais partes do c\u00f3digo permanecem inalteradas. Agora, vamos alterar o bloco <code>template</code> do arquivo <code>MoviesView.vue</code>, adicionando o seguinte conte\u00fado, depois de fechar a tag <code>&lt;/ul&gt;</code>:</p> <pre><code>&lt;div class=\"movie-list\"&gt;\n  &lt;div v-for=\"movie in movies\" :key=\"movie.id\" class=\"movie-card\"&gt;\n    &lt;img\n      :src=\"`https://image.tmdb.org/t/p/w500${movie.poster_path}`\"\n      :alt=\"movie.title\"\n    /&gt;\n    &lt;div class=\"movie-details\"&gt;\n      &lt;p class=\"movie-title\"&gt;{{ movie.title }}&lt;/p&gt;\n      &lt;p class=\"movie-release-date\"&gt;{{ movie.release_date }}&lt;/p&gt;\n      &lt;p class=\"movie-genres\"&gt;{{ movie.genre_ids }}&lt;/p&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre> <p>Neste caso, criamos um elemento <code>div</code> com a classe <code>movie-list</code> que cont\u00e9m um elemento <code>div</code> para cada filme (comportamento garantido pelo <code>v-for</code>). Cada elemento <code>div</code> com a classe <code>movie-card</code> cont\u00e9m:</p> <ul> <li>uma imagem com o cartaz do filme,</li> <li>um elemento <code>div</code> com a classe <code>movie-details</code> que cont\u00e9m:</li> <li>o t\u00edtulo,</li> <li>a data de lan\u00e7amento e</li> <li>os g\u00eaneros do filme.     Note que utilizamos a interpola\u00e7\u00e3o para definir o valor do atributo <code>src</code> da imagem. Al\u00e9m disso, utilizamos a interpola\u00e7\u00e3o para definir o valor dos textos dos elementos <code>p</code> que cont\u00e9m o t\u00edtulo, a data de lan\u00e7amento e os g\u00eaneros do filme.</li> </ul> <p>Agora, vamos adicionar o seguinte estilo no bloco <code>style</code> do arquivo <code>MoviesView.vue</code>:</p> <pre><code>.movie-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n}\n\n.movie-card {\n  width: 15rem;\n  height: 30rem;\n  border-radius: 0.5rem;\n  overflow: hidden;\n  box-shadow: 0 0 0.5rem #000;\n}\n\n.movie-card img {\n  width: 100%;\n  height: 20rem;\n  border-radius: 0.5rem;\n  box-shadow: 0 0 0.5rem #000;\n}\n\n.movie-details {\n  padding: 0 0.5rem;\n}\n\n.movie-title {\n  font-size: 1.1rem;\n  font-weight: bold;\n  line-height: 1.3rem;\n  height: 3.2rem;\n}\n</code></pre> <p>Neste caso, definimos 5 regras de estilos CSS:</p> <ul> <li>para o elemento <code>div</code> com a classe <code>movie-list</code></li> <li>a propriedade <code>display</code> com o valor <code>flex</code>: define que o elemento deve ser exibido como um flex container.</li> <li>a propriedade <code>flex-wrap</code> com o valor <code>wrap</code>: define que os elementos devem ser exibidos em v\u00e1rias linhas.</li> <li>a propriedade <code>gap</code> com o valor <code>1rem</code>: define o espa\u00e7amento entre os elementos como 1 vez o tamanho da fonte.</li> <li>para o elemento <code>div</code> com a classe <code>movie-card</code></li> <li>a propriedade <code>width</code> com o valor <code>15rem</code>: define a largura do elemento como 15 vezes o tamanho da fonte.</li> <li>a propriedade <code>height</code> com o valor <code>30rem</code>: define a altura do elemento como 30 vezes o tamanho da fonte.</li> <li>a propriedade <code>border-radius</code> com o valor <code>0.5rem</code>: define o raio da borda como 0.5 vezes o tamanho da fonte.</li> <li>a propriedade <code>overflow</code> com o valor <code>hidden</code>: define que o conte\u00fado que ultrapassar o tamanho do elemento deve ser ocultado.</li> <li>a propriedade <code>box-shadow</code> com o valor <code>0 0 0.5rem #000</code>: define um sombreamento de 0.5 vezes o tamanho da fonte.</li> <li>para a imagem</li> <li>a propriedade <code>width</code> com o valor <code>100%</code>: define a largura da imagem como 100% do tamanho do elemento pai.</li> <li>a propriedade <code>height</code> com o valor <code>20rem</code>: define a altura da imagem como 20 vezes o tamanho da fonte.</li> <li>a propriedade <code>border-radius</code> com o valor <code>0.5rem</code>: define o raio da borda como 0.5 vezes o tamanho da fonte.</li> <li>a propriedade <code>box-shadow</code> com o valor <code>0 0 0.5rem #000</code>: define um sombreamento de 0.5 vezes o tamanho da fonte.</li> <li>para o elemento <code>div</code> com a classe <code>movie-details</code></li> <li>a propriedade <code>padding</code> com o valor <code>0 0.5rem</code>: define o espa\u00e7amento interno como 0 vezes o tamanho da fonte na vertical e 0.5 vezes o tamanho da fonte na horizontal.</li> <li>para o elemento <code>p</code> com a classe <code>movie-title</code></li> <li>a propriedade <code>font-size</code> com o valor <code>1.1rem</code>: define o tamanho da fonte como 1.1 vezes o tamanho da fonte.</li> <li>a propriedade <code>font-weight</code> com o valor <code>bold</code>: define o peso da fonte como negrito.</li> <li>a propriedade <code>line-height</code> com o valor <code>1.3rem</code>: define a altura da linha como 1.3 vezes o tamanho da fonte.</li> <li>a propriedade <code>height</code> com o valor <code>3.2rem</code>: define a altura do elemento como 3.2 vezes o tamanho da fonte.</li> </ul> <p>Por fim, faremos uma pequena altera\u00e7\u00e3o na defina\u00e7\u00e3o de estilo da classe <code>.genre-list</code> para adicionar uma margem inferior, como segue:</p> <pre><code>.genre-list {\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 2rem;\n  list-style: none;\n  margin-bottom: 2rem;\n}\n</code></pre> <p>Note que nesse caso adicionamos a propriedade <code>margin-bottom</code> com o valor <code>2rem</code> para definir uma margem inferior de 2 vezes o tamanho da fonte.</p>"},{"location":"tmdb/tmdb-listando-filmes/#exercicios","title":"Exerc\u00edcios","text":"<p>Fazer a listagem de programas de TV ao clicar no g\u00eanero. Note que no caso dos programas de TV, a rota da API \u00e9 <code>discover/tv</code> e o par\u00e2metro para filtrar por g\u00eanero \u00e9 <code>with_genres</code>. Al\u00e9m disso, o nome do campo que cont\u00e9m o t\u00edtulo do programa de TV \u00e9 <code>name</code>, o nome original \u00e9 <code>original_name</code> e o nome do campo que cont\u00e9m a data de lan\u00e7amento \u00e9 <code>first_air_date</code>.</p>"},{"location":"tmdb/tmdb-mostrando-detalhes-do-filme/","title":"Tmdb mostrando detalhes do filme","text":""},{"location":"tmdb/tmdb-mostrando-detalhes-do-filme/#mostrando-detalhes-do-filme","title":"Mostrando detalhes do filme","text":"<p>Vamos agora, possibilitar a exibi\u00e7\u00e3o de detalhes de um filme ao clicar em um cart\u00e3o de filme.</p>"},{"location":"tmdb/tmdb-mostrando-detalhes-do-filme/#criando-um-store","title":"Criando um store","text":"<p>Vamos criar um arquivo chamado <code>src/stores/movie.js</code> e adicionar o seguinte c\u00f3digo:</p> <pre><code>import { reactive, computed } from 'vue';\nimport { defineStore } from 'pinia';\nimport api from '@/plugins/axios';\n\nexport const useMovieStore = defineStore('movie', () =&gt; {\n  const state = reactive({\n    currentMovie: {},\n  });\n\n  const currentMovie = computed(() =&gt; state.currentMovie);\n\n  const getMovieDetail = async (movieId) =&gt; {\n    const response = await api.get(`movie/${movieId}`);\n    state.currentMovie = response.data;\n  };\n\n  return { currentMovie, getMovieDetail };\n});\n</code></pre> <p>Note que estamos criando uma store chamada <code>movie</code> e estamos retornando a propriedade computada <code>currentMovie</code> e a fun\u00e7\u00e3o <code>getMovieDetail</code>. A propriedade <code>currentMovie</code> vai armazenar o filme atual selecionado e a fun\u00e7\u00e3o <code>getMovieDetail</code> vai buscar os detalhes do filme na API e armazenar na propriedade <code>currentMovie</code>.</p> <p>Tamb\u00e9m, existe uma integra\u00e7\u00e3o com a <code>store</code> de template para que seja poss\u00edvel mostrar o \u00edcone de carregando enquanto os detalhes do filme s\u00e3o buscados na API.</p>"},{"location":"tmdb/tmdb-mostrando-detalhes-do-filme/#alterando-o-componente-moviesviewvue","title":"Alterando o componente MoviesView.vue","text":"<p>Vamos aquivo editar o arquivo <code>src/views/MoviesView.vue</code>, procurar para tag <code>img</code> com a capa do filme e adicionar um listener para o evento <code>click</code> que vai chamar a fun\u00e7\u00e3o <code>showMovieDetails</code> passando o <code>id</code> do filme como par\u00e2metro. O c\u00f3digo deve ficar assim:</p> <pre><code>&lt;img\n  :src=\"`https://image.tmdb.org/t/p/w500${movie.poster_path}`\"\n  :alt=\"movie.title\"\n  @click=\"openMovie(movie.id)\"\n/&gt;\n</code></pre> <p>Agora, vamos editar o bloco <code>script</code> e adicionar o seguinte c\u00f3digo:</p> <pre><code>import { useRouter } from 'vue-router'\nconst router = useRouter()\n\n...\n\nfunction openMovie(movieId) {\n  router.push({ name: 'MovieDetails', params: { movieId } });\n}\n</code></pre> <p>Note que estamos importando o hook <code>useRouter</code> do <code>vue-router</code> e estamos criando uma fun\u00e7\u00e3o chamada <code>openMovie</code> que recebe o <code>id</code> do filme como par\u00e2metro. Essa fun\u00e7\u00e3o vai redirecionar o usu\u00e1rio para a rota <code>MovieDetails</code> passando o <code>id</code> do filme como par\u00e2metro.</p>"},{"location":"tmdb/tmdb-mostrando-detalhes-do-filme/#criando-o-componente-moviedetailsviewvue","title":"Criando o componente MovieDetailsView.vue","text":"<p>Vamos criar um novo componente chamado <code>MovieDetailsView.vue</code>, na pasta <code>src/views/</code> e vamos adicionar o seguinte c\u00f3digo:</p> <pre><code>&lt;script setup&gt;\n  import { defineProps, onMounted } from 'vue';\n  import { useMovieStore } from '@/stores/movie';\n  const movieStore = useMovieStore();\n\n  const props = defineProps({\n    movieId: {\n      type: Number,\n      required: true,\n    },\n  });\n\n  onMounted(async () =&gt; {\n    await movieStore.getMovieDetail(props.movieId);\n  });\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div class=\"main\"&gt;\n    &lt;div class=\"content\"&gt;\n      &lt;img\n        :src=\"`https://image.tmdb.org/t/p/w185${movieStore.currentMovie.poster_path}`\"\n        :alt=\"movieStore.currentMovie.title\"\n      /&gt;\n\n      &lt;div class=\"details\"&gt;\n        &lt;h1&gt;Filme: {{ movieStore.currentMovie.title }}&lt;/h1&gt;\n        &lt;p&gt;{{ movieStore.currentMovie.tagline }}&lt;/p&gt;\n        &lt;p&gt;{{ movieStore.currentMovie.overview }}&lt;/p&gt;\n        &lt;p&gt;Or\u00e7amento: ${{ movieStore.currentMovie.budget }}&lt;/p&gt;\n        &lt;p&gt;Avalia\u00e7\u00e3o: {{ movieStore.currentMovie.vote_average }}&lt;/p&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n\n  &lt;p&gt;Produtoras&lt;/p&gt;\n  &lt;div class=\"companies\"&gt;\n    &lt;template\n      v-for=\"company in movieStore.currentMovie.production_companies\"\n      :key=\"company.id\"\n    &gt;\n      &lt;img\n        v-if=\"company.logo_path\"\n        :src=\"`https://image.tmdb.org/t/p/w92${company.logo_path}`\"\n        :alt=\"company.name\"\n      /&gt;\n      &lt;p v-else&gt;{{ company.name }}&lt;/p&gt;\n    &lt;/template&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n  .companies {\n    display: flex;\n    flex-direction: row;\n    column-gap: 3rem;\n    align-items: center;\n    margin-bottom: 2rem;\n  }\n&lt;/style&gt;\n</code></pre> <p>Esse c\u00f3digo \u00e9 um pouco mais complexo, mas n\u00e3o se preocupe, vamos explicar cada parte dele.</p> <p>Inicialmente, importamos o hook <code>useMovieStore</code> da store <code>movie</code> e criamos uma vari\u00e1vel reativa chamada <code>movieStore</code> que vai armazenar a inst\u00e2ncia da store <code>movie</code>.</p> <p>Em seguida, criamos uma propriedade chamada <code>movieId</code> que vai receber o <code>id</code> do filme como par\u00e2metro. Essa propriedade \u00e9 obrigat\u00f3ria e deve ser do tipo <code>Number</code>.</p> <p>Tamb\u00e9m, criamos um hook <code>onMounted</code> que vai chamar a fun\u00e7\u00e3o <code>getMovieDetail</code> da store <code>movie</code> passando o <code>id</code> do filme como par\u00e2metro. Essa fun\u00e7\u00e3o vai buscar os detalhes do filme na API e armazenar na propriedade <code>currentMovie</code> da store <code>movie</code>.</p> <p>Por fim, no bloco <code>template</code>, usamos a propriedade computada <code>currentMovie</code> da store <code>movie</code> para mostrar os detalhes do filme. Note que, para acessar a propriedade computada <code>currentMovie</code> da store <code>movie</code>, usamos a vari\u00e1vel reativa <code>movieStore</code>.</p> <p>Nesse exemplo, n\u00e3o foram realizadas muitas estiliza\u00e7\u00f5es em CSS, mas voc\u00ea pode fazer isso se quiser.</p>"},{"location":"tmdb/tmdb-mostrando-detalhes-do-filme/#alterando-as-rotas","title":"Alterando as rotas","text":"<p>Vamos editar o arquivo <code>src/router/index.js</code> e adicionar a seguinte rota:</p> <pre><code>{\n  path: '/movie/:movieId',\n  name: 'MovieDetails',\n  component: () =&gt; import('../views/MovieDetailsView.vue'),\n  props: true,\n},\n</code></pre>"},{"location":"tmdb/tmdb-mostrando-tag-generos/","title":"Tmdb mostrando tag generos","text":""},{"location":"tmdb/tmdb-mostrando-tag-generos/#mostrar-a-tag-de-generos","title":"Mostrar a tag de g\u00eaneros","text":"<p>Nos exemplos anteriores, foram exibidos apenas os <code>ids</code> dos g\u00eaneros na listagem de filmes (e programas de TV). Neste exemplo, vamos exibir a tag de cada g\u00eanero na listagem. Para isso, vamos alterar o m\u00e9todo <code>listMovies</code> para que ele substitua o <code>id</code> do g\u00eanero pelo nome do g\u00eanero.</p> <p>Inicialmente, vamos criar uma fun\u00e7\u00e3o que retorna o nome do g\u00eanero a partir do <code>id</code> do g\u00eanero. Para isso, vamos abrir o arquivo <code>MoviesView.vue</code> e adicionar o seguinte conte\u00fado no bloco <code>script</code>:</p> <pre><code>&lt;script setup&gt;\n\nconst getGenreName = (id) =&gt; genres.value.find((genre) =&gt; genre.id === id).name\n</code></pre> <p>Note que a fun\u00e7\u00e3o <code>getGenreName</code> recebe o <code>id</code> do g\u00eanero como par\u00e2metro e retorna o nome do g\u00eanero. Para isso, usamos a fun\u00e7\u00e3o <code>find</code> do JavaScript para encontrar o g\u00eanero com o <code>id</code> informado e retornar o nome do g\u00eanero.</p> <p>Esse c\u00f3digo poderia ser escrito de uma forma diferente, um pouco mais detalhada, como segue:</p> <pre><code>&lt;script setup&gt;\n\n  function getGenreName(id) {\n    const genero = genres.value.find((genre) =&gt; genre.id === id);\n    return genero.name;\n  }\n</code></pre> <p>Voc\u00ea pode escolher a forma que preferir. O importante \u00e9 entender o que est\u00e1 sendo feito e usar apenas uma das formas.</p> <p>Agora, vamos alterar a listagem de filmes para que ele substitua o <code>id</code> do g\u00eanero pelo nome do g\u00eanero. Para isso, vamos abrir o arquivo <code>MoviesView.vue</code> e alterar o seguinte conte\u00fado no bloco <code>template</code>:</p> <pre><code>&lt;p class=\"movie-genres\"&gt;\n  &lt;span\n    v-for=\"genre_id in movie.genre_ids\"\n    :key=\"genre_id\"\n    @click=\"listMovies(genre_id)\"\n  &gt;\n    {{ getGenreName(genre_id) }}\n  &lt;/span&gt;\n&lt;/p&gt;\n</code></pre> <p>Note que localizamos a tag <code>p</code> com a classe <code>movie-genres</code> e substitu\u00edmos o conte\u00fado <code>{{ movie.genre_ids }}</code> pela tag <code>span</code> acima. No caso do exemplo, a tag <code>span</code> \u00e9 criada para cada <code>id</code> de g\u00eanero do filme (comportamento garantido pelo <code>v-for</code>). Al\u00e9m disso, adicionamos um <code>listener</code> ao evento <code>click</code> da tag <code>span</code> que chama o m\u00e9todo <code>listMovies</code> passando o <code>id</code> do g\u00eanero como par\u00e2metro. Por fim, adicionamos o conte\u00fado <code>{{ getGenreById(genre_id) }}</code> que exibe o nome do g\u00eanero a partir do <code>id</code> do g\u00eanero.</p> <p>Por fim, vamos fazer uma estiliza\u00e7\u00e3o para a exibi\u00e7\u00e3o dos g\u00eaneros. Para tal, vamos editar o bloco <code>style</code> do arquivo <code>MoviesView.vue</code> e adicionar o seguinte conte\u00fado:</p> <pre><code>.movie-genres {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  justify-content: center;\n  gap: 0.2rem;\n}\n\n.movie-genres span {\n  background-color: #748708;\n  border-radius: 0.5rem;\n  padding: 0.2rem 0.5rem;\n  color: #fff;\n  font-size: 0.8rem;\n  font-weight: bold;\n}\n\n.movie-genres span:hover {\n  cursor: pointer;\n  background-color: #455a08;\n  box-shadow: 0 0 0.5rem #748708;\n}\n</code></pre> <p>Note que a classe <code>.movie-genres</code> j\u00e1 existia no bloco <code>style</code> do arquivo <code>MoviesView.vue</code>. Neste caso, apenas alteramos o valor do atributo <code>display</code> para <code>flex</code> e adicionamos os demais atributos para que os g\u00eaneros sejam exibidos em uma \u00fanica linha, com um pequeno espa\u00e7amento entre eles.</p>"},{"location":"tmdb/tmdb-mostrando-tag-generos/#formatando-a-data-para-o-padrao-brasileiro","title":"Formatando a data para o padr\u00e3o brasileiro","text":"<p>Neste exemplo, vamos alterar a forma como a data de lan\u00e7amento dos filmes \u00e9 exibida. Para isso, vamos abrir o arquivo <code>MoviesView.vue</code> e alterar o seguinte conte\u00fado no bloco <code>template</code>:</p> <pre><code>&lt;p class=\"movie-release-date\"&gt;{{ formatDate(movie.release_date) }}&lt;/p&gt;\n</code></pre> <p>Note que localizamos a tag <code>p</code> com a classe <code>.movie-release-date</code> e substitu\u00edmos o conte\u00fado <code>{{ movie.release_date }}</code> pelo conte\u00fado <code>{{ formatDate(movie.release_date) }}</code>. Al\u00e9m disso, vamos adicionar o seguinte conte\u00fado no bloco <code>script</code>:</p> <pre><code>const formatDate = (date) =&gt; new Date(date).toLocaleDateString('pt-BR');\n</code></pre> <p>Note que criamos uma fun\u00e7\u00e3o <code>formatDate</code> que recebe a data de lan\u00e7amento como par\u00e2metro e retorna a data formatada para o padr\u00e3o brasileiro. Para isso, usamos a fun\u00e7\u00e3o <code>toLocaleDateString</code> do JavaScript para formatar a data para o padr\u00e3o brasileiro. Sugiro colocar a fun\u00e7\u00e3o <code>formatDate</code> logo ap\u00f3s a fun\u00e7\u00e3o <code>getGenreName</code>.</p>"},{"location":"tmdb/tmdb-no-vue/","title":"Tmdb no vue","text":""},{"location":"tmdb/tmdb-no-vue/#projeto-tmdb-no-vue","title":"Projeto TMDB no Vue","text":"<p>O objetivo deste tutorial \u00e9 apresentar como utilizar a API TMDB (The Movie Database API) para buscar informa\u00e7\u00f5es sobre filmes, s\u00e9ries e programas de TV. Para isso, ser\u00e1 utilizado o framework Vue.js e a biblioteca Axios.</p> <p>A constru\u00e7\u00e3o ser\u00e1 progressiva, de forma que novas formas de organizar os arquivos e de utilizar o Vue.js ser\u00e3o apresentadas ao longo do tutorial.</p>"},{"location":"tmdb/tmdb-no-vue/#criacao-do-projeto","title":"Cria\u00e7\u00e3o do projeto","text":"<p>Para criar o projeto, vamos utilizar o Vite. Para isso, vamos criar uma pasta para esse projeto, por exemplo com o nome <code>filmes-tmdb</code>. Em seguida, vamos abrir essa pasta no Visual Studio Code e, no terminal, vamos executar o seguinte comando:</p> <pre><code>npm init vue@latest .\n</code></pre> <p>Vamos responder \u00e0s perguntas como j\u00e1 apresentado em aulas anteriores. Neste momento, n\u00e3o adicione ainda nem o Vue Router e nem o Pinia. Faremos isso mais adiante.</p>"},{"location":"tmdb/tmdb-no-vue/#instalacao-do-axios","title":"Instala\u00e7\u00e3o do Axios","text":"<p>Para instalar o Axios, vamos executar o seguinte comando no terminal:</p> <pre><code>npm install axios\n</code></pre>"},{"location":"tmdb/tmdb-no-vue/#buscando-os-generos-dos-filmes-e-programas-de-tv","title":"Buscando os g\u00eaneros dos filmes e programas de TV","text":"<p>Nesta primeira etapa, vamos fazer apenas uma altera\u00e7\u00e3o na p\u00e1gina principal para listar os g\u00eaneros de filmes e programas de TV.</p> <p>Inicialmente, vamos abrir o arquivo <code>App.vue</code>, e alter\u00e1-lo para o seguinte conte\u00fado:</p> <pre><code>&lt;script setup&gt;\n  import { ref, onMounted } from 'vue';\n  import axios from 'axios';\n\n  const moviesGenres = ref([]);\n  const TVGenres = ref([]);\n\n  onMounted(async () =&gt; {\n    let response = await axios.get(\n      'https://api.themoviedb.org/3/genre/movie/list?language=pt-BR',\n      {\n        headers: {\n          Authorization: `Bearer AQUI_COLOCAR O TOKEN DE LEITURA DA API`,\n        },\n      },\n    );\n    moviesGenres.value = response.data.genres;\n    response = await axios.get(\n      'https://api.themoviedb.org/3/genre/tv/list?language=pt-BR',\n      {\n        headers: {\n          Authorization: `Bearer AQUI_COLOCAR O TOKEN DE LEITURA DA API`,\n        },\n      },\n    );\n    TVGenres.value = response.data.genres;\n  });\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;h1&gt;G\u00eaneros de filmes&lt;/h1&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"genre in moviesGenres\" :key=\"genre.id\"&gt;{{ genre.name }}&lt;/li&gt;\n  &lt;/ul&gt;\n  &lt;hr /&gt;\n  &lt;h1&gt;G\u00eaneros de programas de TV&lt;/h1&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"genre in TVGenres\" :key=\"genre.id\"&gt;{{ genre.name }}&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n</code></pre> <p>Iniciamos importando o <code>ref</code> e o <code>onMounted</code> do Vue e o <code>axios</code>. Em seguida, criamos duas vari\u00e1veis reativas, <code>moviesGenres</code> e <code>TVGenres</code>, que ser\u00e3o utilizadas para armazenar os g\u00eaneros de filmes e de programas de TV, respectivamente.</p> <p>Em seguida, utilizamos o <code>onMounted</code> para executar uma fun\u00e7\u00e3o quando o componente for montado. Essa fun\u00e7\u00e3o \u00e9 ass\u00edncrona, pois utilizaremos o <code>await</code> para aguardar o retorno das requisi\u00e7\u00f5es \u00e0 API. Criamos uma vari\u00e1vel para armazenar o retorno da chamada \u00e0 API, e utilizamos o <code>await</code> para aguardar o retorno da chamada \u00e0 API. Em seguida, armazenamos os g\u00eaneros de filmes na vari\u00e1vel <code>moviesGenres</code> e os g\u00eaneros de programas de TV na vari\u00e1vel <code>TVGenres</code>.</p> <p>Perceba que armazenamos o retorno em uma vari\u00e1vel chamada <code>response</code>. Essa vari\u00e1vel \u00e9 criada com o <code>let</code> pois ser\u00e1 reutilizada para armazenar o retorno da chamada \u00e0 API de programas de TV. O retorno da chamada \u00e0 API cont\u00e9m um objeto com os seguintes campos:</p> <ul> <li>config: um objeto com a configura\u00e7\u00e3o da requisi\u00e7\u00e3o</li> <li>data: o corpo da resposta</li> <li>headers: um objeto com os cabe\u00e7alhos da resposta</li> <li>status: o c\u00f3digo de status da resposta</li> <li>statusText: a mensagem de status da resposta</li> </ul> <p>Por isso utilizamos <code>response.data</code> para acessar apenas o corpo da resposta. Nesse caso, conforme a documenta\u00e7\u00e3o da API, o corpo da resposta \u00e9 um objeto JSON com os seguintes campos:</p> <ul> <li>genres: um array de objetos JSON com os seguintes campos:</li> <li>id: o id do g\u00eanero</li> <li>name: o nome do g\u00eanero</li> </ul> <p>Por isso, utilizamos <code>response.data.genres</code> para acessar apenas o array de g\u00eaneros.</p>"},{"location":"tmdb/tmdb-no-vue/#configurando-o-axios","title":"Configurando o Axios","text":"<p>Note que no c\u00f3digo acima, a chave de leitura da API foi inserida diretamente no c\u00f3digo. Isso n\u00e3o \u00e9 uma boa pr\u00e1tica, pois a chave de leitura \u00e9 um dado sens\u00edvel que n\u00e3o deve ser exposto. Esse \u00e9 um dado sens\u00edvel que deve ser armazenado em um arquivo de configura\u00e7\u00e3o, que n\u00e3o deve ser enviado para o reposit\u00f3rio. Vamos resolver esse detalhe em aulas posteriores.</p> <p>No entanto, um outro detalhe no c\u00f3digo acima \u00e9 que em todas as chamadas \u00e0 API, foi necess\u00e1rio informar o endpoint completo, bem como o cabe\u00e7alho Authorization. Para evitar repetir essas informa\u00e7\u00f5es em todas as chamadas \u00e0 API, vamos configurar o Axios para que ele j\u00e1 inclua essas informa\u00e7\u00f5es em todas as chamadas \u00e0 API.</p> <p>Para isso, vamos criar um arquivo chamado <code>axios.js</code> na pasta <code>src/plugins</code> (Se a pasta plugins n\u00e3o existir, crie dentro da pasta src). Em seguida, vamos adicionar o seguinte conte\u00fado:</p> <pre><code>import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    Authorization: `Bearer COLOQUE AQUI A CHAVE DE LEITURA DA API`,\n  },\n});\n\nexport default api;\n</code></pre> <p>Nesse arquivo, importamos o Axios e criamos uma inst\u00e2ncia do Axios com o m\u00e9todo <code>create</code>. Esse m\u00e9todo recebe um objeto com as configura\u00e7\u00f5es da inst\u00e2ncia. Nesse caso, definimos a URL base da API e o cabe\u00e7alho Authorization. Em seguida, exportamos essa inst\u00e2ncia, chamada de <code>api</code>.</p>"},{"location":"tmdb/tmdb-no-vue/#utilizando-o-axios-modificado-nas-chamadas-a-api","title":"Utilizando o Axios modificado nas chamadas \u00e0 API","text":"<p>Agora, vamos alterar o arquivo <code>App.vue</code> para utilizar o Axios modificado. Para isso, vamos alterar a parte de <code>script</code> do arquivo <code>App.vue</code> para o seguinte:</p> <pre><code>&lt;script setup&gt;\n  import { ref, onMounted } from 'vue';\n  import api from './plugins/axios';\n\n  const moviesGenres = ref([]);\n  const TVGenres = ref([]);\n\n  onMounted(async () =&gt; {\n    let response = await api.get('genre/movie/list?language=pt-BR');\n    moviesGenres.value = response.data.genres;\n    response = await api.get('genre/tv/list?language=pt-BR');\n    TVGenres.value = response.data.genres;\n  });\n&lt;/script&gt;\n</code></pre> <p>Note que o arquivo ficou mais sucinto, facilitando a leitura e a manuten\u00e7\u00e3o do c\u00f3digo.</p>"},{"location":"tmdb/tmdb-visualizar-carregando/","title":"Tmdb visualizar carregando","text":""},{"location":"tmdb/tmdb-visualizar-carregando/#visualizar-icone-de-carregando","title":"Visualizar \u00edcone de carregando","text":"<p>Para facilitar a visualiza\u00e7\u00e3o do \u00edcone de carregando, poder\u00edamos criar um componente para isso, com toda a l\u00f3gica necess\u00e1ria para exibir o \u00edcone de carregando, bem como os estilos de CSS. Contudo, vamos fazer de uma forma mais simples, usando um componente p\u00fablico j\u00e1 desenvolvido chamado <code>vue-loading-overlay</code>. Para isso, vamos instalar esse componente com o seguinte comando no terminal:</p> <pre><code>npm install vue-loading-overlay\n</code></pre> <p>Em seguida, vamos abrir o arquivo <code>main.js</code> e adicionar o seguinte conte\u00fado na primeira linha:</p> <pre><code>import 'vue-loading-overlay/dist/css/index.css';\n</code></pre> <p>O restante do arquivo permanece inalterado.</p> <p>Agora, vamos abrir o arquivo <code>MoviesView.vue</code> e adicionar o seguinte conte\u00fado no bloco <code>template</code>, depois da tag <code>&lt;/ul&gt;</code>:</p> <pre><code>&lt;loading v-model:active=\"isLoading\" is-full-page /&gt;\n</code></pre> <p>Neste caso, adicionamos o componente <code>loading</code> que recebe o valor da vari\u00e1vel <code>isLoading</code> como par\u00e2metro. Al\u00e9m disso, definimos que o componente deve ocupar toda a p\u00e1gina com o par\u00e2metro <code>is-full-page</code>. Agora, vamos adicionar o seguinte conte\u00fado no bloco <code>script</code>:</p> <pre><code>&lt;script setup&gt;\n  import Loading from 'vue-loading-overlay';\n\n  const isLoading = ref(false);\n&lt;/script&gt;\n</code></pre> <p>Note que importamos o componente <code>Loading</code> do pacote <code>vue-loading-overlay</code> e criamos uma vari\u00e1vel reativa <code>isLoading</code> que indica se o \u00edcone de carregando deve ser exibido ou n\u00e3o. Sugiro que voc\u00ea organize o c\u00f3digo de forma que os <code>import</code>s fiquem no in\u00edcio do bloco <code>script</code> e as vari\u00e1veis reativas fiquem na sequ\u00eancia, antes da defini\u00e7\u00e3o das demais fun\u00e7\u00f5es.</p> <p>Agora, vamos alterar o m\u00e9todo <code>listMovies</code> para que ele altere o valor da vari\u00e1vel <code>isLoading</code> antes e depois de fazer a requisi\u00e7\u00e3o para a API, como segue:</p> <pre><code>&lt;script setup&gt;\n...\nconst listMovies = async (genreId) =&gt; {\n  isLoading.value = true;\n  const response = await api.get('discover/movie', {\n    params: {\n      with_genres: genreId,\n      language: 'pt-BR'\n    }\n  });\n  movies.value = response.data.results\n  isLoading.value = false;\n};\n...\n</code></pre> <p>Note que apenas fizemos uma pequena altera\u00e7\u00e3o na fun\u00e7\u00e3o, adicionando a linha <code>isLoading.value = true;</code> antes da chamada \u00e0 API e a linha <code>isLoading.value = false;</code> depois da chamada \u00e0 API.</p>"},{"location":"vuejs/","title":"Conhecendo o VueJs","text":""},{"location":"vuejs/#o-framework-vuejs","title":"O framework VueJs","text":"<p>O VueJs (1) \u00e9 um framework javascript para desenvolvimento de aplica\u00e7\u00f5es web. Ele \u00e9 um framework progressivo, sendo aplic\u00e1vel tanto em aplica\u00e7\u00f5es pequenas ou grandes, com ou sem o uso de bibliotecas adicionais. O VueJs \u00e9 um framework de c\u00f3digo aberto, mantido por uma comunidade de desenvolvedores. Ainda, ele prov\u00ea uma programa\u00e7\u00e3o reativa, que atualiza automaticamente a interface do usu\u00e1rio quando os dados s\u00e3o alterados. Tamb\u00e9m, \u00e9 baseado em componentes, o que permite a cria\u00e7\u00e3o de componentes reutiliz\u00e1veis, que aumenta a produtividade do desenvolvedor.</p> <ol> <li>pronuncia-se /vju:/, como no ingl\u00eas view</li> </ol> <p>Duas caracter\u00edsticas importantes do VueJs s\u00e3o:</p> <ul> <li>Renderiza\u00e7\u00e3o declarativa: o VueJs permite a cria\u00e7\u00e3o de templates HTML que s\u00e3o renderizados dinamicamente com base nos dados da aplica\u00e7\u00e3o. Essa renderiza\u00e7\u00e3o \u00e9 feita de forma declarativa, ou seja, o desenvolvedor declara o que deve ser renderizado, e n\u00e3o como deve ser renderizado. Isso permite que o VueJs fa\u00e7a o trabalho de atualizar a interface do usu\u00e1rio de forma eficiente.</li> <li>Programa\u00e7\u00e3o reativa: o VueJs rastreia automaticamente o estado de cada vari\u00e1vel declarada na aplica\u00e7\u00e3o, e atualiza a interface do usu\u00e1rio quando os dados s\u00e3o alterados. Isso permite que o desenvolvedor se concentre no desenvolvimento da aplica\u00e7\u00e3o, sem se preocupar com a atualiza\u00e7\u00e3o da interface do usu\u00e1rio.</li> </ul>"},{"location":"vuejs/#criacao-de-uma-aplicacao-vuejs","title":"Cria\u00e7\u00e3o de uma aplica\u00e7\u00e3o VueJS","text":"<p>Importante</p> <p>Antes de iniciar a cria\u00e7\u00e3o da aplica\u00e7\u00e3o, \u00e9 importante que voc\u00ea tenha o NodeJS instalado e configurado em seu ambiente.</p> <ul> <li>Garantir que os passos da Aula inicial foram executados.</li> <li>Crie uma nova pasta para o seu projeto e abra no VSCode.</li> <li>Abra a pasta do projeto no vscode (repita em voz alta: \"Nunca abra um arquivo, sempre abra a pasta.\").</li> </ul> <p>Para criar uma aplica\u00e7\u00e3o VueJS, abra o terminal no diret\u00f3rio em que voc\u00ea deseja criar o projeto e execute o comando:</p> <pre><code>npm init vue@latest [nome-do-projeto]\n</code></pre> <p>Note que usamos um par\u00e2metro <code>[nome-do-projeto]</code> que \u00e9 opcional. Se voc\u00ea informar este par\u00e2metro, ele criar\u00e1 um projeto com o nome informado, caso contr\u00e1rio, ele solicitar\u00e1 o nome do projeto.</p> <p>O comando anterior ir\u00e1 criar uma aplica\u00e7\u00e3o VueJS usando uma ferramenta de scaffolding chamada <code>create-vue</code>. Ele apresentar\u00e1 uma s\u00e9rie de perguntas para voc\u00ea. Responda conforme a seguir:</p> <ol> <li> <p>Project name: informe o nome do projeto. Este nome ser\u00e1 usado para criar a pasta do projeto.</p> </li> <li> <p>Select features to include in your project: selecione as funcionalidades que voc\u00ea deseja incluir no projeto. Voc\u00ea pode navegar pelas op\u00e7\u00f5es usando as setas do teclado e selecionar/deselecionar as op\u00e7\u00f5es usando a barra de espa\u00e7o. Abaixo, eu deixei um exemplo do que voc\u00ea deve pode escolher nesta etapa inicial do curso.</p> </li> </ol> <pre><code>\u25c6  Select features to include in your project: (\u2191/\u2193 to navigate, space to select, a to toggle all, enter to confirm)\n\u2502  \u25fb TypeScript\n\u2502  \u25fb JSX Support\n\u2502  \u25fb Router (SPA development)\n\u2502  \u25fb Pinia (state management)\n\u2502  \u25fb Vitest (unit testing)\n\u2502  \u25fb End-to-End Testing\n\u2502  \u25fc ESLint (error prevention)\n\u2502  \u25fc Prettier (code formatting)\n</code></pre> <ol> <li>Install Oxlint for faster linting: selecione <code>No</code> para n\u00e3o instalar o Oxlint.</li> </ol> <p>Ent\u00e3o ele far\u00e1 a cria\u00e7\u00e3o do projeto em uma pasta com o nome do projeto informado.</p> <p>Note que no exemplo anterior, escolhemos n\u00e3o usar o Vue Router, Pinia, Vitest, Cypress, ESLint e Prettier, bem como o suporte ao TypeScript e JSX. Voc\u00ea pode escolher o que desejar.</p> <p>Agora, abra no VSCode a pasta do projeto criado. Importante que voc\u00ea abra a pasta do projeto, e n\u00e3o um arquivo espec\u00edfico. Outro ponto importante: caso voc\u00ea tenha executado o comando de cria\u00e7\u00e3o do projeto j\u00e1 dentro do VS Code, eu sugiro que voc\u00ea reabra na pasta do projeto, pois o VS Code pode n\u00e3o reconhecer o projeto corretamente.</p> <p>Em seguida, basta executar os seguintes comandos:</p> <pre><code>npm install\nnpm run dev\n</code></pre> <p>O primeiro comando instala as depend\u00eancias do projeto. O segundo comando executa o servidor de desenvolvimento do VueJS. Em geral, o servidor estar\u00e1 em execu\u00e7\u00e3o na porta 5173, caso esta esteja livre. Para acessar a aplica\u00e7\u00e3o, basta abrir o navegador e acessar a URL <code>http://localhost:5173</code>.</p> <pre><code>  VITE v6.2.2  ready in 500 ms\n\n  \u279c  Local:   http://127.0.0.1:5173/\n  \u279c  Network: use --host to expose\n</code></pre> <p>A imagem mostra a tela inicial da aplica\u00e7\u00e3o VueJS.</p> <p></p> <p>Manter um reposit\u00f3rio Git</p> <p>\u00c9 muito importante que logo ap\u00f3s a cria\u00e7\u00e3o do projeto voc\u00ea crie um reposit\u00f3rio Git para o projeto. Para isso, voc\u00ea pode usar o pr\u00f3prio Visual Studio Code. Para isso, abra o menu <code>Source Control</code> e clique em <code>Initialize Repository</code>. Em seguida, clique em <code>Create Repository</code>. O Visual Studio Code ir\u00e1 criar um reposit\u00f3rio Git na pasta do projeto. Isso requer que o usu\u00e1rio tenha o Git instalado e configurado. Para mais informa\u00e7\u00f5es, consulte a Aula inicial.</p> <p>Tamb\u00e9m, \u00e9 importante que a cada altera\u00e7\u00e3o que voc\u00ea fizer no projeto, voc\u00ea fa\u00e7a um commit. Para isso, abra o menu <code>Source Control</code> e clique em <code>Stage All Changes</code>. Em seguida, clique em <code>Commit</code>. O Visual Studio Code ir\u00e1 criar um commit com as altera\u00e7\u00f5es realizadas. Para mais informa\u00e7\u00f5es, consulte a Aula inicial.</p>"},{"location":"vuejs/#estrutura-de-arquivos","title":"Estrutura de arquivos","text":"<p>A imagem a seguir mostra a estrutura de arquivos inicial do projeto.</p> <p></p> <p>Esta estrutura pode ser resumida da seguinte forma:</p> <ul> <li><code>node_modules</code>: pasta com as depend\u00eancias do projeto.</li> <li><code>public</code>: pasta com os arquivos est\u00e1ticos da aplica\u00e7\u00e3o.</li> <li><code>src</code>: pasta com os arquivos fonte da aplica\u00e7\u00e3o. Por padr\u00e3o, o arquivo <code>App.vue</code> \u00e9 o componente raiz da aplica\u00e7\u00e3o, enquanto o arquivo <code>main.js</code> \u00e9 o ponto de entrada da aplica\u00e7\u00e3o. Em geral, esta \u00e9 a pasta que voc\u00ea ir\u00e1 trabalhar.</li> <li><code>index.html</code>: arquivo raiz do projeto que define .</li> <li><code>package.json</code>: arquivo com as configura\u00e7\u00f5es do projeto.</li> <li><code>package-lock.json</code>: arquivo com as configura\u00e7\u00f5es de vers\u00f5es das depend\u00eancias do projeto.</li> <li><code>README.md</code>: arquivo com as instru\u00e7\u00f5es de instala\u00e7\u00e3o e execu\u00e7\u00e3o do projeto.</li> <li><code>vite.config.js</code>: arquivo com as configura\u00e7\u00f5es do servidor de desenvolvimento.</li> </ul>"},{"location":"vuejs/#o-arquivo-indexhtml","title":"O arquivo index.html","text":"<p>O arquivo <code>index.html</code> \u00e9 o arquivo raiz da aplica\u00e7\u00e3o. Ele define o elemento raiz da aplica\u00e7\u00e3o, que \u00e9 o elemento <code>&lt;div id=\"app\"&gt;</code>. Este elemento \u00e9 o elemento que ser\u00e1 substitu\u00eddo pelo VueJS. O arquivo <code>index.html</code> tamb\u00e9m define o arquivo <code>main.js</code> como o ponto de entrada da aplica\u00e7\u00e3o.</p> <p>O c\u00f3digo a seguir mostra o arquivo <code>index.html</code>:</p> index.html<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"UTF-8\" /&gt;\n    &lt;link rel=\"icon\" href=\"/favicon.ico\" /&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n    &lt;title&gt;Vite App&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"app\"&gt;&lt;/div&gt;\n    &lt;script type=\"module\" src=\"/src/main.js\"&gt;&lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Em geral, voc\u00ea n\u00e3o precisar\u00e1 alterar este arquivo. Contudo, alguns ajustes podem ser realizados. Por exemplo, voc\u00ea pode alterar o t\u00edtulo da p\u00e1gina, na linha 7, conforme o c\u00f3digo a seguir:</p> <pre><code>&lt;title&gt;Aplica\u00e7\u00e3o exemplo Vue3&lt;/title&gt;\n</code></pre> <p>Tamb\u00e9m, podem ser adicionados outras refer\u00eancias, como por exemplo, para um pacote de arquivos CSS.</p> <p>Note tamb\u00e9m que antes de fechar a tag <code>&lt;/body&gt;</code>, h\u00e1 uma refer\u00eancia para o arquivo <code>main.js</code>. Este arquivo \u00e9 o ponto de entrada da aplica\u00e7\u00e3o.</p>"},{"location":"vuejs/#o-arquivo-mainjs","title":"O arquivo main.js","text":"<p>Como comentando anteriormente, o arquivo <code>main.js</code> \u00e9 o ponto de entrada da aplica\u00e7\u00e3o. Ele \u00e9 respons\u00e1vel por carregar o VueJS e o componente raiz da aplica\u00e7\u00e3o. O c\u00f3digo a seguir mostra o arquivo <code>main.js</code>:</p> ./src/main.js<pre><code>import './assets/main.css';\n\nimport { createApp } from 'vue';\nimport App from './App.vue';\n\ncreateApp(App).mount('#app');\n</code></pre> <p>Neste exemplo, o arquivo <code>main.js</code> importa o m\u00e9todo <code>createApp</code> do pacote <code>vue</code>, respons\u00e1vel por criar a aplica\u00e7\u00e3o VueJS. Em seguida, o arquivo importa o componente raiz da aplica\u00e7\u00e3o, que \u00e9 o arquivo <code>App.vue</code>. E, por fim, o arquivo importa o arquivo <code>main.css</code>, que \u00e9 o arquivo de estilo da aplica\u00e7\u00e3o.</p> <p>Na \u00faltima linha, o arquivo chama o m\u00e9todo <code>createApp</code> passando o componente raiz da aplica\u00e7\u00e3o como par\u00e2metro. O m\u00e9todo <code>createApp</code> retorna um objeto que possui o m\u00e9todo <code>mount</code>, respons\u00e1vel por montar a aplica\u00e7\u00e3o no elemento raiz da aplica\u00e7\u00e3o, que \u00e9 o elemento <code>&lt;div id=\"app\"&gt;</code>. A div com o id <code>app</code> \u00e9 definida no arquivo <code>index.html</code>.</p> <p>Ao longo das atividades, voc\u00ea ir\u00e1 alterar este arquivo para adicionar novos componentes e novas funcionalidades.</p>"},{"location":"vuejs/#o-arquivo-appvue","title":"O arquivo App.vue","text":"<p>O arquivo <code>App.vue</code> \u00e9 o componente raiz da aplica\u00e7\u00e3o. Ele \u00e9 respons\u00e1vel por carregar os demais componentes da aplica\u00e7\u00e3o. O c\u00f3digo a seguir mostra a conte\u00fado padr\u00e3o, que vem com a instala\u00e7\u00e3o, do arquivo <code>App.vue</code>:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import HelloWorld from './components/HelloWorld.vue';\n  import TheWelcome from './components/TheWelcome.vue';\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header&gt;\n    &lt;img\n      alt=\"Vue logo\"\n      class=\"logo\"\n      src=\"./assets/logo.svg\"\n      width=\"125\"\n      height=\"125\"\n    /&gt;\n\n    &lt;div class=\"wrapper\"&gt;\n      &lt;HelloWorld msg=\"You did it!\" /&gt;\n    &lt;/div&gt;\n  &lt;/header&gt;\n\n  &lt;main&gt;\n    &lt;TheWelcome /&gt;\n  &lt;/main&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n  header {\n    line-height: 1.5;\n  }\n\n  .logo {\n    display: block;\n    margin: 0 auto 2rem;\n  }\n\n  @media (min-width: 1024px) {\n    header {\n      display: flex;\n      place-items: center;\n      padding-right: calc(var(--section-gap) / 2);\n    }\n\n    .logo {\n      margin: 0 2rem 0 0;\n    }\n\n    header .wrapper {\n      display: flex;\n      place-items: flex-start;\n      flex-wrap: wrap;\n    }\n  }\n&lt;/style&gt;\n</code></pre> <p>Neste momento, voc\u00ea n\u00e3o precisa entender o c\u00f3digo deste arquivo. Contudo, \u00e9 importante que voc\u00ea saiba que este \u00e9 o componente raiz da aplica\u00e7\u00e3o. Inicialmente, ele carrega dois componentes: <code>HelloWorld</code> e <code>TheWelcome</code>. Estes componentes s\u00e3o definidos nos arquivos <code>HelloWorld.vue</code> e <code>TheWelcome.vue</code>, respectivamente, ambos na pasta <code>./src/components</code>.</p> <p>N\u00e3o nos deteremos neste arquivo, pois ele ser\u00e1 alterado ao longo das atividades.</p>"},{"location":"vuejs/#componentes-de-arquivo-unico-single-file-components","title":"Componentes de arquivo \u00fanico (Single-file Components)","text":"<p>Os componentes de arquivo \u00fanico (Sigle-file Components) s\u00e3o uma forma de definir componentes no VueJs. S\u00e3o componentes que s\u00e3o definidos em um \u00fanico arquivo (arquivos <code>.vue</code>), encapsulando os components l\u00f3gicos (JavaScript), de template (HTML) e de estilos (CSS).</p> <p>O arquivo <code>App.vue</code>, apresentado anteriormente, \u00e9 um exemplo de componente de arquivo \u00fanico. Nesta etapa, faremos uma nova vers\u00e3o do arquivo <code>App.vue</code> e explicando cada parte do arquivo. O que desejamos fazer \u00e9 uma p\u00e1gina simples com dois bot\u00f5es: um respons\u00e1vel por incrementar uma unidade um valor e outro por decrementar uma unidade neste mesmo valor.</p> <p>Como explicado anteriormente, um componente VueJS tem tr\u00eas partes: l\u00f3gica, template e estilos. A estrutura de um componente de arquivo \u00fanico \u00e9 a seguinte:</p> ./src/App.vue<pre><code>&lt;script&gt;\n  // L\u00f3gica do componente\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;!-- Template do componente baseado em HTML --&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\n  /* Estilos do componente baseado em CSS */\n&lt;/style&gt;\n</code></pre> <p>A parte l\u00f3gica do componentes, escrita em JavaScript ou TypeScript pode ser desenvolvida usando API de op\u00e7\u00f5es ou API de composi\u00e7\u00e3o. Estudaremos essas duas formas na pr\u00f3xima etapa.</p> <p>Na parte de template o Vue usa uma sintaxe baseada em HTML, que permite a utiliza\u00e7\u00e3o de diretivas e express\u00f5es. As diretivas s\u00e3o instru\u00e7\u00f5es especiais que s\u00e3o adicionadas ao template para alterar o comportamento da renderiza\u00e7\u00e3o. As express\u00f5es s\u00e3o trechos de c\u00f3digo que s\u00e3o avaliados e renderizados como texto.</p> <p>O exemplo abaixo mostra um componente de arquivo \u00fanico, sem a l\u00f3gica (que ser\u00e1 apresentada a seguir), um template e um estilo:</p> ./src/App.vue<pre><code>&lt;script&gt;\n  // Ser\u00e1 apresentado a seguir\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;button @click=\"incrementarContador\"&gt;Incrementar&lt;/button&gt;\n  &lt;button @click=\"decrementarContador\"&gt;Decrementar&lt;/button&gt;\n  &lt;p&gt;Valor do contador \u00e9: {{ contador }}&lt;/p&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n  button {\n    font-weight: bold;\n  }\n&lt;/style&gt;\n</code></pre> <p>No bloco de estilos, o atributo <code>scoped</code> indica que os estilos definidos neste bloco s\u00e3o aplicados apenas ao componente. Isso significa que os estilos definidos neste bloco n\u00e3o afetam outros componentes. Foi definido um estilo para o elemento <code>button</code> que indica que a fonte ser\u00e1 apresentada em negrito.</p> <p>No bloco de template, foram definidos dois bot\u00f5es e um par\u00e1grafo. O primeiro bot\u00e3o tem um evento <code>click</code> associado a uma fun\u00e7\u00e3o chamada <code>incrementarContador</code>. O segundo bot\u00e3o tem um evento <code>click</code> associado a uma fun\u00e7\u00e3o chamada <code>decrementarContador</code>. O par\u00e1grafo apresenta o valor de uma vari\u00e1vel chamada <code>contador</code>.</p> <p>Ao longo do curso, vamos estudar os detalhes que podem ser utilizados usando a sintaxe de templates do Vue.</p>"},{"location":"vuejs/#estilos-de-escrita-de-um-componente-de-arquivo-unico","title":"Estilos de escrita de um componente de arquivo \u00fanico","text":"<p>Quanto \u00e0 parte l\u00f3gica, existem duas formas de serem escritas: usando API de op\u00e7\u00f5es (Options API) ou usando API de composi\u00e7\u00e3o (Composition API). A API de op\u00e7\u00f5es \u00e9 a forma original de escrever um componente de arquivo \u00fanico, presente desde a primeira vers\u00e3o do VueJS. A API de composi\u00e7\u00e3o \u00e9 uma forma mais recente de escrever um componente de arquivo \u00fanico, e ser\u00e1 a que daremos prefer\u00eancia neste tutorial.</p> <p>Implementaremos a parte l\u00f3gica do exemplo que estamos desenvolvendo usando as duas formas. Em ambos os casos o resultado ser\u00e1 o mesmo. Al\u00e9m disso, as diferen\u00e7as aparecem apenas na parte l\u00f3gica, sendo que a parte de template e de estilos s\u00e3o id\u00eanticas.</p>"},{"location":"vuejs/#usando-api-de-opcoes","title":"Usando API de op\u00e7\u00f5es","text":"<p>Com API de op\u00e7\u00f5es, o componente \u00e9 definido usando a propriedade <code>options</code> do objeto <code>Vue</code>. A propriedade <code>options</code> \u00e9 um objeto que cont\u00e9m as propriedades <code>data</code>, <code>methods</code>, <code>computed</code>, <code>watch</code>, <code>components</code>, <code>directives</code>, <code>filters</code>, <code>mixins</code>, <code>extends</code>, <code>provide</code> e <code>inject</code>. Cada uma dessas propriedades \u00e9 respons\u00e1vel por definir um tipo de dado ou comportamento do componente.</p> <p>O c\u00f3digo abaixo mostra um exemplo de componente de arquivo \u00fanico usando API de op\u00e7\u00f5es:</p> ./src/App.vue<pre><code>&lt;script&gt;\n  export default {\n    data() {\n      return {\n        contador: 0,\n      };\n    },\n    methods: {\n      incrementarContador() {\n        this.contador++;\n      },\n      decrementarContador() {\n        this.contador--;\n      },\n    },\n    mounted() {\n      console.log(`O valor inicial do contador \u00e9 ${this.contador}.`);\n    },\n  };\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;!-- Template j\u00e1 apresentada --&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n  /* Estilos j\u00e1 apresentados */\n&lt;/style&gt;\n</code></pre> <p>Neste exemplo, note que \u00e9 exportado um objeto com v\u00e1rias propriedades. A propriedade <code>data</code> \u00e9 respons\u00e1vel por definir uma vari\u00e1vel chamada <code>contador</code> que \u00e9 inicializada com o valor <code>0</code>. Nesse caso, a sintaxe exige que <code>data</code> seja uma fun\u00e7\u00e3o que retorna um objeto. As propriedades desse objeto de retorno s\u00e3o reconhecidas pelo VueJs como vari\u00e1veis.</p> <p>A propriedade <code>methods</code> \u00e9 respons\u00e1vel por definir duas fun\u00e7\u00f5es: <code>incrementarContador</code> e <code>decrementarContador</code>. A fun\u00e7\u00e3o <code>incrementarContador</code> incrementa em uma unidade o valor da vari\u00e1vel <code>contador</code>. A fun\u00e7\u00e3o <code>decrementarContador</code> decrementa em uma unidade o valor da vari\u00e1vel <code>contador</code>. Note que no bloco de template, os eventos <code>click</code> dos bot\u00f5es est\u00e3o associados a essas fun\u00e7\u00f5es.</p> <p>A propriedade <code>mounted</code> \u00e9 respons\u00e1vel por definir uma fun\u00e7\u00e3o que ser\u00e1 executada quando o componente for montado. Neste caso, a fun\u00e7\u00e3o imprime no console o valor inicial da vari\u00e1vel <code>contador</code>.</p> <p>Dicas de uso do console</p> <p>Para visualizar os resultados no console, \u00e9 necess\u00e1rio abrir o console do navegador (F12 no Chrome).</p>"},{"location":"vuejs/#usando-api-de-composicao","title":"Usando API de composi\u00e7\u00e3o","text":"<p>Com API de composi\u00e7\u00e3o, a l\u00f3gica do componente \u00e9 definida usando fun\u00e7\u00f5es, chamadas de fun\u00e7\u00f5es de composi\u00e7\u00e3o. As fun\u00e7\u00f5es de composi\u00e7\u00e3o podem ser importadas de bibliotecas externas ou podem ser definidas pelo pr\u00f3prio desenvolvedor.</p> <p>A API de composi\u00e7\u00e3o \u00e9 usada tipicamente com <code>&lt;script setup&gt;</code>. O atributo <code>setup</code> \u00e9 uma propriedade especial que faz o Vue realizar transforma\u00e7\u00f5es em tempo de compila\u00e7\u00e3o que permitem usar a API de composi\u00e7\u00e3o com menos boilerplate (repeti\u00e7\u00e3o de c\u00f3digos). Por exemplo, importa\u00e7\u00f5es e vari\u00e1veis ou fun\u00e7\u00f5es declaradas no bloco de <code>&lt;script setup&gt;</code> podem ser usadas diretamente no bloco de template, sem configura\u00e7\u00f5es adicionais.</p> <p>Abaixo, temos um exemplo de componente de arquivo \u00fanico usando API de composi\u00e7\u00e3o:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { ref, onMounted } from 'vue';\n\n  const contador = ref(0);\n\n  function incrementarContador() {\n    contador.value++;\n  }\n  function decrementarContador() {\n    contador.value--;\n  }\n\n  onMounted(() =&gt; {\n    console.log(`O valor inicial do contador \u00e9 ${contador.value}.`);\n  });\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;!-- Template j\u00e1 apresentada --&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n  /* Estilos j\u00e1 apresentados */\n&lt;/style&gt;\n</code></pre> <p>Neste exemplo, note que \u00e9 importada a fun\u00e7\u00e3o <code>ref</code> da biblioteca <code>vue</code>. A fun\u00e7\u00e3o <code>ref</code> \u00e9 respons\u00e1vel por criar uma vari\u00e1vel reativa (estudaremos esse conceito em breve). A vari\u00e1vel <code>contador</code> \u00e9 inicializada com o valor <code>0</code>.</p> <p>As fun\u00e7\u00f5es <code>incrementarContador</code> e <code>decrementarContador</code> s\u00e3o respons\u00e1veis por incrementar e decrementar, respectivamente, em uma unidade o valor da vari\u00e1vel <code>contador</code>. Note que no bloco de template, os eventos <code>click</code> dos bot\u00f5es est\u00e3o associados a essas fun\u00e7\u00f5es.</p> <p>Por fim, a fun\u00e7\u00e3o <code>onMounted</code> \u00e9 respons\u00e1vel por definir uma fun\u00e7\u00e3o que ser\u00e1 executada quando o componente for montado. Neste caso, a fun\u00e7\u00e3o imprime no console o valor inicial da vari\u00e1vel <code>contador</code>.</p>"},{"location":"vuejs/#consideracoes-importantes","title":"Considera\u00e7\u00f5es importantes","text":"<p>Ambos os exemplos apresentados acima s\u00e3o equivalentes. A diferen\u00e7a entre eles \u00e9 que o primeiro usa API de op\u00e7\u00f5es e o segundo usa API de composi\u00e7\u00e3o. Tamb\u00e9m os dois estilos de escrita da parte l\u00f3gica podem ser usados em um mesmo projeto. Na pr\u00e1tica, a API de op\u00e7\u00e3o \u00e9 constru\u00edda sobre a API de composi\u00e7\u00e3o.</p> <p>A API de op\u00e7\u00f5es \u00e9 centrada no conceito de uma inst\u00e2ncia de componente, que em geral \u00e9 mais adapt\u00e1vel aos desenvolvedores que preferem o modelo baseado em classes, oriundo da Orienta\u00e7\u00e3o a Objetos.</p> <p>A API de composi\u00e7\u00e3o \u00e9 centrada no conceito de fun\u00e7\u00f5es, que em geral \u00e9 mais adapt\u00e1vel aos desenvolvedores que preferem o modelo baseado em fun\u00e7\u00f5es, oriundo da Programa\u00e7\u00e3o Funcional.</p> <p>Mas lembre, voc\u00ea n\u00e3o precisa usar uma API ou outra. Voc\u00ea pode usar as duas APIs em um mesmo projeto, dependendo da situa\u00e7\u00e3o e complexidade do componente.</p> <p>A figura abaixo mostra o resultado da aplica\u00e7\u00e3o exemplo apresentada acima. Note que o valor inicial do contador \u00e9 impresso no console.</p> <p></p>"},{"location":"vuejs/#deploy-da-aplicacao","title":"Deploy da aplica\u00e7\u00e3o","text":"<p>Durante o desenvolvimento, a aplica\u00e7\u00e3o \u00e9 executada localmente, no computador do desenvolvedor. Para que a aplica\u00e7\u00e3o possa ser acessada por outros usu\u00e1rios, ela precisa ser publicada em um servidor.</p> <p>Duas etapas s\u00e3o necess\u00e1rias para publicar uma aplica\u00e7\u00e3o VueJs:</p> <ul> <li>Compila\u00e7\u00e3o da aplica\u00e7\u00e3o</li> <li>Publica\u00e7\u00e3o da aplica\u00e7\u00e3o</li> </ul>"},{"location":"vuejs/#compilacao-da-aplicacao","title":"Compila\u00e7\u00e3o da aplica\u00e7\u00e3o","text":"<p>A compila\u00e7\u00e3o da aplica\u00e7\u00e3o \u00e9 feita pelo comando:</p> <pre><code>npm run build\n</code></pre> <p>Esse comando gera uma pasta <code>dist</code> com os arquivos est\u00e1ticos da aplica\u00e7\u00e3o. Esses arquivos s\u00e3o os que ser\u00e3o publicados no servidor.</p> <p>Os arquivos gerados na pasta <code>dist</code> s\u00e3o os mesmos que s\u00e3o gerados pelo comando <code>npm run serve</code>. A diferen\u00e7a \u00e9 que, ao executar o comando <code>npm run serve</code>, os arquivos s\u00e3o servidos pelo servidor de desenvolvimento, que \u00e9 executado localmente. J\u00e1 ao executar o comando <code>npm run build</code>, os arquivos s\u00e3o gerados para serem servidos por um servidor web.</p> <p>Al\u00e9m disso, esses arquivos s\u00e3o otimizados para serem servidos em produ\u00e7\u00e3o. Por exemplo, os arquivos CSS e JS s\u00e3o minificados, e os arquivos de imagem s\u00e3o otimizados.</p>"},{"location":"vuejs/#publicacao-da-aplicacao","title":"Publica\u00e7\u00e3o da aplica\u00e7\u00e3o","text":"<p>A publica\u00e7\u00e3o da aplica\u00e7\u00e3o \u00e9 feita copiando os arquivos da pasta <code>dist</code> para o servidor web. Essa etapa pode ser feita de diversas formas, dependendo do servidor web utilizado. Por exemplo, voc\u00ea pode instalar um servidor Web usando o Ngix ou o Apache, ou voc\u00ea pode utilizar um servi\u00e7o de hospedagem de sites.</p> <p>Neste curso, vamos utilizar o servi\u00e7o de hospedagem de sites Surge. O Surge \u00e9 um servi\u00e7o de hospedagem de sites est\u00e1ticos, que permite a publica\u00e7\u00e3o de sites gratuitamente. Para utilizar o Surge, \u00e9 necess\u00e1rio ter uma aplica\u00e7\u00e3o de linha de comando instalada. Essa aplica\u00e7\u00e3o \u00e9 o Surge, que pode ser instalado com o comando:</p> <pre><code>npm install -g surge\n</code></pre> <p>Ao executar o comando <code>surge</code>, o Surge solicita o e-mail e a senha do usu\u00e1rio. Esses dados s\u00e3o utilizados para autenticar o usu\u00e1rio no servi\u00e7o. Caso o usu\u00e1rio n\u00e3o possua uma conta no Surge, o comando criar\u00e1 uma conta para o usu\u00e1rio, com os dados informados.</p> <p>Ap\u00f3s a autentica\u00e7\u00e3o, o Surge solicita o caminho da pasta que ser\u00e1 publicada. Neste caso, o caminho \u00e9 <code>dist</code>. O Surge ent\u00e3o publica a aplica\u00e7\u00e3o, e exibe a URL onde a aplica\u00e7\u00e3o foi publicada.</p> <p>Para publicar a aplica\u00e7\u00e3o, execute o comando, de prefer\u00eancia dentro da pasta <code>dist</code>:</p> <pre><code>surge\n</code></pre> <p>Algumas dicas importantes:</p> <ul> <li>Caso algum usu\u00e1rio j\u00e1 esteja autenticado no Surge, o comando <code>surge</code> publicar\u00e1 a aplica\u00e7\u00e3o para o usu\u00e1rio autenticado. Para publicar a aplica\u00e7\u00e3o para outro usu\u00e1rio, \u00e9 necess\u00e1rio deslogar do Surge, utilizando o comando <code>surge logout</code>.</li> <li>O usu\u00e1rio correto pode ser verificado executando o comando <code>surge whoami</code>. Caso o comando retorne um e-mail, significa que o usu\u00e1rio est\u00e1 autenticado. Caso o comando retorne <code>Not logged in</code>, significa que o usu\u00e1rio n\u00e3o est\u00e1 autenticado.</li> <li>Sempre que novas altera\u00e7\u00f5es forem feitas na aplica\u00e7\u00e3o, \u00e9 necess\u00e1rio executar o comando <code>npm run build</code> para gerar os arquivos est\u00e1ticos, e ent\u00e3o executar o comando <code>surge</code> para publicar a aplica\u00e7\u00e3o.</li> </ul>"},{"location":"vuejs/#exercicios","title":"Exerc\u00edcios","text":"<p>Para exercitar o que foi aprendido, segue uma lista de exerc\u00edcios para serem realizados.</p> <ol> <li>Altere a aplica\u00e7\u00e3o exemplo, n\u00e3o permitindo que o valor do contador seja menor que zero.</li> <li>Inclua um bot\u00e3o que reinicia o valor do contador para zero.</li> </ol> <p>Sugiro que ambos os exerc\u00edcios sejam realizados usando a API de composi\u00e7\u00e3o.</p>"},{"location":"vuejs/#correcao-dos-exercicios","title":"Corre\u00e7\u00e3o dos exerc\u00edcios","text":"<p>Abaixo apresento uma proposta de corre\u00e7\u00e3o dos exerc\u00edcios. A corre\u00e7\u00e3o \u00e9 apresentada em dois exemplos: um usando a API de op\u00e7\u00f5es e outro usando a API de composi\u00e7\u00e3o. Sugiro que voc\u00ea tente resolver os exerc\u00edcios antes de ver a corre\u00e7\u00e3o.</p> Corre\u00e7\u00e3o dos exerc\u00edcios <p>Abaixo as corre\u00e7\u00f5es dos exerc\u00edcios</p> Corre\u00e7\u00e3o usando a API de op\u00e7\u00f5esCorre\u00e7\u00e3o usando a API de composi\u00e7\u00e3o ./src/App.vue<pre><code>&lt;script&gt;\n  export default {\n    data() {\n      return {\n        contador: 0,\n      };\n    },\n    methods: {\n      incrementar() {\n        this.contador++;\n      },\n      decrementar() {\n        if (this.contador &gt; 0) {\n          this.contador--;\n        }\n      },\n      reiniciar() {\n        this.contador = 0;\n      },\n    },\n  };\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;Contador&lt;/h1&gt;\n    &lt;p&gt; {{ contador }} &lt;/p&gt;\n    &lt;button @click=\"incrementar\"&gt;Incrementar&lt;/button&gt;\n    &lt;button @click=\"decrementar\"&gt;Decrementar&lt;/button&gt;\n    &lt;button @click=\"reiniciar\"&gt;Reiniciar&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { ref } from 'vue';\n\n  const contador = ref(0);\n\n  function incrementar() {\n    contador.value++;\n  }\n\n  function decrementar() {\n    if (contador.value &gt; 0) {\n      contador.value--;\n    }\n  }\n\n  function reiniciar() {\n    contador.value = 0;\n  }\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;Contador&lt;/h1&gt;\n    &lt;p&gt; {{ contador }} &lt;/p&gt;\n    &lt;button @click=\"incrementar\"&gt;Incrementar&lt;/button&gt;\n    &lt;button @click=\"decrementar\"&gt;Decrementar&lt;/button&gt;\n    &lt;button @click=\"reiniciar\"&gt;Reiniciar&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"vuejs/correcao-exercicios/","title":"Correcao exercicios","text":""},{"location":"vuejs/correcao-exercicios/#correcao-dos-exercicios","title":"Corre\u00e7\u00e3o dos exerc\u00edcios","text":"<p>Abaixo apresento uma proposta de corre\u00e7\u00e3o dos exerc\u00edcios. A corre\u00e7\u00e3o \u00e9 apresentada em dois exemplos: um usando a API de op\u00e7\u00f5es e outro usando a API de composi\u00e7\u00e3o. Sugiro que voc\u00ea tente resolver os exerc\u00edcios antes de ver a corre\u00e7\u00e3o.</p> Corre\u00e7\u00e3o dos exerc\u00edcios <p>Abaixo as corre\u00e7\u00f5es dos exerc\u00edcios</p> Corre\u00e7\u00e3o usando a API de op\u00e7\u00f5esCorre\u00e7\u00e3o usando a API de composi\u00e7\u00e3o ./src/App.vue<pre><code>&lt;script&gt;\n  export default {\n    data() {\n      return {\n        contador: 0,\n      };\n    },\n    methods: {\n      incrementar() {\n        this.contador++;\n      },\n      decrementar() {\n        if (this.contador &gt; 0) {\n          this.contador--;\n        }\n      },\n      reiniciar() {\n        this.contador = 0;\n      },\n    },\n  };\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;Contador&lt;/h1&gt;\n    &lt;p&gt; {{ contador }} &lt;/p&gt;\n    &lt;button @click=\"incrementar\"&gt;Incrementar&lt;/button&gt;\n    &lt;button @click=\"decrementar\"&gt;Decrementar&lt;/button&gt;\n    &lt;button @click=\"reiniciar\"&gt;Reiniciar&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { ref } from 'vue';\n\n  const contador = ref(0);\n\n  function incrementar() {\n    contador.value++;\n  }\n\n  function decrementar() {\n    if (contador.value &gt; 0) {\n      contador.value--;\n    }\n  }\n\n  function reiniciar() {\n    contador.value = 0;\n  }\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;Contador&lt;/h1&gt;\n    &lt;p&gt; {{ contador }} &lt;/p&gt;\n    &lt;button @click=\"incrementar\"&gt;Incrementar&lt;/button&gt;\n    &lt;button @click=\"decrementar\"&gt;Decrementar&lt;/button&gt;\n    &lt;button @click=\"reiniciar\"&gt;Reiniciar&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"vuejs/criar-aplicacao-vuejs/","title":"Criar aplicacao vuejs","text":""},{"location":"vuejs/criar-aplicacao-vuejs/#criacao-de-uma-aplicacao-vuejs","title":"Cria\u00e7\u00e3o de uma aplica\u00e7\u00e3o VueJS","text":"<p>Importante</p> <p>Antes de iniciar a cria\u00e7\u00e3o da aplica\u00e7\u00e3o, \u00e9 importante que voc\u00ea tenha o NodeJS instalado e configurado em seu ambiente.</p> <ul> <li>Garantir que os passos da Aula inicial foram executados.</li> <li>Crie uma nova pasta para o seu projeto e abra no VSCode.</li> <li>Abra a pasta do projeto no vscode (repita em voz alta: \"Nunca abra um arquivo, sempre abra a pasta.\").</li> </ul> <p>Para criar uma aplica\u00e7\u00e3o VueJS, abra o terminal no diret\u00f3rio em que voc\u00ea deseja criar o projeto e execute o comando:</p> <pre><code>npm init vue@latest [nome-do-projeto]\n</code></pre> <p>Note que usamos um par\u00e2metro <code>[nome-do-projeto]</code> que \u00e9 opcional. Se voc\u00ea informar este par\u00e2metro, ele criar\u00e1 um projeto com o nome informado, caso contr\u00e1rio, ele solicitar\u00e1 o nome do projeto.</p> <p>O comando anterior ir\u00e1 criar uma aplica\u00e7\u00e3o VueJS usando uma ferramenta de scaffolding chamada <code>create-vue</code>. Ele apresentar\u00e1 uma s\u00e9rie de perguntas para voc\u00ea. Responda conforme a seguir:</p> <ol> <li> <p>Project name: informe o nome do projeto. Este nome ser\u00e1 usado para criar a pasta do projeto.</p> </li> <li> <p>Select features to include in your project: selecione as funcionalidades que voc\u00ea deseja incluir no projeto. Voc\u00ea pode navegar pelas op\u00e7\u00f5es usando as setas do teclado e selecionar/deselecionar as op\u00e7\u00f5es usando a barra de espa\u00e7o. Abaixo, eu deixei um exemplo do que voc\u00ea deve pode escolher nesta etapa inicial do curso.</p> </li> </ol> <pre><code>\u25c6  Select features to include in your project: (\u2191/\u2193 to navigate, space to select, a to toggle all, enter to confirm)\n\u2502  \u25fb TypeScript\n\u2502  \u25fb JSX Support\n\u2502  \u25fb Router (SPA development)\n\u2502  \u25fb Pinia (state management)\n\u2502  \u25fb Vitest (unit testing)\n\u2502  \u25fb End-to-End Testing\n\u2502  \u25fc ESLint (error prevention)\n\u2502  \u25fc Prettier (code formatting)\n</code></pre> <ol> <li>Install Oxlint for faster linting: selecione <code>No</code> para n\u00e3o instalar o Oxlint.</li> </ol> <p>Ent\u00e3o ele far\u00e1 a cria\u00e7\u00e3o do projeto em uma pasta com o nome do projeto informado.</p> <p>Note que no exemplo anterior, escolhemos n\u00e3o usar o Vue Router, Pinia, Vitest, Cypress, ESLint e Prettier, bem como o suporte ao TypeScript e JSX. Voc\u00ea pode escolher o que desejar.</p> <p>Agora, abra no VSCode a pasta do projeto criado. Importante que voc\u00ea abra a pasta do projeto, e n\u00e3o um arquivo espec\u00edfico. Outro ponto importante: caso voc\u00ea tenha executado o comando de cria\u00e7\u00e3o do projeto j\u00e1 dentro do VS Code, eu sugiro que voc\u00ea reabra na pasta do projeto, pois o VS Code pode n\u00e3o reconhecer o projeto corretamente.</p> <p>Em seguida, basta executar os seguintes comandos:</p> <pre><code>npm install\nnpm run dev\n</code></pre> <p>O primeiro comando instala as depend\u00eancias do projeto. O segundo comando executa o servidor de desenvolvimento do VueJS. Em geral, o servidor estar\u00e1 em execu\u00e7\u00e3o na porta 5173, caso esta esteja livre. Para acessar a aplica\u00e7\u00e3o, basta abrir o navegador e acessar a URL <code>http://localhost:5173</code>.</p> <pre><code>  VITE v6.2.2  ready in 500 ms\n\n  \u279c  Local:   http://127.0.0.1:5173/\n  \u279c  Network: use --host to expose\n</code></pre> <p>A imagem mostra a tela inicial da aplica\u00e7\u00e3o VueJS.</p> <p></p> <p>Manter um reposit\u00f3rio Git</p> <p>\u00c9 muito importante que logo ap\u00f3s a cria\u00e7\u00e3o do projeto voc\u00ea crie um reposit\u00f3rio Git para o projeto. Para isso, voc\u00ea pode usar o pr\u00f3prio Visual Studio Code. Para isso, abra o menu <code>Source Control</code> e clique em <code>Initialize Repository</code>. Em seguida, clique em <code>Create Repository</code>. O Visual Studio Code ir\u00e1 criar um reposit\u00f3rio Git na pasta do projeto. Isso requer que o usu\u00e1rio tenha o Git instalado e configurado. Para mais informa\u00e7\u00f5es, consulte a Aula inicial.</p> <p>Tamb\u00e9m, \u00e9 importante que a cada altera\u00e7\u00e3o que voc\u00ea fizer no projeto, voc\u00ea fa\u00e7a um commit. Para isso, abra o menu <code>Source Control</code> e clique em <code>Stage All Changes</code>. Em seguida, clique em <code>Commit</code>. O Visual Studio Code ir\u00e1 criar um commit com as altera\u00e7\u00f5es realizadas. Para mais informa\u00e7\u00f5es, consulte a Aula inicial.</p>"},{"location":"vuejs/criar-aplicacao-vuejs/#estrutura-de-arquivos","title":"Estrutura de arquivos","text":"<p>A imagem a seguir mostra a estrutura de arquivos inicial do projeto.</p> <p></p> <p>Esta estrutura pode ser resumida da seguinte forma:</p> <ul> <li><code>node_modules</code>: pasta com as depend\u00eancias do projeto.</li> <li><code>public</code>: pasta com os arquivos est\u00e1ticos da aplica\u00e7\u00e3o.</li> <li><code>src</code>: pasta com os arquivos fonte da aplica\u00e7\u00e3o. Por padr\u00e3o, o arquivo <code>App.vue</code> \u00e9 o componente raiz da aplica\u00e7\u00e3o, enquanto o arquivo <code>main.js</code> \u00e9 o ponto de entrada da aplica\u00e7\u00e3o. Em geral, esta \u00e9 a pasta que voc\u00ea ir\u00e1 trabalhar.</li> <li><code>index.html</code>: arquivo raiz do projeto que define .</li> <li><code>package.json</code>: arquivo com as configura\u00e7\u00f5es do projeto.</li> <li><code>package-lock.json</code>: arquivo com as configura\u00e7\u00f5es de vers\u00f5es das depend\u00eancias do projeto.</li> <li><code>README.md</code>: arquivo com as instru\u00e7\u00f5es de instala\u00e7\u00e3o e execu\u00e7\u00e3o do projeto.</li> <li><code>vite.config.js</code>: arquivo com as configura\u00e7\u00f5es do servidor de desenvolvimento.</li> </ul>"},{"location":"vuejs/criar-aplicacao-vuejs/#o-arquivo-indexhtml","title":"O arquivo index.html","text":"<p>O arquivo <code>index.html</code> \u00e9 o arquivo raiz da aplica\u00e7\u00e3o. Ele define o elemento raiz da aplica\u00e7\u00e3o, que \u00e9 o elemento <code>&lt;div id=\"app\"&gt;</code>. Este elemento \u00e9 o elemento que ser\u00e1 substitu\u00eddo pelo VueJS. O arquivo <code>index.html</code> tamb\u00e9m define o arquivo <code>main.js</code> como o ponto de entrada da aplica\u00e7\u00e3o.</p> <p>O c\u00f3digo a seguir mostra o arquivo <code>index.html</code>:</p> index.html<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"UTF-8\" /&gt;\n    &lt;link rel=\"icon\" href=\"/favicon.ico\" /&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n    &lt;title&gt;Vite App&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"app\"&gt;&lt;/div&gt;\n    &lt;script type=\"module\" src=\"/src/main.js\"&gt;&lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Em geral, voc\u00ea n\u00e3o precisar\u00e1 alterar este arquivo. Contudo, alguns ajustes podem ser realizados. Por exemplo, voc\u00ea pode alterar o t\u00edtulo da p\u00e1gina, na linha 7, conforme o c\u00f3digo a seguir:</p> <pre><code>&lt;title&gt;Aplica\u00e7\u00e3o exemplo Vue3&lt;/title&gt;\n</code></pre> <p>Tamb\u00e9m, podem ser adicionados outras refer\u00eancias, como por exemplo, para um pacote de arquivos CSS.</p> <p>Note tamb\u00e9m que antes de fechar a tag <code>&lt;/body&gt;</code>, h\u00e1 uma refer\u00eancia para o arquivo <code>main.js</code>. Este arquivo \u00e9 o ponto de entrada da aplica\u00e7\u00e3o.</p>"},{"location":"vuejs/criar-aplicacao-vuejs/#o-arquivo-mainjs","title":"O arquivo main.js","text":"<p>Como comentando anteriormente, o arquivo <code>main.js</code> \u00e9 o ponto de entrada da aplica\u00e7\u00e3o. Ele \u00e9 respons\u00e1vel por carregar o VueJS e o componente raiz da aplica\u00e7\u00e3o. O c\u00f3digo a seguir mostra o arquivo <code>main.js</code>:</p> ./src/main.js<pre><code>import './assets/main.css';\n\nimport { createApp } from 'vue';\nimport App from './App.vue';\n\ncreateApp(App).mount('#app');\n</code></pre> <p>Neste exemplo, o arquivo <code>main.js</code> importa o m\u00e9todo <code>createApp</code> do pacote <code>vue</code>, respons\u00e1vel por criar a aplica\u00e7\u00e3o VueJS. Em seguida, o arquivo importa o componente raiz da aplica\u00e7\u00e3o, que \u00e9 o arquivo <code>App.vue</code>. E, por fim, o arquivo importa o arquivo <code>main.css</code>, que \u00e9 o arquivo de estilo da aplica\u00e7\u00e3o.</p> <p>Na \u00faltima linha, o arquivo chama o m\u00e9todo <code>createApp</code> passando o componente raiz da aplica\u00e7\u00e3o como par\u00e2metro. O m\u00e9todo <code>createApp</code> retorna um objeto que possui o m\u00e9todo <code>mount</code>, respons\u00e1vel por montar a aplica\u00e7\u00e3o no elemento raiz da aplica\u00e7\u00e3o, que \u00e9 o elemento <code>&lt;div id=\"app\"&gt;</code>. A div com o id <code>app</code> \u00e9 definida no arquivo <code>index.html</code>.</p> <p>Ao longo das atividades, voc\u00ea ir\u00e1 alterar este arquivo para adicionar novos componentes e novas funcionalidades.</p>"},{"location":"vuejs/criar-aplicacao-vuejs/#o-arquivo-appvue","title":"O arquivo App.vue","text":"<p>O arquivo <code>App.vue</code> \u00e9 o componente raiz da aplica\u00e7\u00e3o. Ele \u00e9 respons\u00e1vel por carregar os demais componentes da aplica\u00e7\u00e3o. O c\u00f3digo a seguir mostra a conte\u00fado padr\u00e3o, que vem com a instala\u00e7\u00e3o, do arquivo <code>App.vue</code>:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import HelloWorld from './components/HelloWorld.vue';\n  import TheWelcome from './components/TheWelcome.vue';\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;header&gt;\n    &lt;img\n      alt=\"Vue logo\"\n      class=\"logo\"\n      src=\"./assets/logo.svg\"\n      width=\"125\"\n      height=\"125\"\n    /&gt;\n\n    &lt;div class=\"wrapper\"&gt;\n      &lt;HelloWorld msg=\"You did it!\" /&gt;\n    &lt;/div&gt;\n  &lt;/header&gt;\n\n  &lt;main&gt;\n    &lt;TheWelcome /&gt;\n  &lt;/main&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n  header {\n    line-height: 1.5;\n  }\n\n  .logo {\n    display: block;\n    margin: 0 auto 2rem;\n  }\n\n  @media (min-width: 1024px) {\n    header {\n      display: flex;\n      place-items: center;\n      padding-right: calc(var(--section-gap) / 2);\n    }\n\n    .logo {\n      margin: 0 2rem 0 0;\n    }\n\n    header .wrapper {\n      display: flex;\n      place-items: flex-start;\n      flex-wrap: wrap;\n    }\n  }\n&lt;/style&gt;\n</code></pre> <p>Neste momento, voc\u00ea n\u00e3o precisa entender o c\u00f3digo deste arquivo. Contudo, \u00e9 importante que voc\u00ea saiba que este \u00e9 o componente raiz da aplica\u00e7\u00e3o. Inicialmente, ele carrega dois componentes: <code>HelloWorld</code> e <code>TheWelcome</code>. Estes componentes s\u00e3o definidos nos arquivos <code>HelloWorld.vue</code> e <code>TheWelcome.vue</code>, respectivamente, ambos na pasta <code>./src/components</code>.</p> <p>N\u00e3o nos deteremos neste arquivo, pois ele ser\u00e1 alterado ao longo das atividades.</p>"},{"location":"vuejs/deploy-aplicacao/","title":"Deploy aplicacao","text":""},{"location":"vuejs/deploy-aplicacao/#deploy-da-aplicacao","title":"Deploy da aplica\u00e7\u00e3o","text":"<p>Durante o desenvolvimento, a aplica\u00e7\u00e3o \u00e9 executada localmente, no computador do desenvolvedor. Para que a aplica\u00e7\u00e3o possa ser acessada por outros usu\u00e1rios, ela precisa ser publicada em um servidor.</p> <p>Duas etapas s\u00e3o necess\u00e1rias para publicar uma aplica\u00e7\u00e3o VueJs:</p> <ul> <li>Compila\u00e7\u00e3o da aplica\u00e7\u00e3o</li> <li>Publica\u00e7\u00e3o da aplica\u00e7\u00e3o</li> </ul>"},{"location":"vuejs/deploy-aplicacao/#compilacao-da-aplicacao","title":"Compila\u00e7\u00e3o da aplica\u00e7\u00e3o","text":"<p>A compila\u00e7\u00e3o da aplica\u00e7\u00e3o \u00e9 feita pelo comando:</p> <pre><code>npm run build\n</code></pre> <p>Esse comando gera uma pasta <code>dist</code> com os arquivos est\u00e1ticos da aplica\u00e7\u00e3o. Esses arquivos s\u00e3o os que ser\u00e3o publicados no servidor.</p> <p>Os arquivos gerados na pasta <code>dist</code> s\u00e3o os mesmos que s\u00e3o gerados pelo comando <code>npm run serve</code>. A diferen\u00e7a \u00e9 que, ao executar o comando <code>npm run serve</code>, os arquivos s\u00e3o servidos pelo servidor de desenvolvimento, que \u00e9 executado localmente. J\u00e1 ao executar o comando <code>npm run build</code>, os arquivos s\u00e3o gerados para serem servidos por um servidor web.</p> <p>Al\u00e9m disso, esses arquivos s\u00e3o otimizados para serem servidos em produ\u00e7\u00e3o. Por exemplo, os arquivos CSS e JS s\u00e3o minificados, e os arquivos de imagem s\u00e3o otimizados.</p>"},{"location":"vuejs/deploy-aplicacao/#publicacao-da-aplicacao","title":"Publica\u00e7\u00e3o da aplica\u00e7\u00e3o","text":"<p>A publica\u00e7\u00e3o da aplica\u00e7\u00e3o \u00e9 feita copiando os arquivos da pasta <code>dist</code> para o servidor web. Essa etapa pode ser feita de diversas formas, dependendo do servidor web utilizado. Por exemplo, voc\u00ea pode instalar um servidor Web usando o Ngix ou o Apache, ou voc\u00ea pode utilizar um servi\u00e7o de hospedagem de sites.</p> <p>Neste curso, vamos utilizar o servi\u00e7o de hospedagem de sites Surge. O Surge \u00e9 um servi\u00e7o de hospedagem de sites est\u00e1ticos, que permite a publica\u00e7\u00e3o de sites gratuitamente. Para utilizar o Surge, \u00e9 necess\u00e1rio ter uma aplica\u00e7\u00e3o de linha de comando instalada. Essa aplica\u00e7\u00e3o \u00e9 o Surge, que pode ser instalado com o comando:</p> <pre><code>npm install -g surge\n</code></pre> <p>Ao executar o comando <code>surge</code>, o Surge solicita o e-mail e a senha do usu\u00e1rio. Esses dados s\u00e3o utilizados para autenticar o usu\u00e1rio no servi\u00e7o. Caso o usu\u00e1rio n\u00e3o possua uma conta no Surge, o comando criar\u00e1 uma conta para o usu\u00e1rio, com os dados informados.</p> <p>Ap\u00f3s a autentica\u00e7\u00e3o, o Surge solicita o caminho da pasta que ser\u00e1 publicada. Neste caso, o caminho \u00e9 <code>dist</code>. O Surge ent\u00e3o publica a aplica\u00e7\u00e3o, e exibe a URL onde a aplica\u00e7\u00e3o foi publicada.</p> <p>Para publicar a aplica\u00e7\u00e3o, execute o comando, de prefer\u00eancia dentro da pasta <code>dist</code>:</p> <pre><code>surge\n</code></pre> <p>Algumas dicas importantes:</p> <ul> <li>Caso algum usu\u00e1rio j\u00e1 esteja autenticado no Surge, o comando <code>surge</code> publicar\u00e1 a aplica\u00e7\u00e3o para o usu\u00e1rio autenticado. Para publicar a aplica\u00e7\u00e3o para outro usu\u00e1rio, \u00e9 necess\u00e1rio deslogar do Surge, utilizando o comando <code>surge logout</code>.</li> <li>O usu\u00e1rio correto pode ser verificado executando o comando <code>surge whoami</code>. Caso o comando retorne um e-mail, significa que o usu\u00e1rio est\u00e1 autenticado. Caso o comando retorne <code>Not logged in</code>, significa que o usu\u00e1rio n\u00e3o est\u00e1 autenticado.</li> <li>Sempre que novas altera\u00e7\u00f5es forem feitas na aplica\u00e7\u00e3o, \u00e9 necess\u00e1rio executar o comando <code>npm run build</code> para gerar os arquivos est\u00e1ticos, e ent\u00e3o executar o comando <code>surge</code> para publicar a aplica\u00e7\u00e3o.</li> </ul>"},{"location":"vuejs/exercicios/","title":"Exercicios","text":""},{"location":"vuejs/exercicios/#exercicios","title":"Exerc\u00edcios","text":"<p>Para exercitar o que foi aprendido, segue uma lista de exerc\u00edcios para serem realizados.</p> <ol> <li>Altere a aplica\u00e7\u00e3o exemplo, n\u00e3o permitindo que o valor do contador seja menor que zero.</li> <li>Inclua um bot\u00e3o que reinicia o valor do contador para zero.</li> </ol> <p>Sugiro que ambos os exerc\u00edcios sejam realizados usando a API de composi\u00e7\u00e3o.</p>"},{"location":"vuejs/single-file-components/","title":"Single file components","text":""},{"location":"vuejs/single-file-components/#componentes-de-arquivo-unico-single-file-components","title":"Componentes de arquivo \u00fanico (Single-file Components)","text":"<p>Os componentes de arquivo \u00fanico (Sigle-file Components) s\u00e3o uma forma de definir componentes no VueJs. S\u00e3o componentes que s\u00e3o definidos em um \u00fanico arquivo (arquivos <code>.vue</code>), encapsulando os components l\u00f3gicos (JavaScript), de template (HTML) e de estilos (CSS).</p> <p>O arquivo <code>App.vue</code>, apresentado anteriormente, \u00e9 um exemplo de componente de arquivo \u00fanico. Nesta etapa, faremos uma nova vers\u00e3o do arquivo <code>App.vue</code> e explicando cada parte do arquivo. O que desejamos fazer \u00e9 uma p\u00e1gina simples com dois bot\u00f5es: um respons\u00e1vel por incrementar uma unidade um valor e outro por decrementar uma unidade neste mesmo valor.</p> <p>Como explicado anteriormente, um componente VueJS tem tr\u00eas partes: l\u00f3gica, template e estilos. A estrutura de um componente de arquivo \u00fanico \u00e9 a seguinte:</p> ./src/App.vue<pre><code>&lt;script&gt;\n  // L\u00f3gica do componente\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;!-- Template do componente baseado em HTML --&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\n  /* Estilos do componente baseado em CSS */\n&lt;/style&gt;\n</code></pre> <p>A parte l\u00f3gica do componentes, escrita em JavaScript ou TypeScript pode ser desenvolvida usando API de op\u00e7\u00f5es ou API de composi\u00e7\u00e3o. Estudaremos essas duas formas na pr\u00f3xima etapa.</p> <p>Na parte de template o Vue usa uma sintaxe baseada em HTML, que permite a utiliza\u00e7\u00e3o de diretivas e express\u00f5es. As diretivas s\u00e3o instru\u00e7\u00f5es especiais que s\u00e3o adicionadas ao template para alterar o comportamento da renderiza\u00e7\u00e3o. As express\u00f5es s\u00e3o trechos de c\u00f3digo que s\u00e3o avaliados e renderizados como texto.</p> <p>O exemplo abaixo mostra um componente de arquivo \u00fanico, sem a l\u00f3gica (que ser\u00e1 apresentada a seguir), um template e um estilo:</p> ./src/App.vue<pre><code>&lt;script&gt;\n  // Ser\u00e1 apresentado a seguir\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;button @click=\"incrementarContador\"&gt;Incrementar&lt;/button&gt;\n  &lt;button @click=\"decrementarContador\"&gt;Decrementar&lt;/button&gt;\n  &lt;p&gt;Valor do contador \u00e9: {{ contador }}&lt;/p&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n  button {\n    font-weight: bold;\n  }\n&lt;/style&gt;\n</code></pre> <p>No bloco de estilos, o atributo <code>scoped</code> indica que os estilos definidos neste bloco s\u00e3o aplicados apenas ao componente. Isso significa que os estilos definidos neste bloco n\u00e3o afetam outros componentes. Foi definido um estilo para o elemento <code>button</code> que indica que a fonte ser\u00e1 apresentada em negrito.</p> <p>No bloco de template, foram definidos dois bot\u00f5es e um par\u00e1grafo. O primeiro bot\u00e3o tem um evento <code>click</code> associado a uma fun\u00e7\u00e3o chamada <code>incrementarContador</code>. O segundo bot\u00e3o tem um evento <code>click</code> associado a uma fun\u00e7\u00e3o chamada <code>decrementarContador</code>. O par\u00e1grafo apresenta o valor de uma vari\u00e1vel chamada <code>contador</code>.</p> <p>Ao longo do curso, vamos estudar os detalhes que podem ser utilizados usando a sintaxe de templates do Vue.</p>"},{"location":"vuejs/single-file-components/#estilos-de-escrita-de-um-componente-de-arquivo-unico","title":"Estilos de escrita de um componente de arquivo \u00fanico","text":"<p>Quanto \u00e0 parte l\u00f3gica, existem duas formas de serem escritas: usando API de op\u00e7\u00f5es (Options API) ou usando API de composi\u00e7\u00e3o (Composition API). A API de op\u00e7\u00f5es \u00e9 a forma original de escrever um componente de arquivo \u00fanico, presente desde a primeira vers\u00e3o do VueJS. A API de composi\u00e7\u00e3o \u00e9 uma forma mais recente de escrever um componente de arquivo \u00fanico, e ser\u00e1 a que daremos prefer\u00eancia neste tutorial.</p> <p>Implementaremos a parte l\u00f3gica do exemplo que estamos desenvolvendo usando as duas formas. Em ambos os casos o resultado ser\u00e1 o mesmo. Al\u00e9m disso, as diferen\u00e7as aparecem apenas na parte l\u00f3gica, sendo que a parte de template e de estilos s\u00e3o id\u00eanticas.</p>"},{"location":"vuejs/single-file-components/#usando-api-de-opcoes","title":"Usando API de op\u00e7\u00f5es","text":"<p>Com API de op\u00e7\u00f5es, o componente \u00e9 definido usando a propriedade <code>options</code> do objeto <code>Vue</code>. A propriedade <code>options</code> \u00e9 um objeto que cont\u00e9m as propriedades <code>data</code>, <code>methods</code>, <code>computed</code>, <code>watch</code>, <code>components</code>, <code>directives</code>, <code>filters</code>, <code>mixins</code>, <code>extends</code>, <code>provide</code> e <code>inject</code>. Cada uma dessas propriedades \u00e9 respons\u00e1vel por definir um tipo de dado ou comportamento do componente.</p> <p>O c\u00f3digo abaixo mostra um exemplo de componente de arquivo \u00fanico usando API de op\u00e7\u00f5es:</p> ./src/App.vue<pre><code>&lt;script&gt;\n  export default {\n    data() {\n      return {\n        contador: 0,\n      };\n    },\n    methods: {\n      incrementarContador() {\n        this.contador++;\n      },\n      decrementarContador() {\n        this.contador--;\n      },\n    },\n    mounted() {\n      console.log(`O valor inicial do contador \u00e9 ${this.contador}.`);\n    },\n  };\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;!-- Template j\u00e1 apresentada --&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n  /* Estilos j\u00e1 apresentados */\n&lt;/style&gt;\n</code></pre> <p>Neste exemplo, note que \u00e9 exportado um objeto com v\u00e1rias propriedades. A propriedade <code>data</code> \u00e9 respons\u00e1vel por definir uma vari\u00e1vel chamada <code>contador</code> que \u00e9 inicializada com o valor <code>0</code>. Nesse caso, a sintaxe exige que <code>data</code> seja uma fun\u00e7\u00e3o que retorna um objeto. As propriedades desse objeto de retorno s\u00e3o reconhecidas pelo VueJs como vari\u00e1veis.</p> <p>A propriedade <code>methods</code> \u00e9 respons\u00e1vel por definir duas fun\u00e7\u00f5es: <code>incrementarContador</code> e <code>decrementarContador</code>. A fun\u00e7\u00e3o <code>incrementarContador</code> incrementa em uma unidade o valor da vari\u00e1vel <code>contador</code>. A fun\u00e7\u00e3o <code>decrementarContador</code> decrementa em uma unidade o valor da vari\u00e1vel <code>contador</code>. Note que no bloco de template, os eventos <code>click</code> dos bot\u00f5es est\u00e3o associados a essas fun\u00e7\u00f5es.</p> <p>A propriedade <code>mounted</code> \u00e9 respons\u00e1vel por definir uma fun\u00e7\u00e3o que ser\u00e1 executada quando o componente for montado. Neste caso, a fun\u00e7\u00e3o imprime no console o valor inicial da vari\u00e1vel <code>contador</code>.</p> <p>Dicas de uso do console</p> <p>Para visualizar os resultados no console, \u00e9 necess\u00e1rio abrir o console do navegador (F12 no Chrome).</p>"},{"location":"vuejs/single-file-components/#usando-api-de-composicao","title":"Usando API de composi\u00e7\u00e3o","text":"<p>Com API de composi\u00e7\u00e3o, a l\u00f3gica do componente \u00e9 definida usando fun\u00e7\u00f5es, chamadas de fun\u00e7\u00f5es de composi\u00e7\u00e3o. As fun\u00e7\u00f5es de composi\u00e7\u00e3o podem ser importadas de bibliotecas externas ou podem ser definidas pelo pr\u00f3prio desenvolvedor.</p> <p>A API de composi\u00e7\u00e3o \u00e9 usada tipicamente com <code>&lt;script setup&gt;</code>. O atributo <code>setup</code> \u00e9 uma propriedade especial que faz o Vue realizar transforma\u00e7\u00f5es em tempo de compila\u00e7\u00e3o que permitem usar a API de composi\u00e7\u00e3o com menos boilerplate (repeti\u00e7\u00e3o de c\u00f3digos). Por exemplo, importa\u00e7\u00f5es e vari\u00e1veis ou fun\u00e7\u00f5es declaradas no bloco de <code>&lt;script setup&gt;</code> podem ser usadas diretamente no bloco de template, sem configura\u00e7\u00f5es adicionais.</p> <p>Abaixo, temos um exemplo de componente de arquivo \u00fanico usando API de composi\u00e7\u00e3o:</p> ./src/App.vue<pre><code>&lt;script setup&gt;\n  import { ref, onMounted } from 'vue';\n\n  const contador = ref(0);\n\n  function incrementarContador() {\n    contador.value++;\n  }\n  function decrementarContador() {\n    contador.value--;\n  }\n\n  onMounted(() =&gt; {\n    console.log(`O valor inicial do contador \u00e9 ${contador.value}.`);\n  });\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;!-- Template j\u00e1 apresentada --&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n  /* Estilos j\u00e1 apresentados */\n&lt;/style&gt;\n</code></pre> <p>Neste exemplo, note que \u00e9 importada a fun\u00e7\u00e3o <code>ref</code> da biblioteca <code>vue</code>. A fun\u00e7\u00e3o <code>ref</code> \u00e9 respons\u00e1vel por criar uma vari\u00e1vel reativa (estudaremos esse conceito em breve). A vari\u00e1vel <code>contador</code> \u00e9 inicializada com o valor <code>0</code>.</p> <p>As fun\u00e7\u00f5es <code>incrementarContador</code> e <code>decrementarContador</code> s\u00e3o respons\u00e1veis por incrementar e decrementar, respectivamente, em uma unidade o valor da vari\u00e1vel <code>contador</code>. Note que no bloco de template, os eventos <code>click</code> dos bot\u00f5es est\u00e3o associados a essas fun\u00e7\u00f5es.</p> <p>Por fim, a fun\u00e7\u00e3o <code>onMounted</code> \u00e9 respons\u00e1vel por definir uma fun\u00e7\u00e3o que ser\u00e1 executada quando o componente for montado. Neste caso, a fun\u00e7\u00e3o imprime no console o valor inicial da vari\u00e1vel <code>contador</code>.</p>"},{"location":"vuejs/single-file-components/#consideracoes-importantes","title":"Considera\u00e7\u00f5es importantes","text":"<p>Ambos os exemplos apresentados acima s\u00e3o equivalentes. A diferen\u00e7a entre eles \u00e9 que o primeiro usa API de op\u00e7\u00f5es e o segundo usa API de composi\u00e7\u00e3o. Tamb\u00e9m os dois estilos de escrita da parte l\u00f3gica podem ser usados em um mesmo projeto. Na pr\u00e1tica, a API de op\u00e7\u00e3o \u00e9 constru\u00edda sobre a API de composi\u00e7\u00e3o.</p> <p>A API de op\u00e7\u00f5es \u00e9 centrada no conceito de uma inst\u00e2ncia de componente, que em geral \u00e9 mais adapt\u00e1vel aos desenvolvedores que preferem o modelo baseado em classes, oriundo da Orienta\u00e7\u00e3o a Objetos.</p> <p>A API de composi\u00e7\u00e3o \u00e9 centrada no conceito de fun\u00e7\u00f5es, que em geral \u00e9 mais adapt\u00e1vel aos desenvolvedores que preferem o modelo baseado em fun\u00e7\u00f5es, oriundo da Programa\u00e7\u00e3o Funcional.</p> <p>Mas lembre, voc\u00ea n\u00e3o precisa usar uma API ou outra. Voc\u00ea pode usar as duas APIs em um mesmo projeto, dependendo da situa\u00e7\u00e3o e complexidade do componente.</p> <p>A figura abaixo mostra o resultado da aplica\u00e7\u00e3o exemplo apresentada acima. Note que o valor inicial do contador \u00e9 impresso no console.</p> <p></p>"}]}